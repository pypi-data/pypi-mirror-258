Metadata-Version: 2.1
Name: coordinate-conversion
Version: 0.1.4.2
Summary: A Python package for converting coordinates between Cartesian, spherical, and cylindrical systems.
Author: xwebname
Author-email: xwebname@protonmail.com
License: MIT
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy

# Coordinate Conversion

Coordinate Conversion is a Python package that provides functions for converting coordinates between Cartesian, spherical, and cylindrical systems.

## Installation

You can install Coordinate Conversion using pip:

```Bash
pip install coordinate_conversion
```
## Usage

```Python
import coordinate_conversion

# Convert Cartesian coordinates to spherical
x, y, z = 1, 1, 1
r, theta, phi = coordinate_conversion.cartesian_to_spherical(x, y, z)
print("Spherical coordinates:", r, theta, phi)

# Convert spherical coordinates to Cartesian
x, y, z = coordinate_conversion.spherical_to_cartesian(r, theta, phi)
print("Back to Cartesian coordinates:", x, y, z)

# Convert Cartesian coordinates to cylindrical
rho, phi, z = coordinate_conversion.cartesian_to_cylindrical(x, y, z)
print("Cylindrical coordinates:", rho, phi, z)

# Convert cylindrical coordinates to Cartesian
x, y, z = coordinate_conversion.cylindrical_to_cartesian(rho, phi, z)
print("Back to Cartesian coordinates:", x, y, z)

# Convert spherical coordinates to cylindrical
rho, phi, z = coordinate_conversion.spherical_to_cylindrical(r, theta, phi)
print("Spherical to Cylindrical:", rho, phi, z)

# Convert cylindrical coordinates to spherical
r, theta, phi = coordinate_conversion.cylindrical_to_spherical(rho, phi, z)
print("Back to Spherical coordinates:", r, theta, phi)

# Convert GPS coordinates to Cartesian
latitude, longitude, altitude = 37.7749, -122.4194, 0
x, y, z = coordinate_conversion.gps_to_cartesian(latitude, longitude, altitude)
print("Cartesian coordinates from GPS:", x, y, z)

# Convert Cartesian coordinates back to GPS
latitude, longitude, altitude = coordinate_conversion.cartesian_to_gps(x, y, z)
print("GPS coordinates from Cartesian:", latitude, longitude, altitude)
```
