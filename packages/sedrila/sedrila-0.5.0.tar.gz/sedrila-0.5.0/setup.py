# -*- coding: utf-8 -*-
from setuptools import setup

package_dir = \
{'': 'py',
 'sdrl': 'py/sdrl',
 'sdrl.subcmd': 'py/sdrl/subcmd',
 'sdrl.tests': 'py/sdrl/tests',
 'subcmd': 'py/subcmd'}

packages = \
['py',
 'py.sdrl',
 'py.sdrl.subcmd',
 'py.sdrl.tests',
 'py.tests',
 'sdrl',
 'sdrl.subcmd',
 'sdrl.tests',
 'subcmd']

package_data = \
{'': ['*'],
 'py.sdrl.tests': ['data/*',
                   'data/sedrila-test1/*',
                   'data/sedrila-test1/.git/*',
                   'data/sedrila-test1/.git/hooks/*',
                   'data/sedrila-test1/.git/info/*',
                   'data/sedrila-test1/.git/logs/*',
                   'data/sedrila-test1/.git/logs/refs/heads/*',
                   'data/sedrila-test1/.git/logs/refs/remotes/origin/*',
                   'data/sedrila-test1/.git/objects/04/*',
                   'data/sedrila-test1/.git/objects/08/*',
                   'data/sedrila-test1/.git/objects/0d/*',
                   'data/sedrila-test1/.git/objects/0e/*',
                   'data/sedrila-test1/.git/objects/17/*',
                   'data/sedrila-test1/.git/objects/22/*',
                   'data/sedrila-test1/.git/objects/23/*',
                   'data/sedrila-test1/.git/objects/29/*',
                   'data/sedrila-test1/.git/objects/30/*',
                   'data/sedrila-test1/.git/objects/35/*',
                   'data/sedrila-test1/.git/objects/42/*',
                   'data/sedrila-test1/.git/objects/4f/*',
                   'data/sedrila-test1/.git/objects/5e/*',
                   'data/sedrila-test1/.git/objects/64/*',
                   'data/sedrila-test1/.git/objects/65/*',
                   'data/sedrila-test1/.git/objects/70/*',
                   'data/sedrila-test1/.git/objects/7a/*',
                   'data/sedrila-test1/.git/objects/7b/*',
                   'data/sedrila-test1/.git/objects/82/*',
                   'data/sedrila-test1/.git/objects/87/*',
                   'data/sedrila-test1/.git/objects/93/*',
                   'data/sedrila-test1/.git/objects/9d/*',
                   'data/sedrila-test1/.git/objects/a7/*',
                   'data/sedrila-test1/.git/objects/a9/*',
                   'data/sedrila-test1/.git/objects/b4/*',
                   'data/sedrila-test1/.git/objects/bf/*',
                   'data/sedrila-test1/.git/objects/c1/*',
                   'data/sedrila-test1/.git/objects/c2/*',
                   'data/sedrila-test1/.git/objects/c4/*',
                   'data/sedrila-test1/.git/objects/cd/*',
                   'data/sedrila-test1/.git/objects/ce/*',
                   'data/sedrila-test1/.git/objects/d6/*',
                   'data/sedrila-test1/.git/objects/e0/*',
                   'data/sedrila-test1/.git/objects/e2/*',
                   'data/sedrila-test1/.git/objects/e3/*',
                   'data/sedrila-test1/.git/objects/f2/*',
                   'data/sedrila-test1/.git/objects/pack/*',
                   'data/sedrila-test1/.git/refs/heads/*',
                   'data/sedrila-test1/.git/refs/remotes/origin/*',
                   'data/sedrila-test1/task/*'],
 'py.tests': ['input/*',
              'input/ch/*',
              'input/ch/ch1/*',
              'input/ch/ch1/myarchive.zip/*',
              'input/ch/ch1/tg11/*',
              'input/ch/ch1/tg12/*',
              'input/ch/ch1/tg13draft/*',
              'input/ch/ch2draft/*',
              'input/ch/ch2draft/tg21/*'],
 'sdrl.tests': ['data/*',
                'data/sedrila-test1/*',
                'data/sedrila-test1/.git/*',
                'data/sedrila-test1/.git/hooks/*',
                'data/sedrila-test1/.git/info/*',
                'data/sedrila-test1/.git/logs/*',
                'data/sedrila-test1/.git/logs/refs/heads/*',
                'data/sedrila-test1/.git/logs/refs/remotes/origin/*',
                'data/sedrila-test1/.git/objects/04/*',
                'data/sedrila-test1/.git/objects/08/*',
                'data/sedrila-test1/.git/objects/0d/*',
                'data/sedrila-test1/.git/objects/0e/*',
                'data/sedrila-test1/.git/objects/17/*',
                'data/sedrila-test1/.git/objects/22/*',
                'data/sedrila-test1/.git/objects/23/*',
                'data/sedrila-test1/.git/objects/29/*',
                'data/sedrila-test1/.git/objects/30/*',
                'data/sedrila-test1/.git/objects/35/*',
                'data/sedrila-test1/.git/objects/42/*',
                'data/sedrila-test1/.git/objects/4f/*',
                'data/sedrila-test1/.git/objects/5e/*',
                'data/sedrila-test1/.git/objects/64/*',
                'data/sedrila-test1/.git/objects/65/*',
                'data/sedrila-test1/.git/objects/70/*',
                'data/sedrila-test1/.git/objects/7a/*',
                'data/sedrila-test1/.git/objects/7b/*',
                'data/sedrila-test1/.git/objects/82/*',
                'data/sedrila-test1/.git/objects/87/*',
                'data/sedrila-test1/.git/objects/93/*',
                'data/sedrila-test1/.git/objects/9d/*',
                'data/sedrila-test1/.git/objects/a7/*',
                'data/sedrila-test1/.git/objects/a9/*',
                'data/sedrila-test1/.git/objects/b4/*',
                'data/sedrila-test1/.git/objects/bf/*',
                'data/sedrila-test1/.git/objects/c1/*',
                'data/sedrila-test1/.git/objects/c2/*',
                'data/sedrila-test1/.git/objects/c4/*',
                'data/sedrila-test1/.git/objects/cd/*',
                'data/sedrila-test1/.git/objects/ce/*',
                'data/sedrila-test1/.git/objects/d6/*',
                'data/sedrila-test1/.git/objects/e0/*',
                'data/sedrila-test1/.git/objects/e2/*',
                'data/sedrila-test1/.git/objects/e3/*',
                'data/sedrila-test1/.git/objects/f2/*',
                'data/sedrila-test1/.git/objects/pack/*',
                'data/sedrila-test1/.git/refs/heads/*',
                'data/sedrila-test1/.git/refs/remotes/origin/*',
                'data/sedrila-test1/task/*']}

install_requires = \
['Jinja2>=3.1,<4.0',
 'Markdown>=3.5,<4.0',
 'PyYAML>=6.0,<7.0',
 'Pygments>=2.17,<3.0',
 'argparse_subcommand>=1.1,<2.0',
 'blessed>=1.20,<2.0',
 'mdx_linkify>=2.1,<3.0',
 'requests>=2.31,<3.0',
 'rich>=13.7,<14.0']

entry_points = \
{'console_scripts': ['sedrila = sedrila:main']}

setup_kwargs = {
    'name': 'sedrila',
    'version': '0.5.0',
    'description': 'Tool infrastructure for building and running "self-driven lab" courses',
    'long_description': '# `sedrila`: Tool infrastructure for building and running "self-driven lab" courses\n\n# 1. Overview\n\n## 1.1 What is a self-driven lab course (here known as "a SeDriLa")?\n\n- There is a large number of small tasks, each worth a certain number of work hours\n- Within loose constraints, students can pick which tasks they want to work on\n- Each task results in a commit (or several) in that student\'s git repository\n- At certain times, students can submit a batch of finished tasks to an instructor or teaching assistant\n- The instructor checks some of the task\'s solution commits and then\n  either accepts or rejects the entire batch.\n- If accepted, the timevalue assigned to those tasks is booked onto the student\'s timevalue account,\n  which is also represented by a series of commits in the student\'s git repository.\n- When enough hours have accumulated there, that student has successfully finished the course.\n\nInstructor commits are signed such that they cannot be forged.\n\n\n## 1.2 `sedrila` is opinionated\n\n- It assumes that the course content is so useful and motivating for the students\n  that they are unlikely to cheat.\n- It assumes that SeDriLas are (or could become) Open Educational Resources.\n  This means that all information that is accessible to the teaching assistants \n  is also accessible to the students.\n- It takes a low-tech approach and assumes that content has a simple structure\n  because the tasks rely heavily on _external_ materials available on the web.\n  The SeDriLa itself has a simple text layout, few images of its own,\n  and no local videos or high-tech active content.  \n  The idea behind this is to make it realistic to keep the SeDriLa fresh and up-to-date over time.\n- SeDriLas are pass/fail, they are not graded, because that would be incompatible\n  with the above goals.\n\n\n## 1.3 What does the `sedrila` tool do?\n\nThe tool serves three target audiences: \nfirst course authors, then students, and finally instructors. \nCorrespondingly, it basically has three functions:\n\n- `author` generates a SeDriLa instance from a SeDriLa template.  \n  - The template is a directory tree \n    (maintained in a git repository and developed much like software by the course owners)\n    with a prescribed structure that contains all the task descriptions, written in Markdown.\n  - The instance is a directory of static HTML pages.\n  - The generation is controlled by a configuration file.\n- `student` tells the students how many hours are on their timevalue account so far\n  and helps them prepare a submission to an instructor.\n- `instructor` supports instructors when evaluating student solutions:\n  retrieving student repos, validating their submission file, \n  recording the instructor\'s feedback.\n\n\n# 2. How to use `sedrila`\n\n## 2.1 User installation (not yet implemented, TODO 3)\n\n```\npip install sedrila\n```\n(Eventually, we will probably want to use a method that results in an executable.)\n\n\n## 2.2 Usage instructions\n\nThere are separate instructions for each user group:\n\n- [Course authors](doc/authors.md) \n  who formulate tasks and decide their timevalues before a SeDriLa course starts.\n- [Students](doc/students.md) \n  who take the course.\n- [Instructors](doc/instructors.md)\n  who check solutions of tasks when students submit them.\n\n\n## 2.3 Developer installation\n\nIn case you want to make changes to sedrila yourself,\nthis is how to set up development. \nYou\'ll probably want to do this in a fresh venv.\n\n```\ngit clone git@github.com:fubinf/sedrila.git\ncd sedrila\npip install -r requirements.txt\npip install -r requirements-dev.txt\nsource /absolute/path/to/sedrila/cmd/attach_sedrila.bash.inc\nsedrila --help\n```\n\n\n# 3. Internal technical notes\n\n## 3.1 Some design decisions\n\n- We use YAML for handwritten structured data and JSON for machine-generated structured data.\n- We use Markdown as the main source language to keep authoring simple.\n- Course-level metadata (chapters and taskgroups) and course configuration data is stored in \n  a single YAML file for an easy overview.\n- Task-level metadata is stored in YAML format at the top of each task Markdown file\n  to obtain locality and to make it easier to randomize task selection when\n  creating a course instance.\n- We use a various custom Markdown extensions ("macros") for\n  - file-local table of contents;\n  - value-added integrity-checked links to tasks, taskgroups, chapters,\n    and glossary entries;\n  - embedding instructor-only content to be used for the instructor version of the webpages;\n  - embedding highlighted optional hints (with fold/unfold functionality);\n  - other preconfigured formatting, in particular for structuring the content of task descriptions\n    into background, goal, instruction, and deliverables ("submission") parts.\n- We use plain, mostly passive HTML for the generated course webpage, \n  with only very little JavaScript.\n- We support localizing a fork of a sedrila course in a manner that can avoid most\n  merge conflicts with later improvements of the original course.\n- We use a student git repository for all solution transportation and bookkeeping.\n\n\n## 3.2 Bookkeeping architecture\n\nIn a nutshell, the bookkeeping of _actual_ work hours worked by a student \nand of _"earned value"_ effort hours (called "timevalue") certified by an instructor\nis based on the following ideas:\n\n- When students commit a partial or completed task XYZ, they use a prescribed format \n  for the commit message as described on the [students page](doc/students.md).\n- A script can collect, accumulate, and tabulate these _actual_ work times for the student\'s information\n  and show them side-by-side with the timevalues (_expected_ work times).\n  The information is also useful for evidence-based improvement of the course contents.\n- When students want to show a set of solutions for tasks to an instructor,\n  they write the task names to a file `submission.yaml`\n- The instructor checks those tasks, adds checking results into that file,\n  and commits it. This commmit is cryptographcally signed.\n- `course.json` is published along with the webpages.\n  It lists all tasks with their dependencies and timevalues\n  and all instructors and their public key fingerprints.\n- The script that computes the "value earned" effort hours uses `course.json` to\n  - find all `submission.yaml checked` commits that were made by an instructor\n  - extract the list of accepted tasks from them, and\n  - tabulate those tasks and compute the sum of their timevalues.\n- That script can also tabulate what the instructor did not accept, which makes practical\n  a rule that says a task will only count if it gets accepted no later than upon second (or third?) try.\n  No such mechanism is implemented so far, though.\n\n\n## 3.3 TODO handling during development\n\nWe use this convention for the development of `sedrila`.\nIt may also be helpful for course authors if the team is small enough.\n\nIf something is incomplete, add a TODO marker with a priorization digit:\n- `TODO 1`: to be completed soon (within a few days)\n- `TODO 2`: to be completed once the prio 1 things are done (within days or a few weeks)\n- `TODO 3`: to be completed at some later time (usually several weeks or more into the future,\n  because it is big) or never (because it is not-so-important: "nice-to-have features")\n\nAdd a short description of what needs to be done. Examples:\n- `TODO 1: find proper formulation`\n- `TODO 2: restructure to use ACME lib`\n- `TODO 3: add automatic grammar correction`\n\nIf you intend to do it yourself, add your name in parens:  \n`TODO 1: find proper formulation (Lutz)`\n\nThen use the IDE global search to work through these layer-by-layer.\nDemote items to a lower priority when they become stale or remove them.\nKick out prio 3 items when they become unlikely.\n',
    'author': 'Lutz Prechelt',
    'author_email': 'prechelt@inf.fu-berlin.de',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://github.com/fubinf/sedrila',
    'package_dir': package_dir,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.11,<4.0',
}


setup(**setup_kwargs)
