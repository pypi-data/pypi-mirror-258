# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: exchanges_wrapper/api.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1b\x65xchanges_wrapper/api.proto\x12\x06martin\"*\n\x17OnBalanceUpdateResponse\x12\x0f\n\x07\x62\x61lance\x18\x01 \x01(\t\"\x83\x01\n\x19\x46\x65tchFundingWalletRequest\x12\x11\n\tclient_id\x18\x01 \x01(\x03\x12\x10\n\x08trade_id\x18\x02 \x01(\t\x12\r\n\x05\x61sset\x18\x03 \x01(\t\x12\x1a\n\x12need_btc_valuation\x18\x04 \x01(\x08\x12\x16\n\x0ereceive_window\x18\x05 \x01(\x03\"\xd0\x01\n\x1a\x46\x65tchFundingWalletResponse\x12=\n\x08\x62\x61lances\x18\x01 \x03(\x0b\x32+.martin.FetchFundingWalletResponse.Balances\x1as\n\x08\x42\x61lances\x12\r\n\x05\x61sset\x18\x01 \x01(\t\x12\x0c\n\x04\x66ree\x18\x02 \x01(\t\x12\x0e\n\x06locked\x18\x03 \x01(\t\x12\x0e\n\x06\x66reeze\x18\x04 \x01(\t\x12\x13\n\x0bwithdrawing\x18\x05 \x01(\t\x12\x15\n\rbtc_valuation\x18\x06 \x01(\t\"\xc7\x02\n\x13\x43\x61ncelOrderResponse\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x19\n\x11origClientOrderId\x18\x02 \x01(\t\x12\x0f\n\x07orderId\x18\x03 \x01(\x04\x12\x13\n\x0borderListId\x18\x04 \x01(\x05\x12\x15\n\rclientOrderId\x18\x05 \x01(\t\x12\x14\n\x0ctransactTime\x18\x06 \x01(\x04\x12\r\n\x05price\x18\x07 \x01(\t\x12\x0f\n\x07origQty\x18\x08 \x01(\t\x12\x13\n\x0b\x65xecutedQty\x18\t \x01(\t\x12\x1b\n\x13\x63ummulativeQuoteQty\x18\n \x01(\t\x12\x0e\n\x06status\x18\x0b \x01(\t\x12\x13\n\x0btimeInForce\x18\x0c \x01(\t\x12\x0c\n\x04type\x18\r \x01(\t\x12\x0c\n\x04side\x18\x0e \x01(\t\x12\x1f\n\x17selfTradePreventionMode\x18\x0f \x01(\t\"[\n\x12\x43\x61ncelOrderRequest\x12\x11\n\tclient_id\x18\x01 \x01(\x03\x12\x10\n\x08trade_id\x18\x02 \x01(\t\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x10\n\x08order_id\x18\x04 \x01(\x03\"\xf0\x02\n\x18\x43reateLimitOrderResponse\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x0f\n\x07orderId\x18\x02 \x01(\x04\x12\x13\n\x0borderListId\x18\x03 \x01(\x11\x12\x15\n\rclientOrderId\x18\x04 \x01(\t\x12\x14\n\x0ctransactTime\x18\x05 \x01(\x04\x12\r\n\x05price\x18\x06 \x01(\t\x12\x0f\n\x07origQty\x18\x07 \x01(\t\x12\x13\n\x0b\x65xecutedQty\x18\x08 \x01(\t\x12\x1b\n\x13\x63ummulativeQuoteQty\x18\t \x01(\t\x12\x0e\n\x06status\x18\n \x01(\t\x12\x13\n\x0btimeInForce\x18\x0b \x01(\t\x12\x0c\n\x04type\x18\x0c \x01(\t\x12\x0c\n\x04side\x18\r \x01(\t\x12\x12\n\nstrategyId\x18\x0e \x01(\x04\x12\x14\n\x0cstrategyType\x18\x0f \x01(\x04\x12\x13\n\x0bworkingTime\x18\x10 \x01(\x12\x12\x1f\n\x17selfTradePreventionMode\x18\x11 \x01(\t\"\x9e\x01\n\x17\x43reateLimitOrderRequest\x12\x11\n\tclient_id\x18\x01 \x01(\x03\x12\x10\n\x08trade_id\x18\x02 \x01(\t\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x10\n\x08\x62uy_side\x18\x04 \x01(\x08\x12\x10\n\x08quantity\x18\x05 \x01(\t\x12\r\n\x05price\x18\x06 \x01(\t\x12\x1b\n\x13new_client_order_id\x18\x07 \x01(\x03\"\xf8\x05\n\x15OnOrderUpdateResponse\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x17\n\x0f\x63lient_order_id\x18\x02 \x01(\t\x12\x0c\n\x04side\x18\x03 \x01(\t\x12\x12\n\norder_type\x18\x04 \x01(\t\x12\x15\n\rtime_in_force\x18\x05 \x01(\t\x12\x16\n\x0eorder_quantity\x18\x06 \x01(\t\x12\x13\n\x0border_price\x18\x07 \x01(\t\x12\x12\n\nstop_price\x18\x08 \x01(\t\x12\x18\n\x10iceberg_quantity\x18\t \x01(\t\x12\x15\n\rorder_list_id\x18\n \x01(\x11\x12\x1a\n\x12original_client_id\x18\x0b \x01(\t\x12\x16\n\x0e\x65xecution_type\x18\x0c \x01(\t\x12\x14\n\x0corder_status\x18\r \x01(\t\x12\x1b\n\x13order_reject_reason\x18\x0e \x01(\t\x12\x10\n\x08order_id\x18\x0f \x01(\x04\x12\x1e\n\x16last_executed_quantity\x18\x10 \x01(\t\x12\"\n\x1a\x63umulative_filled_quantity\x18\x11 \x01(\t\x12\x1b\n\x13last_executed_price\x18\x12 \x01(\t\x12\x19\n\x11\x63ommission_amount\x18\x13 \x01(\t\x12\x18\n\x10\x63ommission_asset\x18\x14 \x01(\t\x12\x18\n\x10transaction_time\x18\x15 \x01(\x04\x12\x10\n\x08trade_id\x18\x16 \x01(\x12\x12\x10\n\x08ignore_a\x18\x17 \x01(\x04\x12\x15\n\rin_order_book\x18\x18 \x01(\x08\x12\x15\n\ris_maker_side\x18\x19 \x01(\x08\x12\x10\n\x08ignore_b\x18\x1a \x01(\x08\x12\x1b\n\x13order_creation_time\x18\x1b \x01(\x04\x12\x1e\n\x16quote_asset_transacted\x18\x1c \x01(\t\x12#\n\x1blast_quote_asset_transacted\x18\x1d \x01(\t\x12\x1c\n\x14quote_order_quantity\x18\x1e \x01(\t\"&\n\x15OnFundsUpdateResponse\x12\r\n\x05\x66unds\x18\x01 \x01(\t\"t\n\x14OnFundsUpdateRequest\x12\x11\n\tclient_id\x18\x01 \x01(\x03\x12\x10\n\x08trade_id\x18\x02 \x01(\t\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x12\n\nbase_asset\x18\x04 \x01(\t\x12\x13\n\x0bquote_asset\x18\x05 \x01(\t\"1\n\x0eSimpleResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0e\n\x06result\x18\x02 \x01(\t\"e\n\x16OnTickerUpdateResponse\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x12\n\nopen_price\x18\x02 \x01(\t\x12\x13\n\x0b\x63lose_price\x18\x03 \x01(\t\x12\x12\n\nevent_time\x18\x04 \x01(\x04\"\xbd\x02\n\x18\x41\x63\x63ountTradeListResponse\x12\x35\n\x05items\x18\x01 \x03(\x0b\x32&.martin.AccountTradeListResponse.Trade\x1a\xe9\x01\n\x05Trade\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\x04\x12\x0f\n\x07orderId\x18\x03 \x01(\x04\x12\x13\n\x0borderListId\x18\x04 \x01(\x11\x12\r\n\x05price\x18\x05 \x01(\t\x12\x0b\n\x03qty\x18\x06 \x01(\t\x12\x10\n\x08quoteQty\x18\x07 \x01(\t\x12\x12\n\ncommission\x18\x08 \x01(\t\x12\x17\n\x0f\x63ommissionAsset\x18\t \x01(\t\x12\x0c\n\x04time\x18\n \x01(\x04\x12\x0f\n\x07isBuyer\x18\x0b \x01(\x08\x12\x0f\n\x07isMaker\x18\x0c \x01(\x08\x12\x13\n\x0bisBestMatch\x18\r \x01(\x08\"q\n\x17\x41\x63\x63ountTradeListRequest\x12\x11\n\tclient_id\x18\x01 \x01(\x03\x12\x10\n\x08trade_id\x18\x02 \x01(\t\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\r\n\x05limit\x18\x04 \x01(\r\x12\x12\n\nstart_time\x18\x05 \x01(\x03\"%\n\x13\x46\x65tchKlinesResponse\x12\x0e\n\x06klines\x18\x01 \x03(\t\"J\n\x16OnKlinesUpdateResponse\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x10\n\x08interval\x18\x02 \x01(\t\x12\x0e\n\x06\x63\x61ndle\x18\x03 \x01(\t\"j\n\x12\x46\x65tchKlinesRequest\x12\x11\n\tclient_id\x18\x01 \x01(\x03\x12\x10\n\x08trade_id\x18\x02 \x01(\t\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x10\n\x08interval\x18\x04 \x01(\t\x12\r\n\x05limit\x18\x05 \x01(\r\"\xb7\x03\n(FetchTickerPriceChangeStatisticsResponse\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x13\n\x0bpriceChange\x18\x02 \x01(\t\x12\x1a\n\x12priceChangePercent\x18\x03 \x01(\t\x12\x18\n\x10weightedAvgPrice\x18\x04 \x01(\t\x12\x16\n\x0eprevClosePrice\x18\x05 \x01(\t\x12\x11\n\tlastPrice\x18\x06 \x01(\t\x12\x0f\n\x07lastQty\x18\x07 \x01(\t\x12\x10\n\x08\x62idPrice\x18\x08 \x01(\t\x12\x0e\n\x06\x62idQty\x18\t \x01(\t\x12\x10\n\x08\x61skPrice\x18\n \x01(\t\x12\x0e\n\x06\x61skQty\x18\x0b \x01(\t\x12\x11\n\topenPrice\x18\x0c \x01(\t\x12\x11\n\thighPrice\x18\r \x01(\t\x12\x10\n\x08lowPrice\x18\x0e \x01(\t\x12\x0e\n\x06volume\x18\x0f \x01(\t\x12\x13\n\x0bquoteVolume\x18\x10 \x01(\t\x12\x10\n\x08openTime\x18\x11 \x01(\x04\x12\x11\n\tcloseTime\x18\x12 \x01(\x04\x12\x0f\n\x07\x66irstId\x18\x13 \x01(\x04\x12\x0e\n\x06lastId\x18\x14 \x01(\x04\x12\r\n\x05\x63ount\x18\x15 \x01(\x04\"?\n\x1e\x46\x65tchSymbolPriceTickerResponse\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\r\n\x05price\x18\x02 \x01(\t\"J\n\x16\x46\x65tchOrderBookResponse\x12\x14\n\x0clastUpdateId\x18\x01 \x01(\x04\x12\x0c\n\x04\x62ids\x18\x02 \x03(\t\x12\x0c\n\x04\x61sks\x18\x03 \x03(\t\"\x96\x01\n\x1b\x46\x65tchAccountBalanceResponse\x12>\n\x08\x62\x61lances\x18\x01 \x03(\x0b\x32,.martin.FetchAccountBalanceResponse.Balances\x1a\x37\n\x08\x42\x61lances\x12\r\n\x05\x61sset\x18\x01 \x01(\t\x12\x0c\n\x04\x66ree\x18\x02 \x01(\t\x12\x0e\n\x06locked\x18\x03 \x01(\t\"\xb3\x15\n\x1f\x46\x65tchExchangeInfoSymbolResponse\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x11\n\tbaseAsset\x18\x03 \x01(\t\x12\x1a\n\x12\x62\x61seAssetPrecision\x18\x04 \x01(\r\x12\x12\n\nquoteAsset\x18\x05 \x01(\t\x12\x1b\n\x13quoteAssetPrecision\x18\x06 \x01(\r\x12\x1f\n\x17\x62\x61seCommissionPrecision\x18\x07 \x01(\r\x12 \n\x18quoteCommissionPrecision\x18\x08 \x01(\r\x12\x12\n\norderTypes\x18\t \x03(\t\x12\x16\n\x0eicebergAllowed\x18\n \x01(\x08\x12\x12\n\nocoAllowed\x18\x0b \x01(\x08\x12\"\n\x1aquoteOrderQtyMarketAllowed\x18\x0c \x01(\x08\x12\x19\n\x11\x61llowTrailingStop\x18\r \x01(\x08\x12\x1c\n\x14\x63\x61ncelReplaceAllowed\x18\x0e \x01(\x08\x12\x1c\n\x14isSpotTradingAllowed\x18\x0f \x01(\x08\x12\x1e\n\x16isMarginTradingAllowed\x18\x10 \x01(\x08\x12@\n\x07\x66ilters\x18\x11 \x01(\x0b\x32/.martin.FetchExchangeInfoSymbolResponse.Filters\x12\x13\n\x0bpermissions\x18\x12 \x03(\t\x12&\n\x1e\x64\x65\x66\x61ultSelfTradePreventionMode\x18\x13 \x01(\t\x12\'\n\x1f\x61llowedSelfTradePreventionModes\x18\x14 \x03(\t\x1a\xc9\x10\n\x07\x46ilters\x12V\n\x0cprice_filter\x18\x01 \x01(\x0b\x32;.martin.FetchExchangeInfoSymbolResponse.Filters.PriceFilterH\x00\x88\x01\x01\x12X\n\rpercent_price\x18\x02 \x01(\x0b\x32<.martin.FetchExchangeInfoSymbolResponse.Filters.PercentPriceH\x01\x88\x01\x01\x12N\n\x08lot_size\x18\x03 \x01(\x0b\x32\x37.martin.FetchExchangeInfoSymbolResponse.Filters.LotSizeH\x02\x88\x01\x01\x12V\n\x0cmin_notional\x18\x04 \x01(\x0b\x32;.martin.FetchExchangeInfoSymbolResponse.Filters.MinNotionalH\x03\x88\x01\x01\x12X\n\riceberg_parts\x18\x05 \x01(\x0b\x32<.martin.FetchExchangeInfoSymbolResponse.Filters.IcebergPartsH\x04\x88\x01\x01\x12[\n\x0fmarket_lot_size\x18\x06 \x01(\x0b\x32=.martin.FetchExchangeInfoSymbolResponse.Filters.MarketLotSizeH\x05\x88\x01\x01\x12Y\n\x0emax_num_orders\x18\x07 \x01(\x0b\x32<.martin.FetchExchangeInfoSymbolResponse.Filters.MaxNumOrdersH\x06\x88\x01\x01\x12\x62\n\x13max_num_algo_orders\x18\x08 \x01(\x0b\x32@.martin.FetchExchangeInfoSymbolResponse.Filters.MaxNumAlgoOrdersH\x07\x88\x01\x01\x12h\n\x16max_num_iceberg_orders\x18\t \x01(\x0b\x32\x43.martin.FetchExchangeInfoSymbolResponse.Filters.MaxNumIcebergOrdersH\x08\x88\x01\x01\x12V\n\x0cmax_position\x18\n \x01(\x0b\x32;.martin.FetchExchangeInfoSymbolResponse.Filters.MaxPositionH\t\x88\x01\x01\x12O\n\x08notional\x18\x0b \x01(\x0b\x32\x38.martin.FetchExchangeInfoSymbolResponse.Filters.NotionalH\n\x88\x01\x01\x1aW\n\x0bPriceFilter\x12\x12\n\nfilterType\x18\x01 \x01(\t\x12\x10\n\x08minPrice\x18\x02 \x01(\t\x12\x10\n\x08maxPrice\x18\x03 \x01(\t\x12\x10\n\x08tickSize\x18\x04 \x01(\t\x1a\x66\n\x0cPercentPrice\x12\x12\n\nfilterType\x18\x01 \x01(\t\x12\x14\n\x0cmultiplierUp\x18\x02 \x01(\t\x12\x16\n\x0emultiplierDown\x18\x03 \x01(\t\x12\x14\n\x0c\x61vgPriceMins\x18\x04 \x01(\r\x1aO\n\x07LotSize\x12\x12\n\nfilterType\x18\x01 \x01(\t\x12\x0e\n\x06minQty\x18\x02 \x01(\t\x12\x0e\n\x06maxQty\x18\x03 \x01(\t\x12\x10\n\x08stepSize\x18\x04 \x01(\t\x1a\x63\n\x0bMinNotional\x12\x12\n\nfilterType\x18\x01 \x01(\t\x12\x13\n\x0bminNotional\x18\x02 \x01(\t\x12\x15\n\rapplyToMarket\x18\x03 \x01(\x08\x12\x14\n\x0c\x61vgPriceMins\x18\x04 \x01(\r\x1a\x31\n\x0cIcebergParts\x12\x12\n\nfilterType\x18\x01 \x01(\t\x12\r\n\x05limit\x18\x02 \x01(\r\x1aU\n\rMarketLotSize\x12\x12\n\nfilterType\x18\x01 \x01(\t\x12\x0e\n\x06minQty\x18\x02 \x01(\t\x12\x0e\n\x06maxQty\x18\x03 \x01(\t\x12\x10\n\x08stepSize\x18\x04 \x01(\t\x1a\x38\n\x0cMaxNumOrders\x12\x12\n\nfilterType\x18\x01 \x01(\t\x12\x14\n\x0cmaxNumOrders\x18\x02 \x01(\r\x1a@\n\x10MaxNumAlgoOrders\x12\x12\n\nfilterType\x18\x01 \x01(\t\x12\x18\n\x10maxNumAlgoOrders\x18\x02 \x01(\r\x1a\x46\n\x13MaxNumIcebergOrders\x12\x12\n\nfilterType\x18\x01 \x01(\t\x12\x1b\n\x13maxNumIcebergOrders\x18\x02 \x01(\r\x1a\x36\n\x0bMaxPosition\x12\x12\n\nfilterType\x18\x01 \x01(\t\x12\x13\n\x0bmaxPosition\x18\x02 \x01(\t\x1a\x92\x01\n\x08Notional\x12\x12\n\nfilterType\x18\x01 \x01(\t\x12\x13\n\x0bminNotional\x18\x02 \x01(\t\x12\x18\n\x10\x61pplyMinToMarket\x18\x03 \x01(\x08\x12\x13\n\x0bmaxNotional\x18\x04 \x01(\t\x12\x18\n\x10\x61pplyMaxToMarket\x18\x05 \x01(\x08\x12\x14\n\x0c\x61vgPriceMins\x18\x06 \x01(\rB\x0f\n\r_price_filterB\x10\n\x0e_percent_priceB\x0b\n\t_lot_sizeB\x0f\n\r_min_notionalB\x10\n\x0e_iceberg_partsB\x12\n\x10_market_lot_sizeB\x11\n\x0f_max_num_ordersB\x16\n\x14_max_num_algo_ordersB\x19\n\x17_max_num_iceberg_ordersB\x0f\n\r_max_positionB\x0b\n\t_notional\"\x8f\x01\n\x11\x46\x65tchOrderRequest\x12\x11\n\tclient_id\x18\x01 \x01(\x03\x12\x10\n\x08trade_id\x18\x02 \x01(\t\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x10\n\x08order_id\x18\x04 \x01(\x03\x12\x17\n\x0f\x63lient_order_id\x18\x05 \x01(\t\x12\x1a\n\x12\x66illed_update_call\x18\x06 \x01(\x08\"\xa1\x03\n\x12\x46\x65tchOrderResponse\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x0f\n\x07orderId\x18\x02 \x01(\x04\x12\x13\n\x0borderListId\x18\x03 \x01(\x11\x12\x15\n\rclientOrderId\x18\x04 \x01(\t\x12\r\n\x05price\x18\x05 \x01(\t\x12\x0f\n\x07origQty\x18\x06 \x01(\t\x12\x13\n\x0b\x65xecutedQty\x18\x07 \x01(\t\x12\x1b\n\x13\x63ummulativeQuoteQty\x18\x08 \x01(\t\x12\x0e\n\x06status\x18\t \x01(\t\x12\x13\n\x0btimeInForce\x18\n \x01(\t\x12\x0c\n\x04type\x18\x0b \x01(\t\x12\x0c\n\x04side\x18\x0c \x01(\t\x12\x11\n\tstopPrice\x18\r \x01(\t\x12\x12\n\nicebergQty\x18\x0e \x01(\t\x12\x0c\n\x04time\x18\x0f \x01(\x04\x12\x12\n\nupdateTime\x18\x10 \x01(\x04\x12\x11\n\tisWorking\x18\x11 \x01(\x08\x12\x13\n\x0bworkingTime\x18\x12 \x01(\x12\x12\x19\n\x11origQuoteOrderQty\x18\x13 \x01(\t\x12\x1f\n\x17selfTradePreventionMode\x18\x14 \x01(\t\"\xfc\x03\n\x17\x46\x65tchOpenOrdersResponse\x12\x14\n\x0crate_limiter\x18\x01 \x01(\x05\x12\x34\n\x05items\x18\x02 \x03(\x0b\x32%.martin.FetchOpenOrdersResponse.Order\x1a\x94\x03\n\x05Order\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x0f\n\x07orderId\x18\x02 \x01(\x04\x12\x13\n\x0borderListId\x18\x03 \x01(\x11\x12\x15\n\rclientOrderId\x18\x04 \x01(\t\x12\r\n\x05price\x18\x05 \x01(\t\x12\x0f\n\x07origQty\x18\x06 \x01(\t\x12\x13\n\x0b\x65xecutedQty\x18\x07 \x01(\t\x12\x1b\n\x13\x63ummulativeQuoteQty\x18\x08 \x01(\t\x12\x0e\n\x06status\x18\t \x01(\t\x12\x13\n\x0btimeInForce\x18\n \x01(\t\x12\x0c\n\x04type\x18\x0b \x01(\t\x12\x0c\n\x04side\x18\x0c \x01(\t\x12\x11\n\tstopPrice\x18\r \x01(\t\x12\x12\n\nicebergQty\x18\x0e \x01(\t\x12\x0c\n\x04time\x18\x0f \x01(\x04\x12\x12\n\nupdateTime\x18\x10 \x01(\x04\x12\x11\n\tisWorking\x18\x11 \x01(\x08\x12\x19\n\x11origQuoteOrderQty\x18\x12 \x01(\t\x12\x13\n\x0bworkingTime\x18\x13 \x01(\x12\x12\x1f\n\x17selfTradePreventionMode\x18\x14 \x01(\t\"T\n\rMarketRequest\x12\x11\n\tclient_id\x18\x01 \x01(\x03\x12\x10\n\x08trade_id\x18\x02 \x01(\t\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x0e\n\x06\x61mount\x18\x04 \x01(\t\"\xa0\x01\n\x12StartStreamRequest\x12\x11\n\tclient_id\x18\x01 \x01(\x03\x12\x10\n\x08trade_id\x18\x02 \x01(\t\x12\x0e\n\x06symbol\x18\x03 \x01(\t\x12\x1b\n\x13market_stream_count\x18\x04 \x01(\x05\x12\x19\n\x11user_stream_count\x18\x05 \x01(\x05\x12\x1d\n\x15update_max_queue_size\x18\x06 \x01(\x08\"k\n\x1bOpenClientConnectionRequest\x12\x10\n\x08trade_id\x18\x01 \x01(\t\x12\x14\n\x0c\x61\x63\x63ount_name\x18\x02 \x01(\t\x12\x14\n\x0crate_limiter\x18\x03 \x01(\x05\x12\x0e\n\x06symbol\x18\x04 \x01(\t\"z\n\x16OpenClientConnectionId\x12\x11\n\tclient_id\x18\x01 \x01(\x03\x12\x10\n\x08trade_id\x18\x02 \x01(\t\x12\x13\n\x0bsrv_version\x18\x03 \x01(\t\x12\x14\n\x0crate_limiter\x18\x04 \x01(\x05\x12\x10\n\x08\x65xchange\x18\x05 \x01(\t\"=\n\x16\x46\x65tchServerTimeRequest\x12\x11\n\tclient_id\x18\x01 \x01(\x03\x12\x10\n\x08trade_id\x18\x02 \x01(\t\".\n\x17\x46\x65tchServerTimeResponse\x12\x13\n\x0bserver_time\x18\x01 \x01(\x04\x32\x87\x11\n\x06Martin\x12]\n\x14OpenClientConnection\x12#.martin.OpenClientConnectionRequest\x1a\x1e.martin.OpenClientConnectionId\"\x00\x12T\n\x0f\x46\x65tchServerTime\x12\x1e.martin.OpenClientConnectionId\x1a\x1f.martin.FetchServerTimeResponse\"\x00\x12K\n\x0f\x46\x65tchOpenOrders\x12\x15.martin.MarketRequest\x1a\x1f.martin.FetchOpenOrdersResponse\"\x00\x12\x42\n\x0f\x43\x61ncelAllOrders\x12\x15.martin.MarketRequest\x1a\x16.martin.SimpleResponse\"\x00\x12[\n\x17\x46\x65tchExchangeInfoSymbol\x12\x15.martin.MarketRequest\x1a\'.martin.FetchExchangeInfoSymbolResponse\"\x00\x12`\n\x17\x46\x65tchAccountInformation\x12\x1e.martin.OpenClientConnectionId\x1a#.martin.FetchAccountBalanceResponse\"\x00\x12I\n\x0e\x46\x65tchOrderBook\x12\x15.martin.MarketRequest\x1a\x1e.martin.FetchOrderBookResponse\"\x00\x12Y\n\x16\x46\x65tchSymbolPriceTicker\x12\x15.martin.MarketRequest\x1a&.martin.FetchSymbolPriceTickerResponse\"\x00\x12m\n FetchTickerPriceChangeStatistics\x12\x15.martin.MarketRequest\x1a\x30.martin.FetchTickerPriceChangeStatisticsResponse\"\x00\x12H\n\x0b\x46\x65tchKlines\x12\x1a.martin.FetchKlinesRequest\x1a\x1b.martin.FetchKlinesResponse\"\x00\x12\\\n\x15\x46\x65tchAccountTradeList\x12\x1f.martin.AccountTradeListRequest\x1a .martin.AccountTradeListResponse\"\x00\x12K\n\x0eOnTickerUpdate\x12\x15.martin.MarketRequest\x1a\x1e.martin.OnTickerUpdateResponse\"\x00\x30\x01\x12N\n\x11OnOrderBookUpdate\x12\x15.martin.MarketRequest\x1a\x1e.martin.FetchOrderBookResponse\"\x00\x30\x01\x12=\n\nStopStream\x12\x15.martin.MarketRequest\x1a\x16.martin.SimpleResponse\"\x00\x12\x43\n\x0bStartStream\x12\x1a.martin.StartStreamRequest\x1a\x16.martin.SimpleResponse\"\x00\x12P\n\rOnFundsUpdate\x12\x1c.martin.OnFundsUpdateRequest\x1a\x1d.martin.OnFundsUpdateResponse\"\x00\x30\x01\x12M\n\x0fOnBalanceUpdate\x12\x15.martin.MarketRequest\x1a\x1f.martin.OnBalanceUpdateResponse\"\x00\x30\x01\x12\x42\n\rOnOrderUpdate\x12\x15.martin.MarketRequest\x1a\x16.martin.SimpleResponse\"\x00\x30\x01\x12W\n\x10\x43reateLimitOrder\x12\x1f.martin.CreateLimitOrderRequest\x1a .martin.CreateLimitOrderResponse\"\x00\x12H\n\x0b\x43\x61ncelOrder\x12\x1a.martin.CancelOrderRequest\x1a\x1b.martin.CancelOrderResponse\"\x00\x12\x45\n\nFetchOrder\x12\x19.martin.FetchOrderRequest\x1a\x1a.martin.FetchOrderResponse\"\x00\x12J\n\x0eResetRateLimit\x12\x1e.martin.OpenClientConnectionId\x1a\x16.martin.SimpleResponse\"\x00\x12P\n\x0eOnKlinesUpdate\x12\x1a.martin.FetchKlinesRequest\x1a\x1e.martin.OnKlinesUpdateResponse\"\x00\x30\x01\x12]\n\x12\x46\x65tchFundingWallet\x12!.martin.FetchFundingWalletRequest\x1a\".martin.FetchFundingWalletResponse\"\x00\x12\x43\n\x10TransferToMaster\x12\x15.martin.MarketRequest\x1a\x16.martin.SimpleResponse\"\x00\x12>\n\x0b\x43heckStream\x12\x15.martin.MarketRequest\x1a\x16.martin.SimpleResponse\"\x00\x12I\n\x16OneClickArrivalDeposit\x12\x15.martin.MarketRequest\x1a\x16.martin.SimpleResponse\"\x00\x62\x06proto3')



_ONBALANCEUPDATERESPONSE = DESCRIPTOR.message_types_by_name['OnBalanceUpdateResponse']
_FETCHFUNDINGWALLETREQUEST = DESCRIPTOR.message_types_by_name['FetchFundingWalletRequest']
_FETCHFUNDINGWALLETRESPONSE = DESCRIPTOR.message_types_by_name['FetchFundingWalletResponse']
_FETCHFUNDINGWALLETRESPONSE_BALANCES = _FETCHFUNDINGWALLETRESPONSE.nested_types_by_name['Balances']
_CANCELORDERRESPONSE = DESCRIPTOR.message_types_by_name['CancelOrderResponse']
_CANCELORDERREQUEST = DESCRIPTOR.message_types_by_name['CancelOrderRequest']
_CREATELIMITORDERRESPONSE = DESCRIPTOR.message_types_by_name['CreateLimitOrderResponse']
_CREATELIMITORDERREQUEST = DESCRIPTOR.message_types_by_name['CreateLimitOrderRequest']
_ONORDERUPDATERESPONSE = DESCRIPTOR.message_types_by_name['OnOrderUpdateResponse']
_ONFUNDSUPDATERESPONSE = DESCRIPTOR.message_types_by_name['OnFundsUpdateResponse']
_ONFUNDSUPDATEREQUEST = DESCRIPTOR.message_types_by_name['OnFundsUpdateRequest']
_SIMPLERESPONSE = DESCRIPTOR.message_types_by_name['SimpleResponse']
_ONTICKERUPDATERESPONSE = DESCRIPTOR.message_types_by_name['OnTickerUpdateResponse']
_ACCOUNTTRADELISTRESPONSE = DESCRIPTOR.message_types_by_name['AccountTradeListResponse']
_ACCOUNTTRADELISTRESPONSE_TRADE = _ACCOUNTTRADELISTRESPONSE.nested_types_by_name['Trade']
_ACCOUNTTRADELISTREQUEST = DESCRIPTOR.message_types_by_name['AccountTradeListRequest']
_FETCHKLINESRESPONSE = DESCRIPTOR.message_types_by_name['FetchKlinesResponse']
_ONKLINESUPDATERESPONSE = DESCRIPTOR.message_types_by_name['OnKlinesUpdateResponse']
_FETCHKLINESREQUEST = DESCRIPTOR.message_types_by_name['FetchKlinesRequest']
_FETCHTICKERPRICECHANGESTATISTICSRESPONSE = DESCRIPTOR.message_types_by_name['FetchTickerPriceChangeStatisticsResponse']
_FETCHSYMBOLPRICETICKERRESPONSE = DESCRIPTOR.message_types_by_name['FetchSymbolPriceTickerResponse']
_FETCHORDERBOOKRESPONSE = DESCRIPTOR.message_types_by_name['FetchOrderBookResponse']
_FETCHACCOUNTBALANCERESPONSE = DESCRIPTOR.message_types_by_name['FetchAccountBalanceResponse']
_FETCHACCOUNTBALANCERESPONSE_BALANCES = _FETCHACCOUNTBALANCERESPONSE.nested_types_by_name['Balances']
_FETCHEXCHANGEINFOSYMBOLRESPONSE = DESCRIPTOR.message_types_by_name['FetchExchangeInfoSymbolResponse']
_FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS = _FETCHEXCHANGEINFOSYMBOLRESPONSE.nested_types_by_name['Filters']
_FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_PRICEFILTER = _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS.nested_types_by_name['PriceFilter']
_FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_PERCENTPRICE = _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS.nested_types_by_name['PercentPrice']
_FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_LOTSIZE = _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS.nested_types_by_name['LotSize']
_FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MINNOTIONAL = _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS.nested_types_by_name['MinNotional']
_FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_ICEBERGPARTS = _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS.nested_types_by_name['IcebergParts']
_FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MARKETLOTSIZE = _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS.nested_types_by_name['MarketLotSize']
_FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXNUMORDERS = _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS.nested_types_by_name['MaxNumOrders']
_FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXNUMALGOORDERS = _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS.nested_types_by_name['MaxNumAlgoOrders']
_FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXNUMICEBERGORDERS = _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS.nested_types_by_name['MaxNumIcebergOrders']
_FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXPOSITION = _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS.nested_types_by_name['MaxPosition']
_FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_NOTIONAL = _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS.nested_types_by_name['Notional']
_FETCHORDERREQUEST = DESCRIPTOR.message_types_by_name['FetchOrderRequest']
_FETCHORDERRESPONSE = DESCRIPTOR.message_types_by_name['FetchOrderResponse']
_FETCHOPENORDERSRESPONSE = DESCRIPTOR.message_types_by_name['FetchOpenOrdersResponse']
_FETCHOPENORDERSRESPONSE_ORDER = _FETCHOPENORDERSRESPONSE.nested_types_by_name['Order']
_MARKETREQUEST = DESCRIPTOR.message_types_by_name['MarketRequest']
_STARTSTREAMREQUEST = DESCRIPTOR.message_types_by_name['StartStreamRequest']
_OPENCLIENTCONNECTIONREQUEST = DESCRIPTOR.message_types_by_name['OpenClientConnectionRequest']
_OPENCLIENTCONNECTIONID = DESCRIPTOR.message_types_by_name['OpenClientConnectionId']
_FETCHSERVERTIMEREQUEST = DESCRIPTOR.message_types_by_name['FetchServerTimeRequest']
_FETCHSERVERTIMERESPONSE = DESCRIPTOR.message_types_by_name['FetchServerTimeResponse']
OnBalanceUpdateResponse = _reflection.GeneratedProtocolMessageType('OnBalanceUpdateResponse', (_message.Message,), {
  'DESCRIPTOR' : _ONBALANCEUPDATERESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.OnBalanceUpdateResponse)
  })
_sym_db.RegisterMessage(OnBalanceUpdateResponse)

FetchFundingWalletRequest = _reflection.GeneratedProtocolMessageType('FetchFundingWalletRequest', (_message.Message,), {
  'DESCRIPTOR' : _FETCHFUNDINGWALLETREQUEST,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchFundingWalletRequest)
  })
_sym_db.RegisterMessage(FetchFundingWalletRequest)

FetchFundingWalletResponse = _reflection.GeneratedProtocolMessageType('FetchFundingWalletResponse', (_message.Message,), {

  'Balances' : _reflection.GeneratedProtocolMessageType('Balances', (_message.Message,), {
    'DESCRIPTOR' : _FETCHFUNDINGWALLETRESPONSE_BALANCES,
    '__module__' : 'exchanges_wrapper.api_pb2'
    # @@protoc_insertion_point(class_scope:martin.FetchFundingWalletResponse.Balances)
    })
  ,
  'DESCRIPTOR' : _FETCHFUNDINGWALLETRESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchFundingWalletResponse)
  })
_sym_db.RegisterMessage(FetchFundingWalletResponse)
_sym_db.RegisterMessage(FetchFundingWalletResponse.Balances)

CancelOrderResponse = _reflection.GeneratedProtocolMessageType('CancelOrderResponse', (_message.Message,), {
  'DESCRIPTOR' : _CANCELORDERRESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.CancelOrderResponse)
  })
_sym_db.RegisterMessage(CancelOrderResponse)

CancelOrderRequest = _reflection.GeneratedProtocolMessageType('CancelOrderRequest', (_message.Message,), {
  'DESCRIPTOR' : _CANCELORDERREQUEST,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.CancelOrderRequest)
  })
_sym_db.RegisterMessage(CancelOrderRequest)

CreateLimitOrderResponse = _reflection.GeneratedProtocolMessageType('CreateLimitOrderResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATELIMITORDERRESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.CreateLimitOrderResponse)
  })
_sym_db.RegisterMessage(CreateLimitOrderResponse)

CreateLimitOrderRequest = _reflection.GeneratedProtocolMessageType('CreateLimitOrderRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATELIMITORDERREQUEST,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.CreateLimitOrderRequest)
  })
_sym_db.RegisterMessage(CreateLimitOrderRequest)

OnOrderUpdateResponse = _reflection.GeneratedProtocolMessageType('OnOrderUpdateResponse', (_message.Message,), {
  'DESCRIPTOR' : _ONORDERUPDATERESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.OnOrderUpdateResponse)
  })
_sym_db.RegisterMessage(OnOrderUpdateResponse)

OnFundsUpdateResponse = _reflection.GeneratedProtocolMessageType('OnFundsUpdateResponse', (_message.Message,), {
  'DESCRIPTOR' : _ONFUNDSUPDATERESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.OnFundsUpdateResponse)
  })
_sym_db.RegisterMessage(OnFundsUpdateResponse)

OnFundsUpdateRequest = _reflection.GeneratedProtocolMessageType('OnFundsUpdateRequest', (_message.Message,), {
  'DESCRIPTOR' : _ONFUNDSUPDATEREQUEST,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.OnFundsUpdateRequest)
  })
_sym_db.RegisterMessage(OnFundsUpdateRequest)

SimpleResponse = _reflection.GeneratedProtocolMessageType('SimpleResponse', (_message.Message,), {
  'DESCRIPTOR' : _SIMPLERESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.SimpleResponse)
  })
_sym_db.RegisterMessage(SimpleResponse)

OnTickerUpdateResponse = _reflection.GeneratedProtocolMessageType('OnTickerUpdateResponse', (_message.Message,), {
  'DESCRIPTOR' : _ONTICKERUPDATERESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.OnTickerUpdateResponse)
  })
_sym_db.RegisterMessage(OnTickerUpdateResponse)

AccountTradeListResponse = _reflection.GeneratedProtocolMessageType('AccountTradeListResponse', (_message.Message,), {

  'Trade' : _reflection.GeneratedProtocolMessageType('Trade', (_message.Message,), {
    'DESCRIPTOR' : _ACCOUNTTRADELISTRESPONSE_TRADE,
    '__module__' : 'exchanges_wrapper.api_pb2'
    # @@protoc_insertion_point(class_scope:martin.AccountTradeListResponse.Trade)
    })
  ,
  'DESCRIPTOR' : _ACCOUNTTRADELISTRESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.AccountTradeListResponse)
  })
_sym_db.RegisterMessage(AccountTradeListResponse)
_sym_db.RegisterMessage(AccountTradeListResponse.Trade)

AccountTradeListRequest = _reflection.GeneratedProtocolMessageType('AccountTradeListRequest', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNTTRADELISTREQUEST,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.AccountTradeListRequest)
  })
_sym_db.RegisterMessage(AccountTradeListRequest)

FetchKlinesResponse = _reflection.GeneratedProtocolMessageType('FetchKlinesResponse', (_message.Message,), {
  'DESCRIPTOR' : _FETCHKLINESRESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchKlinesResponse)
  })
_sym_db.RegisterMessage(FetchKlinesResponse)

OnKlinesUpdateResponse = _reflection.GeneratedProtocolMessageType('OnKlinesUpdateResponse', (_message.Message,), {
  'DESCRIPTOR' : _ONKLINESUPDATERESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.OnKlinesUpdateResponse)
  })
_sym_db.RegisterMessage(OnKlinesUpdateResponse)

FetchKlinesRequest = _reflection.GeneratedProtocolMessageType('FetchKlinesRequest', (_message.Message,), {
  'DESCRIPTOR' : _FETCHKLINESREQUEST,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchKlinesRequest)
  })
_sym_db.RegisterMessage(FetchKlinesRequest)

FetchTickerPriceChangeStatisticsResponse = _reflection.GeneratedProtocolMessageType('FetchTickerPriceChangeStatisticsResponse', (_message.Message,), {
  'DESCRIPTOR' : _FETCHTICKERPRICECHANGESTATISTICSRESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchTickerPriceChangeStatisticsResponse)
  })
_sym_db.RegisterMessage(FetchTickerPriceChangeStatisticsResponse)

FetchSymbolPriceTickerResponse = _reflection.GeneratedProtocolMessageType('FetchSymbolPriceTickerResponse', (_message.Message,), {
  'DESCRIPTOR' : _FETCHSYMBOLPRICETICKERRESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchSymbolPriceTickerResponse)
  })
_sym_db.RegisterMessage(FetchSymbolPriceTickerResponse)

FetchOrderBookResponse = _reflection.GeneratedProtocolMessageType('FetchOrderBookResponse', (_message.Message,), {
  'DESCRIPTOR' : _FETCHORDERBOOKRESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchOrderBookResponse)
  })
_sym_db.RegisterMessage(FetchOrderBookResponse)

FetchAccountBalanceResponse = _reflection.GeneratedProtocolMessageType('FetchAccountBalanceResponse', (_message.Message,), {

  'Balances' : _reflection.GeneratedProtocolMessageType('Balances', (_message.Message,), {
    'DESCRIPTOR' : _FETCHACCOUNTBALANCERESPONSE_BALANCES,
    '__module__' : 'exchanges_wrapper.api_pb2'
    # @@protoc_insertion_point(class_scope:martin.FetchAccountBalanceResponse.Balances)
    })
  ,
  'DESCRIPTOR' : _FETCHACCOUNTBALANCERESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchAccountBalanceResponse)
  })
_sym_db.RegisterMessage(FetchAccountBalanceResponse)
_sym_db.RegisterMessage(FetchAccountBalanceResponse.Balances)

FetchExchangeInfoSymbolResponse = _reflection.GeneratedProtocolMessageType('FetchExchangeInfoSymbolResponse', (_message.Message,), {

  'Filters' : _reflection.GeneratedProtocolMessageType('Filters', (_message.Message,), {

    'PriceFilter' : _reflection.GeneratedProtocolMessageType('PriceFilter', (_message.Message,), {
      'DESCRIPTOR' : _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_PRICEFILTER,
      '__module__' : 'exchanges_wrapper.api_pb2'
      # @@protoc_insertion_point(class_scope:martin.FetchExchangeInfoSymbolResponse.Filters.PriceFilter)
      })
    ,

    'PercentPrice' : _reflection.GeneratedProtocolMessageType('PercentPrice', (_message.Message,), {
      'DESCRIPTOR' : _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_PERCENTPRICE,
      '__module__' : 'exchanges_wrapper.api_pb2'
      # @@protoc_insertion_point(class_scope:martin.FetchExchangeInfoSymbolResponse.Filters.PercentPrice)
      })
    ,

    'LotSize' : _reflection.GeneratedProtocolMessageType('LotSize', (_message.Message,), {
      'DESCRIPTOR' : _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_LOTSIZE,
      '__module__' : 'exchanges_wrapper.api_pb2'
      # @@protoc_insertion_point(class_scope:martin.FetchExchangeInfoSymbolResponse.Filters.LotSize)
      })
    ,

    'MinNotional' : _reflection.GeneratedProtocolMessageType('MinNotional', (_message.Message,), {
      'DESCRIPTOR' : _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MINNOTIONAL,
      '__module__' : 'exchanges_wrapper.api_pb2'
      # @@protoc_insertion_point(class_scope:martin.FetchExchangeInfoSymbolResponse.Filters.MinNotional)
      })
    ,

    'IcebergParts' : _reflection.GeneratedProtocolMessageType('IcebergParts', (_message.Message,), {
      'DESCRIPTOR' : _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_ICEBERGPARTS,
      '__module__' : 'exchanges_wrapper.api_pb2'
      # @@protoc_insertion_point(class_scope:martin.FetchExchangeInfoSymbolResponse.Filters.IcebergParts)
      })
    ,

    'MarketLotSize' : _reflection.GeneratedProtocolMessageType('MarketLotSize', (_message.Message,), {
      'DESCRIPTOR' : _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MARKETLOTSIZE,
      '__module__' : 'exchanges_wrapper.api_pb2'
      # @@protoc_insertion_point(class_scope:martin.FetchExchangeInfoSymbolResponse.Filters.MarketLotSize)
      })
    ,

    'MaxNumOrders' : _reflection.GeneratedProtocolMessageType('MaxNumOrders', (_message.Message,), {
      'DESCRIPTOR' : _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXNUMORDERS,
      '__module__' : 'exchanges_wrapper.api_pb2'
      # @@protoc_insertion_point(class_scope:martin.FetchExchangeInfoSymbolResponse.Filters.MaxNumOrders)
      })
    ,

    'MaxNumAlgoOrders' : _reflection.GeneratedProtocolMessageType('MaxNumAlgoOrders', (_message.Message,), {
      'DESCRIPTOR' : _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXNUMALGOORDERS,
      '__module__' : 'exchanges_wrapper.api_pb2'
      # @@protoc_insertion_point(class_scope:martin.FetchExchangeInfoSymbolResponse.Filters.MaxNumAlgoOrders)
      })
    ,

    'MaxNumIcebergOrders' : _reflection.GeneratedProtocolMessageType('MaxNumIcebergOrders', (_message.Message,), {
      'DESCRIPTOR' : _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXNUMICEBERGORDERS,
      '__module__' : 'exchanges_wrapper.api_pb2'
      # @@protoc_insertion_point(class_scope:martin.FetchExchangeInfoSymbolResponse.Filters.MaxNumIcebergOrders)
      })
    ,

    'MaxPosition' : _reflection.GeneratedProtocolMessageType('MaxPosition', (_message.Message,), {
      'DESCRIPTOR' : _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXPOSITION,
      '__module__' : 'exchanges_wrapper.api_pb2'
      # @@protoc_insertion_point(class_scope:martin.FetchExchangeInfoSymbolResponse.Filters.MaxPosition)
      })
    ,

    'Notional' : _reflection.GeneratedProtocolMessageType('Notional', (_message.Message,), {
      'DESCRIPTOR' : _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_NOTIONAL,
      '__module__' : 'exchanges_wrapper.api_pb2'
      # @@protoc_insertion_point(class_scope:martin.FetchExchangeInfoSymbolResponse.Filters.Notional)
      })
    ,
    'DESCRIPTOR' : _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS,
    '__module__' : 'exchanges_wrapper.api_pb2'
    # @@protoc_insertion_point(class_scope:martin.FetchExchangeInfoSymbolResponse.Filters)
    })
  ,
  'DESCRIPTOR' : _FETCHEXCHANGEINFOSYMBOLRESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchExchangeInfoSymbolResponse)
  })
_sym_db.RegisterMessage(FetchExchangeInfoSymbolResponse)
_sym_db.RegisterMessage(FetchExchangeInfoSymbolResponse.Filters)
_sym_db.RegisterMessage(FetchExchangeInfoSymbolResponse.Filters.PriceFilter)
_sym_db.RegisterMessage(FetchExchangeInfoSymbolResponse.Filters.PercentPrice)
_sym_db.RegisterMessage(FetchExchangeInfoSymbolResponse.Filters.LotSize)
_sym_db.RegisterMessage(FetchExchangeInfoSymbolResponse.Filters.MinNotional)
_sym_db.RegisterMessage(FetchExchangeInfoSymbolResponse.Filters.IcebergParts)
_sym_db.RegisterMessage(FetchExchangeInfoSymbolResponse.Filters.MarketLotSize)
_sym_db.RegisterMessage(FetchExchangeInfoSymbolResponse.Filters.MaxNumOrders)
_sym_db.RegisterMessage(FetchExchangeInfoSymbolResponse.Filters.MaxNumAlgoOrders)
_sym_db.RegisterMessage(FetchExchangeInfoSymbolResponse.Filters.MaxNumIcebergOrders)
_sym_db.RegisterMessage(FetchExchangeInfoSymbolResponse.Filters.MaxPosition)
_sym_db.RegisterMessage(FetchExchangeInfoSymbolResponse.Filters.Notional)

FetchOrderRequest = _reflection.GeneratedProtocolMessageType('FetchOrderRequest', (_message.Message,), {
  'DESCRIPTOR' : _FETCHORDERREQUEST,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchOrderRequest)
  })
_sym_db.RegisterMessage(FetchOrderRequest)

FetchOrderResponse = _reflection.GeneratedProtocolMessageType('FetchOrderResponse', (_message.Message,), {
  'DESCRIPTOR' : _FETCHORDERRESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchOrderResponse)
  })
_sym_db.RegisterMessage(FetchOrderResponse)

FetchOpenOrdersResponse = _reflection.GeneratedProtocolMessageType('FetchOpenOrdersResponse', (_message.Message,), {

  'Order' : _reflection.GeneratedProtocolMessageType('Order', (_message.Message,), {
    'DESCRIPTOR' : _FETCHOPENORDERSRESPONSE_ORDER,
    '__module__' : 'exchanges_wrapper.api_pb2'
    # @@protoc_insertion_point(class_scope:martin.FetchOpenOrdersResponse.Order)
    })
  ,
  'DESCRIPTOR' : _FETCHOPENORDERSRESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchOpenOrdersResponse)
  })
_sym_db.RegisterMessage(FetchOpenOrdersResponse)
_sym_db.RegisterMessage(FetchOpenOrdersResponse.Order)

MarketRequest = _reflection.GeneratedProtocolMessageType('MarketRequest', (_message.Message,), {
  'DESCRIPTOR' : _MARKETREQUEST,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.MarketRequest)
  })
_sym_db.RegisterMessage(MarketRequest)

StartStreamRequest = _reflection.GeneratedProtocolMessageType('StartStreamRequest', (_message.Message,), {
  'DESCRIPTOR' : _STARTSTREAMREQUEST,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.StartStreamRequest)
  })
_sym_db.RegisterMessage(StartStreamRequest)

OpenClientConnectionRequest = _reflection.GeneratedProtocolMessageType('OpenClientConnectionRequest', (_message.Message,), {
  'DESCRIPTOR' : _OPENCLIENTCONNECTIONREQUEST,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.OpenClientConnectionRequest)
  })
_sym_db.RegisterMessage(OpenClientConnectionRequest)

OpenClientConnectionId = _reflection.GeneratedProtocolMessageType('OpenClientConnectionId', (_message.Message,), {
  'DESCRIPTOR' : _OPENCLIENTCONNECTIONID,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.OpenClientConnectionId)
  })
_sym_db.RegisterMessage(OpenClientConnectionId)

FetchServerTimeRequest = _reflection.GeneratedProtocolMessageType('FetchServerTimeRequest', (_message.Message,), {
  'DESCRIPTOR' : _FETCHSERVERTIMEREQUEST,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchServerTimeRequest)
  })
_sym_db.RegisterMessage(FetchServerTimeRequest)

FetchServerTimeResponse = _reflection.GeneratedProtocolMessageType('FetchServerTimeResponse', (_message.Message,), {
  'DESCRIPTOR' : _FETCHSERVERTIMERESPONSE,
  '__module__' : 'exchanges_wrapper.api_pb2'
  # @@protoc_insertion_point(class_scope:martin.FetchServerTimeResponse)
  })
_sym_db.RegisterMessage(FetchServerTimeResponse)

_MARTIN = DESCRIPTOR.services_by_name['Martin']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ONBALANCEUPDATERESPONSE._serialized_start=39
  _ONBALANCEUPDATERESPONSE._serialized_end=81
  _FETCHFUNDINGWALLETREQUEST._serialized_start=84
  _FETCHFUNDINGWALLETREQUEST._serialized_end=215
  _FETCHFUNDINGWALLETRESPONSE._serialized_start=218
  _FETCHFUNDINGWALLETRESPONSE._serialized_end=426
  _FETCHFUNDINGWALLETRESPONSE_BALANCES._serialized_start=311
  _FETCHFUNDINGWALLETRESPONSE_BALANCES._serialized_end=426
  _CANCELORDERRESPONSE._serialized_start=429
  _CANCELORDERRESPONSE._serialized_end=756
  _CANCELORDERREQUEST._serialized_start=758
  _CANCELORDERREQUEST._serialized_end=849
  _CREATELIMITORDERRESPONSE._serialized_start=852
  _CREATELIMITORDERRESPONSE._serialized_end=1220
  _CREATELIMITORDERREQUEST._serialized_start=1223
  _CREATELIMITORDERREQUEST._serialized_end=1381
  _ONORDERUPDATERESPONSE._serialized_start=1384
  _ONORDERUPDATERESPONSE._serialized_end=2144
  _ONFUNDSUPDATERESPONSE._serialized_start=2146
  _ONFUNDSUPDATERESPONSE._serialized_end=2184
  _ONFUNDSUPDATEREQUEST._serialized_start=2186
  _ONFUNDSUPDATEREQUEST._serialized_end=2302
  _SIMPLERESPONSE._serialized_start=2304
  _SIMPLERESPONSE._serialized_end=2353
  _ONTICKERUPDATERESPONSE._serialized_start=2355
  _ONTICKERUPDATERESPONSE._serialized_end=2456
  _ACCOUNTTRADELISTRESPONSE._serialized_start=2459
  _ACCOUNTTRADELISTRESPONSE._serialized_end=2776
  _ACCOUNTTRADELISTRESPONSE_TRADE._serialized_start=2543
  _ACCOUNTTRADELISTRESPONSE_TRADE._serialized_end=2776
  _ACCOUNTTRADELISTREQUEST._serialized_start=2778
  _ACCOUNTTRADELISTREQUEST._serialized_end=2891
  _FETCHKLINESRESPONSE._serialized_start=2893
  _FETCHKLINESRESPONSE._serialized_end=2930
  _ONKLINESUPDATERESPONSE._serialized_start=2932
  _ONKLINESUPDATERESPONSE._serialized_end=3006
  _FETCHKLINESREQUEST._serialized_start=3008
  _FETCHKLINESREQUEST._serialized_end=3114
  _FETCHTICKERPRICECHANGESTATISTICSRESPONSE._serialized_start=3117
  _FETCHTICKERPRICECHANGESTATISTICSRESPONSE._serialized_end=3556
  _FETCHSYMBOLPRICETICKERRESPONSE._serialized_start=3558
  _FETCHSYMBOLPRICETICKERRESPONSE._serialized_end=3621
  _FETCHORDERBOOKRESPONSE._serialized_start=3623
  _FETCHORDERBOOKRESPONSE._serialized_end=3697
  _FETCHACCOUNTBALANCERESPONSE._serialized_start=3700
  _FETCHACCOUNTBALANCERESPONSE._serialized_end=3850
  _FETCHACCOUNTBALANCERESPONSE_BALANCES._serialized_start=311
  _FETCHACCOUNTBALANCERESPONSE_BALANCES._serialized_end=366
  _FETCHEXCHANGEINFOSYMBOLRESPONSE._serialized_start=3853
  _FETCHEXCHANGEINFOSYMBOLRESPONSE._serialized_end=6592
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS._serialized_start=4471
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS._serialized_end=6592
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_PRICEFILTER._serialized_start=5477
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_PRICEFILTER._serialized_end=5564
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_PERCENTPRICE._serialized_start=5566
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_PERCENTPRICE._serialized_end=5668
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_LOTSIZE._serialized_start=5670
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_LOTSIZE._serialized_end=5749
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MINNOTIONAL._serialized_start=5751
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MINNOTIONAL._serialized_end=5850
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_ICEBERGPARTS._serialized_start=5852
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_ICEBERGPARTS._serialized_end=5901
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MARKETLOTSIZE._serialized_start=5903
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MARKETLOTSIZE._serialized_end=5988
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXNUMORDERS._serialized_start=5990
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXNUMORDERS._serialized_end=6046
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXNUMALGOORDERS._serialized_start=6048
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXNUMALGOORDERS._serialized_end=6112
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXNUMICEBERGORDERS._serialized_start=6114
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXNUMICEBERGORDERS._serialized_end=6184
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXPOSITION._serialized_start=6186
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_MAXPOSITION._serialized_end=6240
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_NOTIONAL._serialized_start=6243
  _FETCHEXCHANGEINFOSYMBOLRESPONSE_FILTERS_NOTIONAL._serialized_end=6389
  _FETCHORDERREQUEST._serialized_start=6595
  _FETCHORDERREQUEST._serialized_end=6738
  _FETCHORDERRESPONSE._serialized_start=6741
  _FETCHORDERRESPONSE._serialized_end=7158
  _FETCHOPENORDERSRESPONSE._serialized_start=7161
  _FETCHOPENORDERSRESPONSE._serialized_end=7669
  _FETCHOPENORDERSRESPONSE_ORDER._serialized_start=7265
  _FETCHOPENORDERSRESPONSE_ORDER._serialized_end=7669
  _MARKETREQUEST._serialized_start=7671
  _MARKETREQUEST._serialized_end=7755
  _STARTSTREAMREQUEST._serialized_start=7758
  _STARTSTREAMREQUEST._serialized_end=7918
  _OPENCLIENTCONNECTIONREQUEST._serialized_start=7920
  _OPENCLIENTCONNECTIONREQUEST._serialized_end=8027
  _OPENCLIENTCONNECTIONID._serialized_start=8029
  _OPENCLIENTCONNECTIONID._serialized_end=8151
  _FETCHSERVERTIMEREQUEST._serialized_start=8153
  _FETCHSERVERTIMEREQUEST._serialized_end=8214
  _FETCHSERVERTIMERESPONSE._serialized_start=8216
  _FETCHSERVERTIMERESPONSE._serialized_end=8262
  _MARTIN._serialized_start=8265
  _MARTIN._serialized_end=10448
# @@protoc_insertion_point(module_scope)
