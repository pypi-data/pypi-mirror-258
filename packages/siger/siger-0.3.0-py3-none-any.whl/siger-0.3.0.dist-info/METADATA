Metadata-Version: 2.1
Name: siger
Version: 0.3.0
Summary: Automações em Python para auxiliar obtenção de dados do SIGER-CEPEL
Home-page: https://github.com/nkbueno/siger
Author: Nathan Kelvi de Almeida Bueno
Author-email: nathankelvi@gmail.com
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas
Requires-Dist: numpy
Requires-Dist: requests
Requires-Dist: beautifulsoup4
Requires-Dist: selenium
Requires-Dist: DateTime
Requires-Dist: pywin32
Requires-Dist: xlsxwriter

# SIGER

API desenvolvida para acessar diretamente em DataFrames os dados do SIGER. Adicionalmente, vÃ¡rias manipulaÃ§Ãµes e expansÃµes de funcionalidades
tambÃ©m estÃ£o implementadas

## InstalaÃ§Ã£o

VocÃª pode instalar a Ãºltima versÃ£o do pacote via pip:

```bash
pip install siger
```

## MÃ³dulos

Este projeto contÃ©m os seguintes mÃ³dulos:

### ImportSIGER

MÃ³dulo base de todos os submÃ³dulos seguintes. Ã‰ aqui que sÃ£o definidos os cÃ³digos para download das informaÃ§Ãµes do SIGER.

Exemplo de uso:

```python
from siger import ImportSIGER
oSIGER = ImportSIGER("https://siger.cepel.br/", "XXX", "XXX")

# RelatÃ³rio de Obras
df_robras = oSIGER.get_robras()
```

### VerificaSIGER

Neste mÃ³dulo estÃ£o armazenadas todas as funÃ§Ãµes e comparaÃ§Ãµes que realizamos para verificar a qualidade dos 
decks carregados para o programa, assim como verificar possÃ­veis erros apÃ³s o carregamento.

Exemplo de uso:

```python
from siger import VerificaSIGER
oSIGER = VerificaSIGER("https://siger.cepel.br/", "XXX", "XXX")

# Verifica carregamento
path_decks=""            # Opcional
df_robras_original=""    # Opcional
relatorio_carregamento = oSIGER.verifica_carregamento(path_decks, df_robras_original)
```

### VisualizaSIGER

Neste mÃ³dulo Ã© ampliada a visÃ£o de como os equipamentos estÃ£o relacionados dentro do SIGER e quais seus dependentes.

Exemplo de uso:

```python
from siger import VisualizaSIGER
oSIGER = VisualizaSIGER("https://siger.cepel.br/", "XXX", "XXX")

# Verifica carregamento
df_siger = oSIGER.get_base_siger()
codigo_obra_para_visualizar = ""
relatorio_carregamento = oSIGER.verifica_carregamento(path_decks, df_robras_original)
```

### WebSIGER

Aqui estÃ£o as funcionalidades que permitem o carregamento de uma lista de decks para dentro do SIGER. Ã‰ possÃ­vel aqui, programar a execuÃ§Ã£o do carregamento desde os 7 arquivos atÃ© o carregamento desde o inÃ­cio da base.

Exemplo de uso:

```python
from siger import WebSIGER
import pandas as pd
oSIGER = WebSIGER("https://siger.cepel.br/", "XXX", "XXX")

# Verifica carregamento
df_arquivos_carregar = pd.read_csv("ARQUIVO_CARGA", sep=";")
chromedriver_path = r"D:\_APAGAR\_ChromeDriver\chromedriver.exe"
flag_carregamento = oSIGER.carrega_siger(df_arquivos_carregar, chromedriver_path)
```

## LicenÃ§a

Este projeto estÃ¡ licenciado sob a GNU GENERAL PUBLIC LICENSE. Isso significa que vocÃª pode copiar, distribuir e modificar o software, desde que vocÃª acompanhe quaisquer modificaÃ§Ãµes com a mesma licenÃ§a e que vocÃª disponibilize o cÃ³digo-fonte.

Para mais detalhes, por favor veja o arquivo LICENSE no repositÃ³rio ou visite o site oficial da GNU.
