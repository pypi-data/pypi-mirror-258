# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_type.ipynb.

# %% auto 0
__all__ = ['NDim', 'Dims', 'Spec', 'Chars', 'Flag', 'DType', 'Types', 'VarSpec', 'VarSpecs']

# %% ../nbs/01_type.ipynb 6
#| export


# %% ../nbs/01_type.ipynb 8
from typing import (Union, TypeAlias, Optional, )

# %% ../nbs/01_type.ipynb 10
#| export


# %% ../nbs/01_type.ipynb 12
#| export

# %% ../nbs/01_type.ipynb 14
from .enum import DimType

# %% ../nbs/01_type.ipynb 16
NDim: TypeAlias = int
'''An integer representing the number of dimensions of a multi-dimensional array''';

Dims: TypeAlias = tuple[int, ...]
'''A tuple of integers representing the dimensions of a multi-dimensional array''';

Spec: TypeAlias = Union[NDim, Dims]
'''Dimensions Specification i.e.  single integer or a 
tuple of integers representing the dimensions of a multi-dimensional array''';

Chars: TypeAlias = Optional[str]
'''A single string representing an ordered sequence of characters''';

Flag: TypeAlias = Optional[bool]
'''A boolean value representing a whether or not a flag is set''';

DType: TypeAlias = Optional[DimType]
'''A string or enumeration member's value (e.g. `DimType`) 
representing the type of data within a tensor e.g. `DimType.vid`''';


Types: TypeAlias = tuple[type, ...]
'''A tuple of types for instance checking''';

VarSpec: TypeAlias = tuple[str, Types]
'''A variable specification i.e. a tuple of the variable name and 
then a tuple of types for instance checking''';

VarSpecs: TypeAlias = tuple[VarSpec, ...]
'''A tuple of variables specifications''';

# %% ../nbs/01_type.ipynb 18
#| export
