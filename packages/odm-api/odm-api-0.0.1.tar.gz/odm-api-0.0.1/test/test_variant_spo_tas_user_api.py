# coding: utf-8

"""
    Tasks API

    These API endpoints serve to work with asynchronous tasks. 

    The version of the OpenAPI document: default-released
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from odm_api.api.variant_spo_tas_user_api import VariantSPoTAsUserApi


class TestVariantSPoTAsUserApi(unittest.TestCase):
    """VariantSPoTAsUserApi unit test stubs"""

    def setUp(self) -> None:
        self.api = VariantSPoTAsUserApi()

    def tearDown(self) -> None:
        pass

    def test_get_all_variants_as_user(self) -> None:
        """Test case for get_all_variants_as_user

        Retrieve multiple variant data and metadata objects
        """
        pass

    def test_get_variant_as_user(self) -> None:
        """Test case for get_variant_as_user

        Retrieve a single variant object by ID (accession)
        """
        pass

    def test_get_variant_by_version_as_user(self) -> None:
        """Test case for get_variant_by_version_as_user

        Retrieve a single variant object by ID (accession)
        """
        pass

    def test_get_variant_group_as_user(self) -> None:
        """Test case for get_variant_group_as_user

        Retrieve a single group object by ID (accession)
        """
        pass

    def test_get_variant_group_by_run_as_user(self) -> None:
        """Test case for get_variant_group_by_run_as_user

        Retrieve a single group object by run ID (accession)
        """
        pass

    def test_get_variant_versions_as_user(self) -> None:
        """Test case for get_variant_versions_as_user

        Retrieve a list of object versions by ID
        """
        pass

    def test_search_variant_groups_as_user(self) -> None:
        """Test case for search_variant_groups_as_user

        Retrieve groups that match a query
        """
        pass

    def test_search_variant_runs_as_user(self) -> None:
        """Test case for search_variant_runs_as_user

        Retrieve run objects related to the given group
        """
        pass


if __name__ == '__main__':
    unittest.main()
