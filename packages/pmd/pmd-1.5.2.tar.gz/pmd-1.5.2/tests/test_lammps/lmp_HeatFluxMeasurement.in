# LAMMPS input file generated by PMD package

### Initialization
atom_style      full
units           real

pair_style      lj/class2/coul/long 9.5 9.5
pair_modify     mix sixthpower tail yes
kspace_style    pppm/cg 1e-4
bond_style      class2
angle_style     class2
dihedral_style  class2
improper_style  class2
special_bonds   lj/coul 0 0 1

read_data       data.lmps

neighbor        2.0 bin
neigh_modify    delay 0 every 1 check yes

thermo_style    custom step temp density vol press ke pe ebond evdwl ecoul elong
thermo          1000
timestep        1


### Minimization
min_style       cg
minimize        1e-08 1e-10 10000000 1000000000


### Equilibration
reset_timestep  0

dump            dump_Equilibration all custom 10000 equil.lammpstrj id mol type q xs ys zs ix iy iz
restart         1560000 Equilibration.restart

fix             fLANGEVIN all langevin 800 800 $(100.0*dt) 723853
fix             fNVELIMIT all nve/limit 0.1
fix             fMOM all momentum 100 linear 1 1 1 angular
run             10000

unfix           fLANGEVIN
unfix           fNVELIMIT
unfix           fMOM

reset_timestep  0

fix             step1 all nvt temp 800 800 $(100.0*dt)
run             50000
unfix           step1

fix             step2 all nvt temp 300 300 $(100.0*dt)
run             50000
unfix           step2

fix             step3 all npt temp 300 300 $(100.0*dt) iso 986.92326 986.92326 $(100.0*dt)
run             50000
unfix           step3

fix             step4 all nvt temp 800 800 $(100.0*dt)
run             50000
unfix           step4

fix             step5 all nvt temp 300 300 $(100.0*dt)
run             100000
unfix           step5

fix             step6 all npt temp 300 300 $(100.0*dt) iso 29607.697799999998 29607.697799999998 $(100.0*dt)
run             50000
unfix           step6

fix             step7 all nvt temp 800 800 $(100.0*dt)
run             50000
unfix           step7

fix             step8 all nvt temp 300 300 $(100.0*dt)
run             100000
unfix           step8

fix             step9 all npt temp 300 300 $(100.0*dt) iso 49346.163 49346.163 $(100.0*dt)
run             50000
unfix           step9

fix             step10 all nvt temp 800 800 $(100.0*dt)
run             50000
unfix           step10

fix             step11 all nvt temp 300 300 $(100.0*dt)
run             100000
unfix           step11

fix             step12 all npt temp 300 300 $(100.0*dt) iso 24673.0815 24673.0815 $(100.0*dt)
run             5000
unfix           step12

fix             step13 all nvt temp 800 800 $(100.0*dt)
run             5000
unfix           step13

fix             step14 all nvt temp 300 300 $(100.0*dt)
run             10000
unfix           step14

fix             step15 all npt temp 300 300 $(100.0*dt) iso 4934.616300000001 4934.616300000001 $(100.0*dt)
run             5000
unfix           step15

fix             step16 all nvt temp 800 800 $(100.0*dt)
run             5000
unfix           step16

fix             step17 all nvt temp 300 300 $(100.0*dt)
run             10000
unfix           step17

fix             step18 all npt temp 300 300 $(100.0*dt) iso 493.46163 493.46163 $(100.0*dt)
run             5000
unfix           step18

fix             step19 all nvt temp 800 800 $(100.0*dt)
run             5000
unfix           step19

fix             step20 all nvt temp 300 300 $(100.0*dt)
run             10000
unfix           step20

fix             step21 all npt temp 300 300 $(100.0*dt) iso 1 1 $(100.0*dt)
run             800000
unfix           step21

undump          dump_Equilibration


### HeatFluxMeasurement
reset_timestep  0

dump            dump_HeatFluxMeasurement all custom 10000 heatflux_measurement.lammpstrj id mol type q xs ys zs ix iy iz
dump            dump_image all image 10000000 HeatFluxMeasurement.*.jpg type type
restart         10000000 HeatFluxMeasurement.restart

variable        T equal 300
variable        V equal vol
variable        p equal 200
variable        s equal 10
variable        d equal $p*$s
thermo          $d

# convert from LAMMPS real units to SI
variable        kB equal 1.3806504e-23  # [J/K] Boltzmann
variable        kCal2J equal 4186.0/6.02214e23
variable        A2m equal 1.0e-10
variable        fs2s equal 1.0e-15
variable        convert equal ${kCal2J}*${kCal2J}/${fs2s}/${A2m}

fix             fNVT all nvt temp 300 300 $(100.0*dt) drag 0.2

compute         myKE all ke/atom
compute         myPE all pe/atom
compute         myStress all stress/atom NULL virial
compute         flux all heat/flux myKE myPE myStress
fix             JJ all ave/correlate $s $p $d c_flux[1] c_flux[2] c_flux[3] type auto file J0Jt.txt ave running

variable        scale equal ${convert}/${kB}/$T/$T/$V*$s
variable        k11 equal trap(f_JJ[3])*${scale}
variable        k22 equal trap(f_JJ[4])*${scale}
variable        k33 equal trap(f_JJ[5])*${scale}

run             10000000
variable        k equal (v_k11+v_k22+v_k33)/3.0
print           "average conductivity: $k[W/mK]"

unfix           fNVT
unfix           JJ

undump          dump_HeatFluxMeasurement
undump          dump_image
