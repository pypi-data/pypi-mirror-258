[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "run-in-subdirectory"
version = "0.2.0"
description = "A command-line utility for running commands in a subdirectory (e.g., linters on a monorepo) with a set of pre-commit hooks"
license = "MIT"
authors = ["Egor Makarenko <egormkn@yandex.ru>"]
readme = "README.md"
repository = "https://github.com/egormkn/run-in-subdirectory"
keywords = ["pre-commit", "subdirectory", "subfolder", "monorepo", "hook"]
packages = [{include = "run_in_subdirectory", from = "src"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Utilities"
]

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.group.dev.dependencies]
black = "^24.2.0"
isort = "^5.13.2"
ruff = "^0.2.2"

[tool.poetry.group.test.dependencies]
coverage = {extras = ["toml"], version = "^7.4.3"}
pytest = "^8.0.1"
pytest-cov = "^4.1.0"

[tool.poetry.scripts]
run-in-subdirectory = { callable = "run_in_subdirectory:main" }

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = true

[tool.coverage.run]
omit = ["__main__.py"]

[tool.coverage.report]
exclude_also = ["if __name__ == ['\"]__main__['\"]:"]
