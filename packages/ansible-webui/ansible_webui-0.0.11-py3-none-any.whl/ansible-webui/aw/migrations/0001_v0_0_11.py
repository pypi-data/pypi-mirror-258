# Generated by Django 5.0.2 on 2024-02-23 19:47

import aw.model.job
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "limit",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "verbosity",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Default"),
                            (1, "v"),
                            (2, "vv"),
                            (3, "vvv"),
                            (4, "vvvv"),
                            (5, "vvvv"),
                            (6, "vvvvvv"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        blank=True, default=None, max_length=150, null=True
                    ),
                ),
                (
                    "mode_diff",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=False
                    ),
                ),
                (
                    "mode_check",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=False
                    ),
                ),
                (
                    "environment_vars",
                    models.CharField(
                        blank=True, default=None, max_length=1000, null=True
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True, default=None, max_length=150, null=True
                    ),
                ),
                (
                    "tags_skip",
                    models.CharField(
                        blank=True, default=None, max_length=150, null=True
                    ),
                ),
                (
                    "cmd_args",
                    models.CharField(
                        blank=True, default=None, max_length=150, null=True
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("inventory_file", models.CharField(max_length=300)),
                ("playbook_file", models.CharField(max_length=100)),
                (
                    "schedule",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=50,
                        null=True,
                        validators=[aw.model.job.validate_cronjob],
                    ),
                ),
                (
                    "enabled",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=True
                    ),
                ),
                (
                    "credentials_needed",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobCredentialsPermissionMapping",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="JobError",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("short", models.CharField(max_length=100)),
                ("med", models.TextField(max_length=1024, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="JobGlobalCredentials",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "connect_user",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                ("become_user", models.CharField(default="root", max_length=100)),
                (
                    "vault_file",
                    models.CharField(
                        blank=True, default=None, max_length=300, null=True
                    ),
                ),
                (
                    "vault_id",
                    models.CharField(
                        blank=True, default=None, max_length=50, null=True
                    ),
                ),
                (
                    "_enc_vault_pass",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "_enc_become_pass",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "_enc_connect_pass",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "_enc_ssh_key",
                    models.CharField(
                        blank=True, default=None, max_length=5000, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobPermission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "permission",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "None"),
                            (5, "Read"),
                            (10, "Execute"),
                            (15, "Write"),
                            (20, "Full"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "jobs_all",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=False
                    ),
                ),
                (
                    "credentials_all",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=False
                    ),
                ),
                (
                    "repositories_all",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=False
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobPermissionMapping",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="JobPermissionMemberGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="JobPermissionMemberUser",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="JobQueue",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="JobRepositoryPermissionMapping",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="JobUserCredentials",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "connect_user",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                ("become_user", models.CharField(default="root", max_length=100)),
                (
                    "vault_file",
                    models.CharField(
                        blank=True, default=None, max_length=300, null=True
                    ),
                ),
                (
                    "vault_id",
                    models.CharField(
                        blank=True, default=None, max_length=50, null=True
                    ),
                ),
                (
                    "_enc_vault_pass",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "_enc_become_pass",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "_enc_connect_pass",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "_enc_ssh_key",
                    models.CharField(
                        blank=True, default=None, max_length=5000, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Repository",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "rtype",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "Static"), (2, "Git")]
                    ),
                ),
                (
                    "time_update",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Waiting"),
                            (1, "Starting"),
                            (2, "Running"),
                            (3, "Failed"),
                            (4, "Finished"),
                            (5, "Stopping"),
                            (6, "Stopped"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "log_stdout",
                    models.CharField(
                        blank=True, default=None, max_length=300, null=True
                    ),
                ),
                (
                    "log_stderr",
                    models.CharField(
                        blank=True, default=None, max_length=300, null=True
                    ),
                ),
                (
                    "static_path",
                    models.CharField(
                        blank=True,
                        default="/home/superstes/code/ansible-webui",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "git_origin",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "git_branch",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "git_isolate",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=False
                    ),
                ),
                (
                    "git_lfs",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=False
                    ),
                ),
                (
                    "git_limit_depth",
                    models.PositiveIntegerField(blank=True, default=None, null=True),
                ),
                (
                    "git_hook_pre",
                    models.CharField(
                        blank=True, default=None, max_length=1000, null=True
                    ),
                ),
                (
                    "git_hook_post",
                    models.CharField(
                        blank=True, default=None, max_length=1000, null=True
                    ),
                ),
                (
                    "git_override_initialize",
                    models.CharField(
                        blank=True, default=None, max_length=1000, null=True
                    ),
                ),
                (
                    "git_override_update",
                    models.CharField(
                        blank=True, default=None, max_length=1000, null=True
                    ),
                ),
                (
                    "git_playbook_base",
                    models.CharField(
                        blank=True, default=None, max_length=300, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SystemConfig",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "path_run",
                    models.CharField(default="/tmp/ansible-webui", max_length=500),
                ),
                (
                    "path_play",
                    models.CharField(
                        default="/home/superstes/code/ansible-webui", max_length=500
                    ),
                ),
                (
                    "path_log",
                    models.CharField(
                        default="/home/superstes/.local/share/ansible-webui",
                        max_length=500,
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        choices=[
                            ("Africa/Abidjan", "Africa/Abidjan"),
                            ("Africa/Accra", "Africa/Accra"),
                            ("Africa/Addis_Ababa", "Africa/Addis_Ababa"),
                            ("Africa/Algiers", "Africa/Algiers"),
                            ("Africa/Asmara", "Africa/Asmara"),
                            ("Africa/Asmera", "Africa/Asmera"),
                            ("Africa/Bamako", "Africa/Bamako"),
                            ("Africa/Bangui", "Africa/Bangui"),
                            ("Africa/Banjul", "Africa/Banjul"),
                            ("Africa/Bissau", "Africa/Bissau"),
                            ("Africa/Blantyre", "Africa/Blantyre"),
                            ("Africa/Brazzaville", "Africa/Brazzaville"),
                            ("Africa/Bujumbura", "Africa/Bujumbura"),
                            ("Africa/Cairo", "Africa/Cairo"),
                            ("Africa/Casablanca", "Africa/Casablanca"),
                            ("Africa/Ceuta", "Africa/Ceuta"),
                            ("Africa/Conakry", "Africa/Conakry"),
                            ("Africa/Dakar", "Africa/Dakar"),
                            ("Africa/Dar_es_Salaam", "Africa/Dar_es_Salaam"),
                            ("Africa/Djibouti", "Africa/Djibouti"),
                            ("Africa/Douala", "Africa/Douala"),
                            ("Africa/El_Aaiun", "Africa/El_Aaiun"),
                            ("Africa/Freetown", "Africa/Freetown"),
                            ("Africa/Gaborone", "Africa/Gaborone"),
                            ("Africa/Harare", "Africa/Harare"),
                            ("Africa/Johannesburg", "Africa/Johannesburg"),
                            ("Africa/Juba", "Africa/Juba"),
                            ("Africa/Kampala", "Africa/Kampala"),
                            ("Africa/Khartoum", "Africa/Khartoum"),
                            ("Africa/Kigali", "Africa/Kigali"),
                            ("Africa/Kinshasa", "Africa/Kinshasa"),
                            ("Africa/Lagos", "Africa/Lagos"),
                            ("Africa/Libreville", "Africa/Libreville"),
                            ("Africa/Lome", "Africa/Lome"),
                            ("Africa/Luanda", "Africa/Luanda"),
                            ("Africa/Lubumbashi", "Africa/Lubumbashi"),
                            ("Africa/Lusaka", "Africa/Lusaka"),
                            ("Africa/Malabo", "Africa/Malabo"),
                            ("Africa/Maputo", "Africa/Maputo"),
                            ("Africa/Maseru", "Africa/Maseru"),
                            ("Africa/Mbabane", "Africa/Mbabane"),
                            ("Africa/Mogadishu", "Africa/Mogadishu"),
                            ("Africa/Monrovia", "Africa/Monrovia"),
                            ("Africa/Nairobi", "Africa/Nairobi"),
                            ("Africa/Ndjamena", "Africa/Ndjamena"),
                            ("Africa/Niamey", "Africa/Niamey"),
                            ("Africa/Nouakchott", "Africa/Nouakchott"),
                            ("Africa/Ouagadougou", "Africa/Ouagadougou"),
                            ("Africa/Porto-Novo", "Africa/Porto-Novo"),
                            ("Africa/Sao_Tome", "Africa/Sao_Tome"),
                            ("Africa/Timbuktu", "Africa/Timbuktu"),
                            ("Africa/Tripoli", "Africa/Tripoli"),
                            ("Africa/Tunis", "Africa/Tunis"),
                            ("Africa/Windhoek", "Africa/Windhoek"),
                            ("America/Adak", "America/Adak"),
                            ("America/Anchorage", "America/Anchorage"),
                            ("America/Anguilla", "America/Anguilla"),
                            ("America/Antigua", "America/Antigua"),
                            ("America/Araguaina", "America/Araguaina"),
                            (
                                "America/Argentina/Buenos_Aires",
                                "America/Argentina/Buenos_Aires",
                            ),
                            (
                                "America/Argentina/Catamarca",
                                "America/Argentina/Catamarca",
                            ),
                            (
                                "America/Argentina/ComodRivadavia",
                                "America/Argentina/ComodRivadavia",
                            ),
                            ("America/Argentina/Cordoba", "America/Argentina/Cordoba"),
                            ("America/Argentina/Jujuy", "America/Argentina/Jujuy"),
                            (
                                "America/Argentina/La_Rioja",
                                "America/Argentina/La_Rioja",
                            ),
                            ("America/Argentina/Mendoza", "America/Argentina/Mendoza"),
                            (
                                "America/Argentina/Rio_Gallegos",
                                "America/Argentina/Rio_Gallegos",
                            ),
                            ("America/Argentina/Salta", "America/Argentina/Salta"),
                            (
                                "America/Argentina/San_Juan",
                                "America/Argentina/San_Juan",
                            ),
                            (
                                "America/Argentina/San_Luis",
                                "America/Argentina/San_Luis",
                            ),
                            ("America/Argentina/Tucuman", "America/Argentina/Tucuman"),
                            ("America/Argentina/Ushuaia", "America/Argentina/Ushuaia"),
                            ("America/Aruba", "America/Aruba"),
                            ("America/Asuncion", "America/Asuncion"),
                            ("America/Atikokan", "America/Atikokan"),
                            ("America/Atka", "America/Atka"),
                            ("America/Bahia", "America/Bahia"),
                            ("America/Bahia_Banderas", "America/Bahia_Banderas"),
                            ("America/Barbados", "America/Barbados"),
                            ("America/Belem", "America/Belem"),
                            ("America/Belize", "America/Belize"),
                            ("America/Blanc-Sablon", "America/Blanc-Sablon"),
                            ("America/Boa_Vista", "America/Boa_Vista"),
                            ("America/Bogota", "America/Bogota"),
                            ("America/Boise", "America/Boise"),
                            ("America/Buenos_Aires", "America/Buenos_Aires"),
                            ("America/Cambridge_Bay", "America/Cambridge_Bay"),
                            ("America/Campo_Grande", "America/Campo_Grande"),
                            ("America/Cancun", "America/Cancun"),
                            ("America/Caracas", "America/Caracas"),
                            ("America/Catamarca", "America/Catamarca"),
                            ("America/Cayenne", "America/Cayenne"),
                            ("America/Cayman", "America/Cayman"),
                            ("America/Chicago", "America/Chicago"),
                            ("America/Chihuahua", "America/Chihuahua"),
                            ("America/Ciudad_Juarez", "America/Ciudad_Juarez"),
                            ("America/Coral_Harbour", "America/Coral_Harbour"),
                            ("America/Cordoba", "America/Cordoba"),
                            ("America/Costa_Rica", "America/Costa_Rica"),
                            ("America/Creston", "America/Creston"),
                            ("America/Cuiaba", "America/Cuiaba"),
                            ("America/Curacao", "America/Curacao"),
                            ("America/Danmarkshavn", "America/Danmarkshavn"),
                            ("America/Dawson", "America/Dawson"),
                            ("America/Dawson_Creek", "America/Dawson_Creek"),
                            ("America/Denver", "America/Denver"),
                            ("America/Detroit", "America/Detroit"),
                            ("America/Dominica", "America/Dominica"),
                            ("America/Edmonton", "America/Edmonton"),
                            ("America/Eirunepe", "America/Eirunepe"),
                            ("America/El_Salvador", "America/El_Salvador"),
                            ("America/Ensenada", "America/Ensenada"),
                            ("America/Fort_Nelson", "America/Fort_Nelson"),
                            ("America/Fort_Wayne", "America/Fort_Wayne"),
                            ("America/Fortaleza", "America/Fortaleza"),
                            ("America/Glace_Bay", "America/Glace_Bay"),
                            ("America/Godthab", "America/Godthab"),
                            ("America/Goose_Bay", "America/Goose_Bay"),
                            ("America/Grand_Turk", "America/Grand_Turk"),
                            ("America/Grenada", "America/Grenada"),
                            ("America/Guadeloupe", "America/Guadeloupe"),
                            ("America/Guatemala", "America/Guatemala"),
                            ("America/Guayaquil", "America/Guayaquil"),
                            ("America/Guyana", "America/Guyana"),
                            ("America/Halifax", "America/Halifax"),
                            ("America/Havana", "America/Havana"),
                            ("America/Hermosillo", "America/Hermosillo"),
                            (
                                "America/Indiana/Indianapolis",
                                "America/Indiana/Indianapolis",
                            ),
                            ("America/Indiana/Knox", "America/Indiana/Knox"),
                            ("America/Indiana/Marengo", "America/Indiana/Marengo"),
                            (
                                "America/Indiana/Petersburg",
                                "America/Indiana/Petersburg",
                            ),
                            ("America/Indiana/Tell_City", "America/Indiana/Tell_City"),
                            ("America/Indiana/Vevay", "America/Indiana/Vevay"),
                            ("America/Indiana/Vincennes", "America/Indiana/Vincennes"),
                            ("America/Indiana/Winamac", "America/Indiana/Winamac"),
                            ("America/Indianapolis", "America/Indianapolis"),
                            ("America/Inuvik", "America/Inuvik"),
                            ("America/Iqaluit", "America/Iqaluit"),
                            ("America/Jamaica", "America/Jamaica"),
                            ("America/Jujuy", "America/Jujuy"),
                            ("America/Juneau", "America/Juneau"),
                            (
                                "America/Kentucky/Louisville",
                                "America/Kentucky/Louisville",
                            ),
                            (
                                "America/Kentucky/Monticello",
                                "America/Kentucky/Monticello",
                            ),
                            ("America/Knox_IN", "America/Knox_IN"),
                            ("America/Kralendijk", "America/Kralendijk"),
                            ("America/La_Paz", "America/La_Paz"),
                            ("America/Lima", "America/Lima"),
                            ("America/Los_Angeles", "America/Los_Angeles"),
                            ("America/Louisville", "America/Louisville"),
                            ("America/Lower_Princes", "America/Lower_Princes"),
                            ("America/Maceio", "America/Maceio"),
                            ("America/Managua", "America/Managua"),
                            ("America/Manaus", "America/Manaus"),
                            ("America/Marigot", "America/Marigot"),
                            ("America/Martinique", "America/Martinique"),
                            ("America/Matamoros", "America/Matamoros"),
                            ("America/Mazatlan", "America/Mazatlan"),
                            ("America/Mendoza", "America/Mendoza"),
                            ("America/Menominee", "America/Menominee"),
                            ("America/Merida", "America/Merida"),
                            ("America/Metlakatla", "America/Metlakatla"),
                            ("America/Mexico_City", "America/Mexico_City"),
                            ("America/Miquelon", "America/Miquelon"),
                            ("America/Moncton", "America/Moncton"),
                            ("America/Monterrey", "America/Monterrey"),
                            ("America/Montevideo", "America/Montevideo"),
                            ("America/Montreal", "America/Montreal"),
                            ("America/Montserrat", "America/Montserrat"),
                            ("America/Nassau", "America/Nassau"),
                            ("America/New_York", "America/New_York"),
                            ("America/Nipigon", "America/Nipigon"),
                            ("America/Nome", "America/Nome"),
                            ("America/Noronha", "America/Noronha"),
                            (
                                "America/North_Dakota/Beulah",
                                "America/North_Dakota/Beulah",
                            ),
                            (
                                "America/North_Dakota/Center",
                                "America/North_Dakota/Center",
                            ),
                            (
                                "America/North_Dakota/New_Salem",
                                "America/North_Dakota/New_Salem",
                            ),
                            ("America/Nuuk", "America/Nuuk"),
                            ("America/Ojinaga", "America/Ojinaga"),
                            ("America/Panama", "America/Panama"),
                            ("America/Pangnirtung", "America/Pangnirtung"),
                            ("America/Paramaribo", "America/Paramaribo"),
                            ("America/Phoenix", "America/Phoenix"),
                            ("America/Port-au-Prince", "America/Port-au-Prince"),
                            ("America/Port_of_Spain", "America/Port_of_Spain"),
                            ("America/Porto_Acre", "America/Porto_Acre"),
                            ("America/Porto_Velho", "America/Porto_Velho"),
                            ("America/Puerto_Rico", "America/Puerto_Rico"),
                            ("America/Punta_Arenas", "America/Punta_Arenas"),
                            ("America/Rainy_River", "America/Rainy_River"),
                            ("America/Rankin_Inlet", "America/Rankin_Inlet"),
                            ("America/Recife", "America/Recife"),
                            ("America/Regina", "America/Regina"),
                            ("America/Resolute", "America/Resolute"),
                            ("America/Rio_Branco", "America/Rio_Branco"),
                            ("America/Rosario", "America/Rosario"),
                            ("America/Santa_Isabel", "America/Santa_Isabel"),
                            ("America/Santarem", "America/Santarem"),
                            ("America/Santiago", "America/Santiago"),
                            ("America/Santo_Domingo", "America/Santo_Domingo"),
                            ("America/Sao_Paulo", "America/Sao_Paulo"),
                            ("America/Scoresbysund", "America/Scoresbysund"),
                            ("America/Shiprock", "America/Shiprock"),
                            ("America/Sitka", "America/Sitka"),
                            ("America/St_Barthelemy", "America/St_Barthelemy"),
                            ("America/St_Johns", "America/St_Johns"),
                            ("America/St_Kitts", "America/St_Kitts"),
                            ("America/St_Lucia", "America/St_Lucia"),
                            ("America/St_Thomas", "America/St_Thomas"),
                            ("America/St_Vincent", "America/St_Vincent"),
                            ("America/Swift_Current", "America/Swift_Current"),
                            ("America/Tegucigalpa", "America/Tegucigalpa"),
                            ("America/Thule", "America/Thule"),
                            ("America/Thunder_Bay", "America/Thunder_Bay"),
                            ("America/Tijuana", "America/Tijuana"),
                            ("America/Toronto", "America/Toronto"),
                            ("America/Tortola", "America/Tortola"),
                            ("America/Vancouver", "America/Vancouver"),
                            ("America/Virgin", "America/Virgin"),
                            ("America/Whitehorse", "America/Whitehorse"),
                            ("America/Winnipeg", "America/Winnipeg"),
                            ("America/Yakutat", "America/Yakutat"),
                            ("America/Yellowknife", "America/Yellowknife"),
                            ("Antarctica/Casey", "Antarctica/Casey"),
                            ("Antarctica/Davis", "Antarctica/Davis"),
                            ("Antarctica/DumontDUrville", "Antarctica/DumontDUrville"),
                            ("Antarctica/Macquarie", "Antarctica/Macquarie"),
                            ("Antarctica/Mawson", "Antarctica/Mawson"),
                            ("Antarctica/McMurdo", "Antarctica/McMurdo"),
                            ("Antarctica/Palmer", "Antarctica/Palmer"),
                            ("Antarctica/Rothera", "Antarctica/Rothera"),
                            ("Antarctica/South_Pole", "Antarctica/South_Pole"),
                            ("Antarctica/Syowa", "Antarctica/Syowa"),
                            ("Antarctica/Troll", "Antarctica/Troll"),
                            ("Antarctica/Vostok", "Antarctica/Vostok"),
                            ("Arctic/Longyearbyen", "Arctic/Longyearbyen"),
                            ("Asia/Aden", "Asia/Aden"),
                            ("Asia/Almaty", "Asia/Almaty"),
                            ("Asia/Amman", "Asia/Amman"),
                            ("Asia/Anadyr", "Asia/Anadyr"),
                            ("Asia/Aqtau", "Asia/Aqtau"),
                            ("Asia/Aqtobe", "Asia/Aqtobe"),
                            ("Asia/Ashgabat", "Asia/Ashgabat"),
                            ("Asia/Ashkhabad", "Asia/Ashkhabad"),
                            ("Asia/Atyrau", "Asia/Atyrau"),
                            ("Asia/Baghdad", "Asia/Baghdad"),
                            ("Asia/Bahrain", "Asia/Bahrain"),
                            ("Asia/Baku", "Asia/Baku"),
                            ("Asia/Bangkok", "Asia/Bangkok"),
                            ("Asia/Barnaul", "Asia/Barnaul"),
                            ("Asia/Beirut", "Asia/Beirut"),
                            ("Asia/Bishkek", "Asia/Bishkek"),
                            ("Asia/Brunei", "Asia/Brunei"),
                            ("Asia/Calcutta", "Asia/Calcutta"),
                            ("Asia/Chita", "Asia/Chita"),
                            ("Asia/Choibalsan", "Asia/Choibalsan"),
                            ("Asia/Chongqing", "Asia/Chongqing"),
                            ("Asia/Chungking", "Asia/Chungking"),
                            ("Asia/Colombo", "Asia/Colombo"),
                            ("Asia/Dacca", "Asia/Dacca"),
                            ("Asia/Damascus", "Asia/Damascus"),
                            ("Asia/Dhaka", "Asia/Dhaka"),
                            ("Asia/Dili", "Asia/Dili"),
                            ("Asia/Dubai", "Asia/Dubai"),
                            ("Asia/Dushanbe", "Asia/Dushanbe"),
                            ("Asia/Famagusta", "Asia/Famagusta"),
                            ("Asia/Gaza", "Asia/Gaza"),
                            ("Asia/Harbin", "Asia/Harbin"),
                            ("Asia/Hebron", "Asia/Hebron"),
                            ("Asia/Ho_Chi_Minh", "Asia/Ho_Chi_Minh"),
                            ("Asia/Hong_Kong", "Asia/Hong_Kong"),
                            ("Asia/Hovd", "Asia/Hovd"),
                            ("Asia/Irkutsk", "Asia/Irkutsk"),
                            ("Asia/Istanbul", "Asia/Istanbul"),
                            ("Asia/Jakarta", "Asia/Jakarta"),
                            ("Asia/Jayapura", "Asia/Jayapura"),
                            ("Asia/Jerusalem", "Asia/Jerusalem"),
                            ("Asia/Kabul", "Asia/Kabul"),
                            ("Asia/Kamchatka", "Asia/Kamchatka"),
                            ("Asia/Karachi", "Asia/Karachi"),
                            ("Asia/Kashgar", "Asia/Kashgar"),
                            ("Asia/Kathmandu", "Asia/Kathmandu"),
                            ("Asia/Katmandu", "Asia/Katmandu"),
                            ("Asia/Khandyga", "Asia/Khandyga"),
                            ("Asia/Kolkata", "Asia/Kolkata"),
                            ("Asia/Krasnoyarsk", "Asia/Krasnoyarsk"),
                            ("Asia/Kuala_Lumpur", "Asia/Kuala_Lumpur"),
                            ("Asia/Kuching", "Asia/Kuching"),
                            ("Asia/Kuwait", "Asia/Kuwait"),
                            ("Asia/Macao", "Asia/Macao"),
                            ("Asia/Macau", "Asia/Macau"),
                            ("Asia/Magadan", "Asia/Magadan"),
                            ("Asia/Makassar", "Asia/Makassar"),
                            ("Asia/Manila", "Asia/Manila"),
                            ("Asia/Muscat", "Asia/Muscat"),
                            ("Asia/Nicosia", "Asia/Nicosia"),
                            ("Asia/Novokuznetsk", "Asia/Novokuznetsk"),
                            ("Asia/Novosibirsk", "Asia/Novosibirsk"),
                            ("Asia/Omsk", "Asia/Omsk"),
                            ("Asia/Oral", "Asia/Oral"),
                            ("Asia/Phnom_Penh", "Asia/Phnom_Penh"),
                            ("Asia/Pontianak", "Asia/Pontianak"),
                            ("Asia/Pyongyang", "Asia/Pyongyang"),
                            ("Asia/Qatar", "Asia/Qatar"),
                            ("Asia/Qostanay", "Asia/Qostanay"),
                            ("Asia/Qyzylorda", "Asia/Qyzylorda"),
                            ("Asia/Rangoon", "Asia/Rangoon"),
                            ("Asia/Riyadh", "Asia/Riyadh"),
                            ("Asia/Saigon", "Asia/Saigon"),
                            ("Asia/Sakhalin", "Asia/Sakhalin"),
                            ("Asia/Samarkand", "Asia/Samarkand"),
                            ("Asia/Seoul", "Asia/Seoul"),
                            ("Asia/Shanghai", "Asia/Shanghai"),
                            ("Asia/Singapore", "Asia/Singapore"),
                            ("Asia/Srednekolymsk", "Asia/Srednekolymsk"),
                            ("Asia/Taipei", "Asia/Taipei"),
                            ("Asia/Tashkent", "Asia/Tashkent"),
                            ("Asia/Tbilisi", "Asia/Tbilisi"),
                            ("Asia/Tehran", "Asia/Tehran"),
                            ("Asia/Tel_Aviv", "Asia/Tel_Aviv"),
                            ("Asia/Thimbu", "Asia/Thimbu"),
                            ("Asia/Thimphu", "Asia/Thimphu"),
                            ("Asia/Tokyo", "Asia/Tokyo"),
                            ("Asia/Tomsk", "Asia/Tomsk"),
                            ("Asia/Ujung_Pandang", "Asia/Ujung_Pandang"),
                            ("Asia/Ulaanbaatar", "Asia/Ulaanbaatar"),
                            ("Asia/Ulan_Bator", "Asia/Ulan_Bator"),
                            ("Asia/Urumqi", "Asia/Urumqi"),
                            ("Asia/Ust-Nera", "Asia/Ust-Nera"),
                            ("Asia/Vientiane", "Asia/Vientiane"),
                            ("Asia/Vladivostok", "Asia/Vladivostok"),
                            ("Asia/Yakutsk", "Asia/Yakutsk"),
                            ("Asia/Yangon", "Asia/Yangon"),
                            ("Asia/Yekaterinburg", "Asia/Yekaterinburg"),
                            ("Asia/Yerevan", "Asia/Yerevan"),
                            ("Atlantic/Azores", "Atlantic/Azores"),
                            ("Atlantic/Bermuda", "Atlantic/Bermuda"),
                            ("Atlantic/Canary", "Atlantic/Canary"),
                            ("Atlantic/Cape_Verde", "Atlantic/Cape_Verde"),
                            ("Atlantic/Faeroe", "Atlantic/Faeroe"),
                            ("Atlantic/Faroe", "Atlantic/Faroe"),
                            ("Atlantic/Jan_Mayen", "Atlantic/Jan_Mayen"),
                            ("Atlantic/Madeira", "Atlantic/Madeira"),
                            ("Atlantic/Reykjavik", "Atlantic/Reykjavik"),
                            ("Atlantic/South_Georgia", "Atlantic/South_Georgia"),
                            ("Atlantic/St_Helena", "Atlantic/St_Helena"),
                            ("Atlantic/Stanley", "Atlantic/Stanley"),
                            ("Australia/ACT", "Australia/ACT"),
                            ("Australia/Adelaide", "Australia/Adelaide"),
                            ("Australia/Brisbane", "Australia/Brisbane"),
                            ("Australia/Broken_Hill", "Australia/Broken_Hill"),
                            ("Australia/Canberra", "Australia/Canberra"),
                            ("Australia/Currie", "Australia/Currie"),
                            ("Australia/Darwin", "Australia/Darwin"),
                            ("Australia/Eucla", "Australia/Eucla"),
                            ("Australia/Hobart", "Australia/Hobart"),
                            ("Australia/LHI", "Australia/LHI"),
                            ("Australia/Lindeman", "Australia/Lindeman"),
                            ("Australia/Lord_Howe", "Australia/Lord_Howe"),
                            ("Australia/Melbourne", "Australia/Melbourne"),
                            ("Australia/NSW", "Australia/NSW"),
                            ("Australia/North", "Australia/North"),
                            ("Australia/Perth", "Australia/Perth"),
                            ("Australia/Queensland", "Australia/Queensland"),
                            ("Australia/South", "Australia/South"),
                            ("Australia/Sydney", "Australia/Sydney"),
                            ("Australia/Tasmania", "Australia/Tasmania"),
                            ("Australia/Victoria", "Australia/Victoria"),
                            ("Australia/West", "Australia/West"),
                            ("Australia/Yancowinna", "Australia/Yancowinna"),
                            ("Brazil/Acre", "Brazil/Acre"),
                            ("Brazil/DeNoronha", "Brazil/DeNoronha"),
                            ("Brazil/East", "Brazil/East"),
                            ("Brazil/West", "Brazil/West"),
                            ("CET", "CET"),
                            ("CST6CDT", "CST6CDT"),
                            ("Canada/Atlantic", "Canada/Atlantic"),
                            ("Canada/Central", "Canada/Central"),
                            ("Canada/Eastern", "Canada/Eastern"),
                            ("Canada/Mountain", "Canada/Mountain"),
                            ("Canada/Newfoundland", "Canada/Newfoundland"),
                            ("Canada/Pacific", "Canada/Pacific"),
                            ("Canada/Saskatchewan", "Canada/Saskatchewan"),
                            ("Canada/Yukon", "Canada/Yukon"),
                            ("Chile/Continental", "Chile/Continental"),
                            ("Chile/EasterIsland", "Chile/EasterIsland"),
                            ("Cuba", "Cuba"),
                            ("EET", "EET"),
                            ("EST", "EST"),
                            ("EST5EDT", "EST5EDT"),
                            ("Egypt", "Egypt"),
                            ("Eire", "Eire"),
                            ("Etc/GMT", "Etc/GMT"),
                            ("Etc/GMT+0", "Etc/GMT+0"),
                            ("Etc/GMT+1", "Etc/GMT+1"),
                            ("Etc/GMT+10", "Etc/GMT+10"),
                            ("Etc/GMT+11", "Etc/GMT+11"),
                            ("Etc/GMT+12", "Etc/GMT+12"),
                            ("Etc/GMT+2", "Etc/GMT+2"),
                            ("Etc/GMT+3", "Etc/GMT+3"),
                            ("Etc/GMT+4", "Etc/GMT+4"),
                            ("Etc/GMT+5", "Etc/GMT+5"),
                            ("Etc/GMT+6", "Etc/GMT+6"),
                            ("Etc/GMT+7", "Etc/GMT+7"),
                            ("Etc/GMT+8", "Etc/GMT+8"),
                            ("Etc/GMT+9", "Etc/GMT+9"),
                            ("Etc/GMT-0", "Etc/GMT-0"),
                            ("Etc/GMT-1", "Etc/GMT-1"),
                            ("Etc/GMT-10", "Etc/GMT-10"),
                            ("Etc/GMT-11", "Etc/GMT-11"),
                            ("Etc/GMT-12", "Etc/GMT-12"),
                            ("Etc/GMT-13", "Etc/GMT-13"),
                            ("Etc/GMT-14", "Etc/GMT-14"),
                            ("Etc/GMT-2", "Etc/GMT-2"),
                            ("Etc/GMT-3", "Etc/GMT-3"),
                            ("Etc/GMT-4", "Etc/GMT-4"),
                            ("Etc/GMT-5", "Etc/GMT-5"),
                            ("Etc/GMT-6", "Etc/GMT-6"),
                            ("Etc/GMT-7", "Etc/GMT-7"),
                            ("Etc/GMT-8", "Etc/GMT-8"),
                            ("Etc/GMT-9", "Etc/GMT-9"),
                            ("Etc/GMT0", "Etc/GMT0"),
                            ("Etc/Greenwich", "Etc/Greenwich"),
                            ("Etc/UCT", "Etc/UCT"),
                            ("Etc/UTC", "Etc/UTC"),
                            ("Etc/Universal", "Etc/Universal"),
                            ("Etc/Zulu", "Etc/Zulu"),
                            ("Europe/Amsterdam", "Europe/Amsterdam"),
                            ("Europe/Andorra", "Europe/Andorra"),
                            ("Europe/Astrakhan", "Europe/Astrakhan"),
                            ("Europe/Athens", "Europe/Athens"),
                            ("Europe/Belfast", "Europe/Belfast"),
                            ("Europe/Belgrade", "Europe/Belgrade"),
                            ("Europe/Berlin", "Europe/Berlin"),
                            ("Europe/Bratislava", "Europe/Bratislava"),
                            ("Europe/Brussels", "Europe/Brussels"),
                            ("Europe/Bucharest", "Europe/Bucharest"),
                            ("Europe/Budapest", "Europe/Budapest"),
                            ("Europe/Busingen", "Europe/Busingen"),
                            ("Europe/Chisinau", "Europe/Chisinau"),
                            ("Europe/Copenhagen", "Europe/Copenhagen"),
                            ("Europe/Dublin", "Europe/Dublin"),
                            ("Europe/Gibraltar", "Europe/Gibraltar"),
                            ("Europe/Guernsey", "Europe/Guernsey"),
                            ("Europe/Helsinki", "Europe/Helsinki"),
                            ("Europe/Isle_of_Man", "Europe/Isle_of_Man"),
                            ("Europe/Istanbul", "Europe/Istanbul"),
                            ("Europe/Jersey", "Europe/Jersey"),
                            ("Europe/Kaliningrad", "Europe/Kaliningrad"),
                            ("Europe/Kiev", "Europe/Kiev"),
                            ("Europe/Kirov", "Europe/Kirov"),
                            ("Europe/Kyiv", "Europe/Kyiv"),
                            ("Europe/Lisbon", "Europe/Lisbon"),
                            ("Europe/Ljubljana", "Europe/Ljubljana"),
                            ("Europe/London", "Europe/London"),
                            ("Europe/Luxembourg", "Europe/Luxembourg"),
                            ("Europe/Madrid", "Europe/Madrid"),
                            ("Europe/Malta", "Europe/Malta"),
                            ("Europe/Mariehamn", "Europe/Mariehamn"),
                            ("Europe/Minsk", "Europe/Minsk"),
                            ("Europe/Monaco", "Europe/Monaco"),
                            ("Europe/Moscow", "Europe/Moscow"),
                            ("Europe/Nicosia", "Europe/Nicosia"),
                            ("Europe/Oslo", "Europe/Oslo"),
                            ("Europe/Paris", "Europe/Paris"),
                            ("Europe/Podgorica", "Europe/Podgorica"),
                            ("Europe/Prague", "Europe/Prague"),
                            ("Europe/Riga", "Europe/Riga"),
                            ("Europe/Rome", "Europe/Rome"),
                            ("Europe/Samara", "Europe/Samara"),
                            ("Europe/San_Marino", "Europe/San_Marino"),
                            ("Europe/Sarajevo", "Europe/Sarajevo"),
                            ("Europe/Saratov", "Europe/Saratov"),
                            ("Europe/Simferopol", "Europe/Simferopol"),
                            ("Europe/Skopje", "Europe/Skopje"),
                            ("Europe/Sofia", "Europe/Sofia"),
                            ("Europe/Stockholm", "Europe/Stockholm"),
                            ("Europe/Tallinn", "Europe/Tallinn"),
                            ("Europe/Tirane", "Europe/Tirane"),
                            ("Europe/Tiraspol", "Europe/Tiraspol"),
                            ("Europe/Ulyanovsk", "Europe/Ulyanovsk"),
                            ("Europe/Uzhgorod", "Europe/Uzhgorod"),
                            ("Europe/Vaduz", "Europe/Vaduz"),
                            ("Europe/Vatican", "Europe/Vatican"),
                            ("Europe/Vienna", "Europe/Vienna"),
                            ("Europe/Vilnius", "Europe/Vilnius"),
                            ("Europe/Volgograd", "Europe/Volgograd"),
                            ("Europe/Warsaw", "Europe/Warsaw"),
                            ("Europe/Zagreb", "Europe/Zagreb"),
                            ("Europe/Zaporozhye", "Europe/Zaporozhye"),
                            ("Europe/Zurich", "Europe/Zurich"),
                            ("GB", "GB"),
                            ("GB-Eire", "GB-Eire"),
                            ("GMT", "GMT"),
                            ("GMT+0", "GMT+0"),
                            ("GMT-0", "GMT-0"),
                            ("GMT0", "GMT0"),
                            ("Greenwich", "Greenwich"),
                            ("HST", "HST"),
                            ("Hongkong", "Hongkong"),
                            ("Iceland", "Iceland"),
                            ("Indian/Antananarivo", "Indian/Antananarivo"),
                            ("Indian/Chagos", "Indian/Chagos"),
                            ("Indian/Christmas", "Indian/Christmas"),
                            ("Indian/Cocos", "Indian/Cocos"),
                            ("Indian/Comoro", "Indian/Comoro"),
                            ("Indian/Kerguelen", "Indian/Kerguelen"),
                            ("Indian/Mahe", "Indian/Mahe"),
                            ("Indian/Maldives", "Indian/Maldives"),
                            ("Indian/Mauritius", "Indian/Mauritius"),
                            ("Indian/Mayotte", "Indian/Mayotte"),
                            ("Indian/Reunion", "Indian/Reunion"),
                            ("Iran", "Iran"),
                            ("Israel", "Israel"),
                            ("Jamaica", "Jamaica"),
                            ("Japan", "Japan"),
                            ("Kwajalein", "Kwajalein"),
                            ("Libya", "Libya"),
                            ("MET", "MET"),
                            ("MST", "MST"),
                            ("MST7MDT", "MST7MDT"),
                            ("Mexico/BajaNorte", "Mexico/BajaNorte"),
                            ("Mexico/BajaSur", "Mexico/BajaSur"),
                            ("Mexico/General", "Mexico/General"),
                            ("NZ", "NZ"),
                            ("NZ-CHAT", "NZ-CHAT"),
                            ("Navajo", "Navajo"),
                            ("PRC", "PRC"),
                            ("PST8PDT", "PST8PDT"),
                            ("Pacific/Apia", "Pacific/Apia"),
                            ("Pacific/Auckland", "Pacific/Auckland"),
                            ("Pacific/Bougainville", "Pacific/Bougainville"),
                            ("Pacific/Chatham", "Pacific/Chatham"),
                            ("Pacific/Chuuk", "Pacific/Chuuk"),
                            ("Pacific/Easter", "Pacific/Easter"),
                            ("Pacific/Efate", "Pacific/Efate"),
                            ("Pacific/Enderbury", "Pacific/Enderbury"),
                            ("Pacific/Fakaofo", "Pacific/Fakaofo"),
                            ("Pacific/Fiji", "Pacific/Fiji"),
                            ("Pacific/Funafuti", "Pacific/Funafuti"),
                            ("Pacific/Galapagos", "Pacific/Galapagos"),
                            ("Pacific/Gambier", "Pacific/Gambier"),
                            ("Pacific/Guadalcanal", "Pacific/Guadalcanal"),
                            ("Pacific/Guam", "Pacific/Guam"),
                            ("Pacific/Honolulu", "Pacific/Honolulu"),
                            ("Pacific/Johnston", "Pacific/Johnston"),
                            ("Pacific/Kanton", "Pacific/Kanton"),
                            ("Pacific/Kiritimati", "Pacific/Kiritimati"),
                            ("Pacific/Kosrae", "Pacific/Kosrae"),
                            ("Pacific/Kwajalein", "Pacific/Kwajalein"),
                            ("Pacific/Majuro", "Pacific/Majuro"),
                            ("Pacific/Marquesas", "Pacific/Marquesas"),
                            ("Pacific/Midway", "Pacific/Midway"),
                            ("Pacific/Nauru", "Pacific/Nauru"),
                            ("Pacific/Niue", "Pacific/Niue"),
                            ("Pacific/Norfolk", "Pacific/Norfolk"),
                            ("Pacific/Noumea", "Pacific/Noumea"),
                            ("Pacific/Pago_Pago", "Pacific/Pago_Pago"),
                            ("Pacific/Palau", "Pacific/Palau"),
                            ("Pacific/Pitcairn", "Pacific/Pitcairn"),
                            ("Pacific/Pohnpei", "Pacific/Pohnpei"),
                            ("Pacific/Ponape", "Pacific/Ponape"),
                            ("Pacific/Port_Moresby", "Pacific/Port_Moresby"),
                            ("Pacific/Rarotonga", "Pacific/Rarotonga"),
                            ("Pacific/Saipan", "Pacific/Saipan"),
                            ("Pacific/Samoa", "Pacific/Samoa"),
                            ("Pacific/Tahiti", "Pacific/Tahiti"),
                            ("Pacific/Tarawa", "Pacific/Tarawa"),
                            ("Pacific/Tongatapu", "Pacific/Tongatapu"),
                            ("Pacific/Truk", "Pacific/Truk"),
                            ("Pacific/Wake", "Pacific/Wake"),
                            ("Pacific/Wallis", "Pacific/Wallis"),
                            ("Pacific/Yap", "Pacific/Yap"),
                            ("Poland", "Poland"),
                            ("Portugal", "Portugal"),
                            ("ROC", "ROC"),
                            ("ROK", "ROK"),
                            ("Singapore", "Singapore"),
                            ("Turkey", "Turkey"),
                            ("UCT", "UCT"),
                            ("US/Alaska", "US/Alaska"),
                            ("US/Aleutian", "US/Aleutian"),
                            ("US/Arizona", "US/Arizona"),
                            ("US/Central", "US/Central"),
                            ("US/East-Indiana", "US/East-Indiana"),
                            ("US/Eastern", "US/Eastern"),
                            ("US/Hawaii", "US/Hawaii"),
                            ("US/Indiana-Starke", "US/Indiana-Starke"),
                            ("US/Michigan", "US/Michigan"),
                            ("US/Mountain", "US/Mountain"),
                            ("US/Pacific", "US/Pacific"),
                            ("US/Samoa", "US/Samoa"),
                            ("UTC", "UTC"),
                            ("Universal", "Universal"),
                            ("W-SU", "W-SU"),
                            ("WET", "WET"),
                            ("Zulu", "Zulu"),
                        ],
                        default="CET",
                        max_length=300,
                    ),
                ),
                ("run_timeout", models.PositiveIntegerField(default=3600)),
                ("session_timeout", models.PositiveIntegerField(default=43200)),
                (
                    "path_ansible_config",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "path_ssh_known_hosts",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "debug",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=False
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AwAPIKey",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("prefix", models.CharField(editable=False, max_length=8, unique=True)),
                ("hashed_key", models.CharField(editable=False, max_length=150)),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "name",
                    models.CharField(
                        default=None,
                        help_text="A free-form name for the API key. Need not be unique. 50 characters max.",
                        max_length=50,
                    ),
                ),
                (
                    "revoked",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)",
                    ),
                ),
                (
                    "expiry_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Once API key expires, clients cannot use it anymore.",
                        null=True,
                        verbose_name="Expires",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "API key",
                "verbose_name_plural": "API keys",
                "ordering": ("-created",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="JobExecutionResult",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("time_start", models.DateTimeField(default=django.utils.timezone.now)),
                ("time_fin", models.DateTimeField(blank=True, default=None, null=True)),
                (
                    "failed",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=False
                    ),
                ),
                (
                    "error",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="jobresult_fk_error",
                        to="aw.joberror",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="JobExecution",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "limit",
                    models.CharField(
                        blank=True, default=None, max_length=500, null=True
                    ),
                ),
                (
                    "verbosity",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Default"),
                            (1, "v"),
                            (2, "vv"),
                            (3, "vvv"),
                            (4, "vvvv"),
                            (5, "vvvv"),
                            (6, "vvvvvv"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        blank=True, default=None, max_length=150, null=True
                    ),
                ),
                (
                    "mode_diff",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=False
                    ),
                ),
                (
                    "mode_check",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=False
                    ),
                ),
                (
                    "environment_vars",
                    models.CharField(
                        blank=True, default=None, max_length=1000, null=True
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True, default=None, max_length=150, null=True
                    ),
                ),
                (
                    "tags_skip",
                    models.CharField(
                        blank=True, default=None, max_length=150, null=True
                    ),
                ),
                (
                    "cmd_args",
                    models.CharField(
                        blank=True, default=None, max_length=150, null=True
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Waiting"),
                            (1, "Starting"),
                            (2, "Running"),
                            (3, "Failed"),
                            (4, "Finished"),
                            (5, "Stopping"),
                            (6, "Stopped"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "log_stdout",
                    models.CharField(
                        blank=True, default=None, max_length=300, null=True
                    ),
                ),
                (
                    "log_stderr",
                    models.CharField(
                        blank=True, default=None, max_length=300, null=True
                    ),
                ),
                (
                    "log_stdout_repo",
                    models.CharField(
                        blank=True, default=None, max_length=300, null=True
                    ),
                ),
                (
                    "log_stderr_repo",
                    models.CharField(
                        blank=True, default=None, max_length=300, null=True
                    ),
                ),
                (
                    "command",
                    models.CharField(
                        blank=True, default=None, max_length=1000, null=True
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobexec_fk_job",
                        to="aw.job",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="jobexec_fk_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_credentials",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="jobexec_fk_usercreds",
                        to="aw.job",
                    ),
                ),
                (
                    "result",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="jobexec_fk_result",
                        to="aw.jobexecutionresult",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="JobExecutionResultHost",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("hostname", models.CharField(max_length=300)),
                (
                    "unreachable",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")], default=False
                    ),
                ),
                ("tasks_skipped", models.PositiveSmallIntegerField(default=0)),
                ("tasks_ok", models.PositiveSmallIntegerField(default=0)),
                ("tasks_failed", models.PositiveSmallIntegerField(default=0)),
                ("tasks_rescued", models.PositiveSmallIntegerField(default=0)),
                ("tasks_ignored", models.PositiveSmallIntegerField(default=0)),
                ("tasks_changed", models.PositiveSmallIntegerField(default=0)),
                (
                    "error",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="jobresulthost_fk_error",
                        to="aw.joberror",
                    ),
                ),
                (
                    "result",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobresulthost_fk_result",
                        to="aw.jobexecutionresult",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddConstraint(
            model_name="jobglobalcredentials",
            constraint=models.UniqueConstraint(fields=("name",), name="jobcreds_name"),
        ),
        migrations.AddField(
            model_name="jobexecution",
            name="credential_global",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="jobexec_fk_credglob",
                to="aw.jobglobalcredentials",
            ),
        ),
        migrations.AddField(
            model_name="jobcredentialspermissionmapping",
            name="credentials",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="aw.jobglobalcredentials",
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="credentials_default",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="job_fk_creddflt",
                to="aw.jobglobalcredentials",
            ),
        ),
        migrations.AddField(
            model_name="jobpermission",
            name="credentials",
            field=models.ManyToManyField(
                through="aw.JobCredentialsPermissionMapping",
                to="aw.jobglobalcredentials",
            ),
        ),
        migrations.AddField(
            model_name="jobcredentialspermissionmapping",
            name="permission",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="aw.jobpermission"
            ),
        ),
        migrations.AddField(
            model_name="jobpermissionmapping",
            name="job",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="aw.job"
            ),
        ),
        migrations.AddField(
            model_name="jobpermissionmapping",
            name="permission",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="aw.jobpermission"
            ),
        ),
        migrations.AddField(
            model_name="jobpermission",
            name="jobs",
            field=models.ManyToManyField(
                through="aw.JobPermissionMapping", to="aw.job"
            ),
        ),
        migrations.AddField(
            model_name="jobpermissionmembergroup",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="auth.group"
            ),
        ),
        migrations.AddField(
            model_name="jobpermissionmembergroup",
            name="permission",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="aw.jobpermission"
            ),
        ),
        migrations.AddField(
            model_name="jobpermission",
            name="groups",
            field=models.ManyToManyField(
                through="aw.JobPermissionMemberGroup", to="auth.group"
            ),
        ),
        migrations.AddField(
            model_name="jobpermissionmemberuser",
            name="permission",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="aw.jobpermission"
            ),
        ),
        migrations.AddField(
            model_name="jobpermissionmemberuser",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="jobpermission",
            name="users",
            field=models.ManyToManyField(
                through="aw.JobPermissionMemberUser", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="jobqueue",
            name="job",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="jobqueue_fk_job",
                to="aw.job",
            ),
        ),
        migrations.AddField(
            model_name="jobqueue",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="jobqueue_fk_user",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="jobrepositorypermissionmapping",
            name="permission",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="aw.jobpermission"
            ),
        ),
        migrations.AddField(
            model_name="jobusercredentials",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="jobexecution",
            name="credential_user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="jobexec_fk_credusr",
                to="aw.jobusercredentials",
            ),
        ),
        migrations.AddField(
            model_name="repository",
            name="git_credentials",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="repo_fk_cred",
                to="aw.jobglobalcredentials",
            ),
        ),
        migrations.AddField(
            model_name="jobrepositorypermissionmapping",
            name="repository",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="aw.repository"
            ),
        ),
        migrations.AddField(
            model_name="jobpermission",
            name="repositories",
            field=models.ManyToManyField(
                through="aw.JobRepositoryPermissionMapping", to="aw.repository"
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="repository",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="job_fk_repo",
                to="aw.repository",
            ),
        ),
        migrations.AddConstraint(
            model_name="jobcredentialspermissionmapping",
            constraint=models.UniqueConstraint(
                fields=("credentials", "permission"), name="jobcredpermmap_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="jobpermissionmapping",
            constraint=models.UniqueConstraint(
                fields=("job", "permission"), name="jobpermmap_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="jobpermissionmembergroup",
            constraint=models.UniqueConstraint(
                fields=("group", "permission"), name="jobpermmembergrp_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="jobpermissionmemberuser",
            constraint=models.UniqueConstraint(
                fields=("user", "permission"), name="jobpermmemberuser_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="jobusercredentials",
            constraint=models.UniqueConstraint(
                fields=("user", "name"), name="jobusercreds_user_name"
            ),
        ),
        migrations.AddConstraint(
            model_name="repository",
            constraint=models.UniqueConstraint(
                fields=("name",), name="repo_name_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="jobrepositorypermissionmapping",
            constraint=models.UniqueConstraint(
                fields=("repository", "permission"), name="jobrepopermmap_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="jobpermission",
            constraint=models.UniqueConstraint(
                fields=("name",), name="jobperm_name_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="job",
            constraint=models.UniqueConstraint(
                fields=("name",), name="job_name_unique"
            ),
        ),
    ]
