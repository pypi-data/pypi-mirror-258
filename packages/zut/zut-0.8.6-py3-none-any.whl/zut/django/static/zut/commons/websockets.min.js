import{DEBUG,messages}from"./index.min.js";import{gettext}from"./i18n.min.js";const BASE_WEBSOCKET_URL=`${"https:"==window.location.protocol?"wss:":"ws:"}//`+window.location.hostname+("http:"==window.location.protocol&&80==window.location.port||"https:"==window.location.protocol&&443==window.location.port?"":":"+window.location.port);function startWebsocket(n,{onMessage:s,reconnectButton:r,name:c}={}){let o=new WebSocket(n);const l=c?c+" ":"";o.onopen=e=>{DEBUG&&console.log(l+"websocket: open")},o.onclose=e=>{DEBUG&&console.log(l+"websocket: close",e.code),o=null;let t=gettext("Connection to web server closed");if(3e3==e.code)t+=gettext(":")+" "+gettext("Unauthorized")+".",messages.error(t);else if(4181==e.code)t+=gettext(":")+" "+gettext("Celery broker is not connected")+".",messages.error(t);else if(r){let o=null;e=messages.error(`${t}. <a href="#" class="reconnect">${gettext("Try to reconnect")}</a>.`);e.querySelector(".reconnect").addEventListener("click",e=>{e.preventDefault(),startWebsocket(n,{onMessage:s,reconnectButton:r,name:c}),o&&o._element&&o.close()}),o=new bootstrap.Alert(e)}else messages.error(t+".")},(DEBUG||s)&&(o.onmessage=e=>{e=JSON.parse(e.data);DEBUG&&console.log(l+"websocket: message",e),s(e)}),o.onerror=e=>{DEBUG&&console.error(l+"websocket: error",e)}}export{BASE_WEBSOCKET_URL,startWebsocket};
//# sourceMappingURL=websockets.min.js.map