Metadata-Version: 2.1
Name: pachyderm
Version: 3.2.2
Summary: Physics Analysis Core for Heavy-Ions
Project-URL: Homepage, https://github.com/raymondEhlers/pachyderm
Project-URL: Bug Tracker, https://github.com/raymondEhlers/pachyderm/issues
Project-URL: Discussions, https://github.com/raymondEhlers/pachyderm/discussions
Project-URL: Changelog, https://github.com/raymondEhlers/pachyderm/releases
Author-email: Raymond Ehlers <raymond.ehlers@cern.ch>
License: BSD 3-Clause License
        
        Copyright (c) 2018-2024, Raymond Ehlers.
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        * Redistributions of source code must retain the above copyright notice, this
          list of conditions and the following disclaimer.
        
        * Redistributions in binary form must reproduce the above copyright notice,
          this list of conditions and the following disclaimer in the documentation
          and/or other materials provided with the distribution.
        
        * Neither the name of the vector package developers nor the names of its
          contributors may be used to endorse or promote products derived from
          this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
License-File: LICENSE
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering
Classifier: Typing :: Typed
Requires-Python: >=3.10
Requires-Dist: attrs>=21.2.0
Requires-Dist: iminuit>=2.7.0
Requires-Dist: matplotlib>=3.3.2
Requires-Dist: numdifftools>=0.9.40
Requires-Dist: numpy>=1.21
Requires-Dist: ruamel-yaml>=0.17.10
Requires-Dist: scipy>=1.7.0
Provides-Extra: dev
Requires-Dist: boost-histogram>=1.2.1; extra == 'dev'
Requires-Dist: hist>=2.7.1; extra == 'dev'
Requires-Dist: mypy>=0.931; extra == 'dev'
Requires-Dist: pre-commit>=2.13.0; extra == 'dev'
Requires-Dist: pytest-cov>=3; extra == 'dev'
Requires-Dist: pytest-mock>=3.6.1; extra == 'dev'
Requires-Dist: pytest-sugar>=1.0.0; extra == 'dev'
Requires-Dist: pytest-xdist>=3.5.0; extra == 'dev'
Requires-Dist: pytest>=6; extra == 'dev'
Requires-Dist: ruff>=0.0.209; extra == 'dev'
Requires-Dist: uproot>=4; extra == 'dev'
Provides-Extra: docs
Requires-Dist: furo>=2023.08.17; extra == 'docs'
Requires-Dist: myst-parser>=0.13; extra == 'docs'
Requires-Dist: sphinx-autodoc-typehints; extra == 'docs'
Requires-Dist: sphinx-copybutton; extra == 'docs'
Requires-Dist: sphinx>=7.0; extra == 'docs'
Provides-Extra: test
Requires-Dist: pytest-cov>=3; extra == 'test'
Requires-Dist: pytest-mock>=3.6.1; extra == 'test'
Requires-Dist: pytest-sugar>=1.0.0; extra == 'test'
Requires-Dist: pytest-xdist>=3.5.0; extra == 'test'
Requires-Dist: pytest>=6; extra == 'test'
Description-Content-Type: text/markdown

# üêò Pachyderm

[![Actions Status][actions-badge]][actions-link]
[![Documentation Status][rtd-badge]][rtd-link]
[![Code Coverage][code-cov-badge]][code-cov-link]

[![PyPI version][pypi-version]][pypi-link]
[![Conda-Forge][conda-badge]][conda-link]
[![PyPI platforms][pypi-platforms]][pypi-link]

[![GitHub Discussion][github-discussions-badge]][github-discussions-link]

<!-- SPHINX-START -->

<!-- prettier-ignore-start -->
[actions-badge]:            https://github.com/raymondEhlers/pachyderm/workflows/CI/badge.svg
[actions-link]:             https://github.com/raymondEhlers/pachyderm/actions
[code-cov-link]:            https://codecov.io/gh/raymondEhlers/pachyderm
[code-cov-badge]:           https://codecov.io/gh/raymondEhlers/pachyderm/branch/main/graph/badge.svg
[conda-badge]:              https://img.shields.io/conda/vn/conda-forge/pachyderm
[conda-link]:               https://github.com/conda-forge/pachyderm-feedstock
[github-discussions-badge]: https://img.shields.io/static/v1?label=Discussions&message=Ask&color=blue&logo=github
[github-discussions-link]:  https://github.com/raymondEhlers/pachyderm/discussions
[pypi-link]:                https://pypi.org/project/pachyderm/
[pypi-platforms]:           https://img.shields.io/pypi/pyversions/pachyderm
[pypi-version]:             https://img.shields.io/pypi/v/pachyderm
[rtd-badge]:                https://readthedocs.org/projects/pachyderm-heavy-ion/badge/?version=latest
[rtd-link]:                 https://pachyderm-heavy-ion.readthedocs.io/en/latest/?badge=latest

<!-- prettier-ignore-end -->

Pachyderm[\*](#name-meaning) provides core functionality for heavy-ion physics analyses. The main
functionality includes a generic histogram projection interface, a recursive configuration determination
module (including overriding (merging) capabilities), and general utilities (especially for histograms). It
provides base functionality to the [ALICE jet-hadron
analysis](https://github.com/raymondEhlers/alice-jet-hadron) package. This package provides many examples of
how pachyderm can be used in various analysis tasks.

For further information on the capabilities, see the
[documentation](https://readthedocs.org/projects/pachyderm-heavy-ion/badge/?version=latest).

## Installation

Pachyderm requires python 3.6 or above. It is available on [PyPI](https://pypi.org/project/pachyderm/) and can
be installed via pip:

```bash
$ pip install pachyderm
```

## Dependencies

All dependencies are specified in the `setup.py` (and will be handled automatically when installed via pip)
except for ROOT. The package can be installed without ROOT with limited functionality, but for full
functionality, ROOT must be available.

### Dockerfile

There is a Dockerfile which is used for testing pachyderm with ROOT. It is based on the
[Overwatch](https://github.com/raymondEhlers/OVERWATCH) [base docker
image](https://hub.docker.com/r/rehlers/overwatch-base/) to allow us to avoid redeveloping another container
just to have ROOT available. It may also be used to run pachyderm if so desired, although such a use case
doesn't seem tremendously useful (which is why the image isn't pushed to docker hub).

## Development

I recommend setting up the development environment as follows:

```bash
# Setup
$ poetry install
# Setup git pre-commit hooks to reduce errors
$ pre-commit install
# develop develop develop...
```

## Documentation

All classes, functions, etc, should be documented, including with typing information. [The
docs](https://pachyderm-heavy-ion.readthedocs.io/en/latest/) are built on each new successful commit. They can
also be built locally using:

```bash
# Setup
$ poetry install
# Create the docs
$ pushd doc && make html && popd
# Open the created docs
$ open docs/_build/html/index.html
```

## Name Meaning

**PACHYDERM**: **P**hysics **A**nalysis **C**ore for **H**eav**Y**-ions with **D**etermination of (analysis)
**E**lements via **R**ecursion and **M**erging.
