"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .messagelist import MessageList
from dataclasses_json import Undefined, dataclass_json
from ivycheck import utils
from typing import Optional


@dataclasses.dataclass
class CheckConfigInternalParameters:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CheckConfigInternal:
    UNSET='__SPEAKEASY_UNSET__'
    input: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('input') }})
    check_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('check_name') }})
    parameters: CheckConfigInternalParameters = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters') }})
    context: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('context'), 'exclude': lambda f: f is CheckConfigInternal.UNSET }})
    check_version: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('check_version'), 'exclude': lambda f: f is CheckConfigInternal.UNSET }})
    message_list: Optional[MessageList] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message_list'), 'exclude': lambda f: f is CheckConfigInternal.UNSET }})
    golden_answer: Optional[str] = dataclasses.field(default=UNSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('golden_answer'), 'exclude': lambda f: f is CheckConfigInternal.UNSET }})
    

