# Generated by Django 4.1.10 on 2023-08-11 11:43

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0083_workflowcontenttype"),
        ("wagtailimages", "0025_alter_image_file_alter_rendition_file"),
        ("coderedcms", "0039_alter_classifierterm_slug"),
    ]

    operations = [
        migrations.CreateModel(
            name="LayoutSettingsOverride",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "navbar_color_scheme",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Optimizes text and other navbar elements for use with light or dark backgrounds.",
                        max_length=50,
                        verbose_name="Navbar color scheme",
                    ),
                ),
                (
                    "navbar_class",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text='Custom classes applied to navbar e.g. "bg-light", "bg-dark", "bg-primary".',
                        max_length=255,
                        verbose_name="Navbar CSS class",
                    ),
                ),
                (
                    "navbar_fixed",
                    models.BooleanField(
                        default=False,
                        help_text="Fixed navbar will remain at the top of the page when scrolling.",
                        verbose_name="Fixed navbar",
                    ),
                ),
                (
                    "navbar_content_fluid",
                    models.BooleanField(
                        default=False,
                        help_text="Content within the navbar will fill edge to edge.",
                        verbose_name="Full width navbar contents",
                    ),
                ),
                (
                    "navbar_collapse_mode",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Control on what screen sizes to show and collapse the navbar menu links.",
                        max_length=50,
                        verbose_name="Collapse navbar menu",
                    ),
                ),
                (
                    "navbar_format",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=50,
                        verbose_name="Navbar format",
                    ),
                ),
                (
                    "navbar_search",
                    models.BooleanField(
                        default=True,
                        help_text="Show search box in navbar",
                        verbose_name="Search box",
                    ),
                ),
                (
                    "frontend_theme",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=50,
                        verbose_name="Theme variant",
                    ),
                ),
                (
                    "from_email_address",
                    models.CharField(
                        blank=True,
                        help_text='The default email address this site appears to send from. For example: "sender@example.com" or "Sender Name <sender@example.com>" (without quotes)',
                        max_length=255,
                        verbose_name="From email address",
                    ),
                ),
                (
                    "search_num_results",
                    models.PositiveIntegerField(
                        default=10, verbose_name="Number of results per page"
                    ),
                ),
                (
                    "external_new_tab",
                    models.BooleanField(
                        default=False, verbose_name="Open all external links in new tab"
                    ),
                ),
                (
                    "google_maps_api_key",
                    models.CharField(
                        blank=True,
                        help_text="The API Key used for Google Maps.",
                        max_length=255,
                        verbose_name="Google Maps API Key",
                    ),
                ),
                (
                    "mailchimp_api_key",
                    models.CharField(
                        blank=True,
                        help_text="The API Key used for Mailchimp.",
                        max_length=255,
                        verbose_name="Mailchimp API Key",
                    ),
                ),
                (
                    "favicon",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="favicon_override",
                        to="wagtailimages.image",
                        verbose_name="Favicon",
                    ),
                ),
                (
                    "logo",
                    models.ForeignKey(
                        blank=True,
                        help_text="Brand logo used in the navbar and throughout the site",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                        verbose_name="Logo",
                    ),
                ),
                (
                    "site",
                    models.OneToOneField(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wagtailcore.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "CRX Settings",
            },
        ),
        migrations.CreateModel(
            name="TranslatableNavbar",
            fields=[
                (
                    "navbar_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="coderedcms.navbar",
                    ),
                ),
                (
                    "translation_key",
                    models.UUIDField(default=uuid.uuid4, editable=False),
                ),
                (
                    "locale",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="wagtailcore.locale",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("translation_key", "locale")},
            },
            bases=("coderedcms.navbar", models.Model),
        ),
        migrations.CreateModel(
            name="TranslatableFooter",
            fields=[
                (
                    "footer_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="coderedcms.footer",
                    ),
                ),
                (
                    "translation_key",
                    models.UUIDField(default=uuid.uuid4, editable=False),
                ),
                (
                    "locale",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="wagtailcore.locale",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("translation_key", "locale")},
            },
            bases=("coderedcms.footer", models.Model),
        ),
        migrations.CreateModel(
            name="NavbarOrderableOverride",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "navbar",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crx_settings_override.translatablenavbar",
                    ),
                ),
                (
                    "navbar_chooser",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="site_navbar",
                        to="crx_settings_override.layoutsettingsoverride",
                        verbose_name="Site Navbars",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FooterOrderableOverride",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "footer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="crx_settings_override.translatablefooter",
                    ),
                ),
                (
                    "footer_chooser",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="site_footer",
                        to="crx_settings_override.layoutsettingsoverride",
                        verbose_name="Site Footers",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
