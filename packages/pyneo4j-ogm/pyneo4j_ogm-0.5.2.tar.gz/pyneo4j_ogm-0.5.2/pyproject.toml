[tool.poetry]
name = "pyneo4j-ogm"
version = "0.5.2"
description = "Asynchronous Python OGM for Neo4j"
authors = ["groc-prog <marc.troisner@gmail.com>"]
maintainers = ["groc-prog <marc.troisner@gmail.com>"]
readme = "README.md"
license = "MIT"
keywords = ["neo4j", "python", "orm", "ogm", "async", "asynchronous", "database", "graph-database", "pydantic"]
homepage = "https://github.com/groc-prog/pyneo4j-ogm"
repository = "https://github.com/groc-prog/pyneo4j-ogm"
documentation = "https://github.com/groc-prog/pyneo4j-ogm#readme"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Topic :: Database",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
packages = [{ include = "pyneo4j_ogm" }]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = ">=1.10,<3.0"
neo4j = "^5.9.0"
typing-extensions = "^4.8.0"
argparse = "^1.4.0"

[tool.poetry.group.dev.dependencies]
pylint = "^2.17.5"
black = "^23.7.0"
pytest = "^7.4.0"
pre-commit = "^3.3.3"
pytest-asyncio = "^0.21.1"
pyright = "^1.1.325"
isort = "^5.12.0"
pytest-cov = "^4.1.0"

[tool.poetry.scripts]
pyneo4j_ogm = "pyneo4j_ogm.migrations.cli:cli"

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
branch = "main"
upload_to_PyPI = true
upload_to_release = true
build_command = "pip install poetry && poetry build"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.black]
line-length = 120
target-version = ["py310", "py311"]
workers = 4

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
