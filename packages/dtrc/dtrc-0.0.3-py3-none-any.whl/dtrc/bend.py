# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_bend.ipynb.

# %% auto 0
__all__ = ['isavail', 'isbuilt', 'getbackend', 'hasbackend', 'hasmps', 'hascuda']

# %% ../nbs/00_bend.ipynb 6
#| export


# %% ../nbs/00_bend.ipynb 8
from types import ModuleType

# %% ../nbs/00_bend.ipynb 11
#| export

# %% ../nbs/00_bend.ipynb 13
#| export


# %% ../nbs/00_bend.ipynb 15
try: import torch
except ImportError: ...

# %% ../nbs/00_bend.ipynb 17
#| export


# %% ../nbs/00_bend.ipynb 19
#| export


# %% ../nbs/00_bend.ipynb 21
#| export


# %% ../nbs/00_bend.ipynb 23
def isavail(backend: ModuleType) -> bool:
    is_avail = getattr(backend, 'is_available', lambda : False)
    return is_avail()

def isbuilt(backend: ModuleType) -> bool:
    is_built = getattr(backend, 'is_built', lambda : False)
    return is_built()

def getbackend(name: str) -> ModuleType | None:
    if isinstance(name, ModuleType): return name
    try: return getattr(torch.backends, name)
    except AttributeError: return None

def hasbackend(backend: str) -> bool:
    be = getbackend(backend)
    return isbuilt(be) and isavail(be)

# %% ../nbs/00_bend.ipynb 24
def hasmps() -> bool:
    '''Checks whether or not pytorch has mps availble and was built with mps in mind.'''
    return hasbackend('mps')

def hascuda() -> bool:
    '''Checks whether or not pytorch has cuda availble and was built with mps in mind.'''
    return hasbackend('cuda')

# %% ../nbs/00_bend.ipynb 26
#| export
