# coding: utf-8

"""
    Fuse

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from fuse_client import schemas  # noqa: F401


class FinancialConnectionsInvestmentTransactionSubtype(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        enum_value_to_name = {
            "account_fee": "ACCOUNT_FEE",
            "adjustment": "ADJUSTMENT",
            "assignment": "ASSIGNMENT",
            "buy": "BUY",
            "buy_to_cover": "BUY_TO_COVER",
            "contribution": "CONTRIBUTION",
            "deposit": "DEPOSIT",
            "distribution": "DISTRIBUTION",
            "dividend": "DIVIDEND",
            "dividend_reinvestment": "DIVIDEND_REINVESTMENT",
            "exercise": "EXERCISE",
            "expire": "EXPIRE",
            "fund_fee": "FUND_FEE",
            "interest": "INTEREST",
            "interest_receivable": "INTEREST_RECEIVABLE",
            "interest_reinvestment": "INTEREST_REINVESTMENT",
            "legal_fee": "LEGAL_FEE",
            "loan_payment": "LOAN_PAYMENT",
            "long_term_capital_gain": "LONG_TERM_CAPITAL_GAIN",
            "long_term_capital_gain_reinvestment": "LONG_TERM_CAPITAL_GAIN_REINVESTMENT",
            "management_fee": "MANAGEMENT_FEE",
            "margin_expense": "MARGIN_EXPENSE",
            "merger": "MERGER",
            "miscellaneous_fee": "MISCELLANEOUS_FEE",
            "non_qualified_dividend": "NON_QUALIFIED_DIVIDEND",
            "non_resident_tax": "NON_RESIDENT_TAX",
            "pending_credit": "PENDING_CREDIT",
            "pending_debit": "PENDING_DEBIT",
            "qualified_dividend": "QUALIFIED_DIVIDEND",
            "rebalance": "REBALANCE",
            "return_of_principal": "RETURN_OF_PRINCIPAL",
            "request": "REQUEST",
            "sell": "SELL",
            "sell_short": "SELL_SHORT",
            "send": "SEND",
            "short_term_capital_gain": "SHORT_TERM_CAPITAL_GAIN",
            "short_term_capital_gain_reinvestment": "SHORT_TERM_CAPITAL_GAIN_REINVESTMENT",
            "spin_off": "SPIN_OFF",
            "split": "SPLIT",
            "stock_distribution": "STOCK_DISTRIBUTION",
            "tax": "TAX",
            "tax_withheld": "TAX_WITHHELD",
            "trade": "TRADE",
            "transfer": "TRANSFER",
            "transfer_fee": "TRANSFER_FEE",
            "trust_fee": "TRUST_FEE",
            "unqualified_gain": "UNQUALIFIED_GAIN",
            "withdrawal": "WITHDRAWAL",
            "-": "HYPHEN_MINUS",
        }
    
    @schemas.classproperty
    def ACCOUNT_FEE(cls):
        return cls("account_fee")
    
    @schemas.classproperty
    def ADJUSTMENT(cls):
        return cls("adjustment")
    
    @schemas.classproperty
    def ASSIGNMENT(cls):
        return cls("assignment")
    
    @schemas.classproperty
    def BUY(cls):
        return cls("buy")
    
    @schemas.classproperty
    def BUY_TO_COVER(cls):
        return cls("buy_to_cover")
    
    @schemas.classproperty
    def CONTRIBUTION(cls):
        return cls("contribution")
    
    @schemas.classproperty
    def DEPOSIT(cls):
        return cls("deposit")
    
    @schemas.classproperty
    def DISTRIBUTION(cls):
        return cls("distribution")
    
    @schemas.classproperty
    def DIVIDEND(cls):
        return cls("dividend")
    
    @schemas.classproperty
    def DIVIDEND_REINVESTMENT(cls):
        return cls("dividend_reinvestment")
    
    @schemas.classproperty
    def EXERCISE(cls):
        return cls("exercise")
    
    @schemas.classproperty
    def EXPIRE(cls):
        return cls("expire")
    
    @schemas.classproperty
    def FUND_FEE(cls):
        return cls("fund_fee")
    
    @schemas.classproperty
    def INTEREST(cls):
        return cls("interest")
    
    @schemas.classproperty
    def INTEREST_RECEIVABLE(cls):
        return cls("interest_receivable")
    
    @schemas.classproperty
    def INTEREST_REINVESTMENT(cls):
        return cls("interest_reinvestment")
    
    @schemas.classproperty
    def LEGAL_FEE(cls):
        return cls("legal_fee")
    
    @schemas.classproperty
    def LOAN_PAYMENT(cls):
        return cls("loan_payment")
    
    @schemas.classproperty
    def LONG_TERM_CAPITAL_GAIN(cls):
        return cls("long_term_capital_gain")
    
    @schemas.classproperty
    def LONG_TERM_CAPITAL_GAIN_REINVESTMENT(cls):
        return cls("long_term_capital_gain_reinvestment")
    
    @schemas.classproperty
    def MANAGEMENT_FEE(cls):
        return cls("management_fee")
    
    @schemas.classproperty
    def MARGIN_EXPENSE(cls):
        return cls("margin_expense")
    
    @schemas.classproperty
    def MERGER(cls):
        return cls("merger")
    
    @schemas.classproperty
    def MISCELLANEOUS_FEE(cls):
        return cls("miscellaneous_fee")
    
    @schemas.classproperty
    def NON_QUALIFIED_DIVIDEND(cls):
        return cls("non_qualified_dividend")
    
    @schemas.classproperty
    def NON_RESIDENT_TAX(cls):
        return cls("non_resident_tax")
    
    @schemas.classproperty
    def PENDING_CREDIT(cls):
        return cls("pending_credit")
    
    @schemas.classproperty
    def PENDING_DEBIT(cls):
        return cls("pending_debit")
    
    @schemas.classproperty
    def QUALIFIED_DIVIDEND(cls):
        return cls("qualified_dividend")
    
    @schemas.classproperty
    def REBALANCE(cls):
        return cls("rebalance")
    
    @schemas.classproperty
    def RETURN_OF_PRINCIPAL(cls):
        return cls("return_of_principal")
    
    @schemas.classproperty
    def REQUEST(cls):
        return cls("request")
    
    @schemas.classproperty
    def SELL(cls):
        return cls("sell")
    
    @schemas.classproperty
    def SELL_SHORT(cls):
        return cls("sell_short")
    
    @schemas.classproperty
    def SEND(cls):
        return cls("send")
    
    @schemas.classproperty
    def SHORT_TERM_CAPITAL_GAIN(cls):
        return cls("short_term_capital_gain")
    
    @schemas.classproperty
    def SHORT_TERM_CAPITAL_GAIN_REINVESTMENT(cls):
        return cls("short_term_capital_gain_reinvestment")
    
    @schemas.classproperty
    def SPIN_OFF(cls):
        return cls("spin_off")
    
    @schemas.classproperty
    def SPLIT(cls):
        return cls("split")
    
    @schemas.classproperty
    def STOCK_DISTRIBUTION(cls):
        return cls("stock_distribution")
    
    @schemas.classproperty
    def TAX(cls):
        return cls("tax")
    
    @schemas.classproperty
    def TAX_WITHHELD(cls):
        return cls("tax_withheld")
    
    @schemas.classproperty
    def TRADE(cls):
        return cls("trade")
    
    @schemas.classproperty
    def TRANSFER(cls):
        return cls("transfer")
    
    @schemas.classproperty
    def TRANSFER_FEE(cls):
        return cls("transfer_fee")
    
    @schemas.classproperty
    def TRUST_FEE(cls):
        return cls("trust_fee")
    
    @schemas.classproperty
    def UNQUALIFIED_GAIN(cls):
        return cls("unqualified_gain")
    
    @schemas.classproperty
    def WITHDRAWAL(cls):
        return cls("withdrawal")
    
    @schemas.classproperty
    def HYPHEN_MINUS(cls):
        return cls("-")
