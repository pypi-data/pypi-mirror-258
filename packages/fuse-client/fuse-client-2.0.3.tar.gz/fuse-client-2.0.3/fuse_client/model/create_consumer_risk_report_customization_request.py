# coding: utf-8

"""
    Fuse

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from fuse_client import schemas  # noqa: F401


class CreateConsumerRiskReportCustomizationRequest(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "max_limit",
            "timeframe",
            "risk_tolerance",
            "min_limit",
        }
        
        class properties:
        
            @staticmethod
            def timeframe() -> typing.Type['ConsumerRiskReportTimeFrame']:
                return ConsumerRiskReportTimeFrame
            
            
            class min_limit(
                schemas.NumberSchema
            ):
            
            
                class MetaOapg:
                    inclusive_minimum = 0
            
            
            class max_limit(
                schemas.NumberSchema
            ):
            
            
                class MetaOapg:
                    inclusive_minimum = 1
            
            
            class risk_tolerance(
                schemas.NumberSchema
            ):
            
            
                class MetaOapg:
                    inclusive_maximum = 100
                    inclusive_minimum = 1
            __annotations__ = {
                "timeframe": timeframe,
                "min_limit": min_limit,
                "max_limit": max_limit,
                "risk_tolerance": risk_tolerance,
            }
    
    max_limit: MetaOapg.properties.max_limit
    timeframe: 'ConsumerRiskReportTimeFrame'
    risk_tolerance: MetaOapg.properties.risk_tolerance
    min_limit: MetaOapg.properties.min_limit
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timeframe"]) -> 'ConsumerRiskReportTimeFrame': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["min_limit"]) -> MetaOapg.properties.min_limit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["max_limit"]) -> MetaOapg.properties.max_limit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["risk_tolerance"]) -> MetaOapg.properties.risk_tolerance: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["timeframe", "min_limit", "max_limit", "risk_tolerance", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timeframe"]) -> 'ConsumerRiskReportTimeFrame': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["min_limit"]) -> MetaOapg.properties.min_limit: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["max_limit"]) -> MetaOapg.properties.max_limit: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["risk_tolerance"]) -> MetaOapg.properties.risk_tolerance: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["timeframe", "min_limit", "max_limit", "risk_tolerance", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        max_limit: typing.Union[MetaOapg.properties.max_limit, decimal.Decimal, int, float, ],
        timeframe: 'ConsumerRiskReportTimeFrame',
        risk_tolerance: typing.Union[MetaOapg.properties.risk_tolerance, decimal.Decimal, int, float, ],
        min_limit: typing.Union[MetaOapg.properties.min_limit, decimal.Decimal, int, float, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CreateConsumerRiskReportCustomizationRequest':
        return super().__new__(
            cls,
            *_args,
            max_limit=max_limit,
            timeframe=timeframe,
            risk_tolerance=risk_tolerance,
            min_limit=min_limit,
            _configuration=_configuration,
            **kwargs,
        )

from fuse_client.model.consumer_risk_report_time_frame import ConsumerRiskReportTimeFrame
