# coding: utf-8

"""
    Fuse

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from fuse_client import schemas  # noqa: F401


class EvalConsumerRiskReportResponse(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "events",
        }
        
        class properties:
            mean_granted_above_failed_payments = schemas.NumberSchema
            mean_granted_below_failed_payments = schemas.NumberSchema
            mean_predicted_limits = schemas.NumberSchema
            mean_successful_payments = schemas.NumberSchema
            __annotations__ = {
                "mean_granted_above_failed_payments": mean_granted_above_failed_payments,
                "mean_granted_below_failed_payments": mean_granted_below_failed_payments,
                "mean_predicted_limits": mean_predicted_limits,
                "mean_successful_payments": mean_successful_payments,
            }
    
    events: schemas.AnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mean_granted_above_failed_payments"]) -> MetaOapg.properties.mean_granted_above_failed_payments: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mean_granted_below_failed_payments"]) -> MetaOapg.properties.mean_granted_below_failed_payments: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mean_predicted_limits"]) -> MetaOapg.properties.mean_predicted_limits: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mean_successful_payments"]) -> MetaOapg.properties.mean_successful_payments: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["mean_granted_above_failed_payments", "mean_granted_below_failed_payments", "mean_predicted_limits", "mean_successful_payments", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mean_granted_above_failed_payments"]) -> typing.Union[MetaOapg.properties.mean_granted_above_failed_payments, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mean_granted_below_failed_payments"]) -> typing.Union[MetaOapg.properties.mean_granted_below_failed_payments, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mean_predicted_limits"]) -> typing.Union[MetaOapg.properties.mean_predicted_limits, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mean_successful_payments"]) -> typing.Union[MetaOapg.properties.mean_successful_payments, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["mean_granted_above_failed_payments", "mean_granted_below_failed_payments", "mean_predicted_limits", "mean_successful_payments", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        mean_granted_above_failed_payments: typing.Union[MetaOapg.properties.mean_granted_above_failed_payments, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        mean_granted_below_failed_payments: typing.Union[MetaOapg.properties.mean_granted_below_failed_payments, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        mean_predicted_limits: typing.Union[MetaOapg.properties.mean_predicted_limits, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        mean_successful_payments: typing.Union[MetaOapg.properties.mean_successful_payments, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EvalConsumerRiskReportResponse':
        return super().__new__(
            cls,
            *_args,
            mean_granted_above_failed_payments=mean_granted_above_failed_payments,
            mean_granted_below_failed_payments=mean_granted_below_failed_payments,
            mean_predicted_limits=mean_predicted_limits,
            mean_successful_payments=mean_successful_payments,
            _configuration=_configuration,
            **kwargs,
        )
