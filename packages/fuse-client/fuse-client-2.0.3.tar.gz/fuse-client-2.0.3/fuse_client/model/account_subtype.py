# coding: utf-8

"""
    Fuse

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from fuse_client import schemas  # noqa: F401


class AccountSubtype(
    schemas.EnumBase,
    schemas.StrBase,
    schemas.NoneBase,
    schemas.Schema,
    schemas.NoneStrMixin
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The account's subtype
    """


    class MetaOapg:
        enum_value_to_name = {
            "checking": "CHECKING",
            "savings": "SAVINGS",
            "checking_or_savings": "CHECKING_OR_SAVINGS",
            "business_checking_or_savings": "BUSINESS_CHECKING_OR_SAVINGS",
            "business_savings": "BUSINESS_SAVINGS",
            "money_market": "MONEY_MARKET",
            "certificate_of_deposit": "CERTIFICATE_OF_DEPOSIT",
            "treasury": "TREASURY",
            "credit_card": "CREDIT_CARD",
            "debit_card": "DEBIT_CARD",
            "bonds": "BONDS",
            "hsa": "HSA",
            "paypal": "PAYPAL",
            "prepaid": "PREPAID",
            "cash_management": "CASH_MANAGEMENT",
            "ebt": "EBT",
            "auto": "AUTO",
            "business": "BUSINESS",
            "commercial": "COMMERCIAL",
            "construction": "CONSTRUCTION",
            "consumer": "CONSUMER",
            "home_equity": "HOME_EQUITY",
            "foreign": "FOREIGN",
            "loan": "LOAN",
            "mortgage": "MORTGAGE",
            "overdraft": "OVERDRAFT",
            "line_of_credit": "LINE_OF_CREDIT",
            "student": "STUDENT",
            "529": "POSITIVE_529",
            "401_a": "DIGIT_FOUR_01_A",
            "401_k": "DIGIT_FOUR_01_K",
            "403_b": "DIGIT_FOUR_03_B",
            "457_b": "DIGIT_FOUR_57_B",
            "funds": "FUNDS",
            "brokerage": "BROKERAGE",
            "securities": "SECURITIES",
            "stocks": "STOCKS",
            "cash_isa": "CASH_ISA",
            "crypto_exchange": "CRYPTO_EXCHANGE",
            "education_saving_account": "EDUCATION_SAVING_ACCOUNT",
            "fixed_annuity": "FIXED_ANNUITY",
            "gic": "GIC",
            "health_reimbursement_arrangement": "HEALTH_REIMBURSEMENT_ARRANGEMENT",
            "ira": "IRA",
            "isa": "ISA",
            "keogh": "KEOGH",
            "lif": "LIF",
            "life_insurance": "LIFE_INSURANCE",
            "lira": "LIRA",
            "lrif": "LRIF",
            "lrsp": "LRSP",
            "mutual_fund": "MUTUAL_FUND",
            "non_custodial_wallet": "NON_CUSTODIAL_WALLET",
            "non_taxable_brokerage_account": "NON_TAXABLE_BROKERAGE_ACCOUNT",
            "other_annuity": "OTHER_ANNUITY",
            "other_insurance": "OTHER_INSURANCE",
            "pension": "PENSION",
            "prif": "PRIF",
            "profit_sharing_plan": "PROFIT_SHARING_PLAN",
            "qshr": "QSHR",
            "rdsp": "RDSP",
            "resp": "RESP",
            "retirement": "RETIREMENT",
            "rlif": "RLIF",
            "roth_ira": "ROTH_IRA",
            "roth_401_k": "ROTH_401_K",
            "rrif": "RRIF",
            "rrsp": "RRSP",
            "sarsep": "SARSEP",
            "sep_ira": "SEP_IRA",
            "simple_ira": "SIMPLE_IRA",
            "sipp": "SIPP",
            "stock_plan": "STOCK_PLAN",
            "tfsa": "TFSA",
            "trust": "TRUST",
            "ugma": "UGMA",
            "utma": "UTMA",
            "variable_annuity": "VARIABLE_ANNUITY",
            "small_business": "SMALL_BUSINESS",
            "personal": "PERSONAL",
            "personal_with_collateral": "PERSONAL_WITH_COLLATERAL",
            "457": "POSITIVE_457",
            "rollover_ira": "ROLLOVER_IRA",
            "taxable": "TAXABLE",
            "non_taxable": "NON_TAXABLE",
            "employee_stock_ownership_plan": "EMPLOYEE_STOCK_OWNERSHIP_PLAN",
            "individual": "INDIVIDUAL",
            "cash_management_account": "CASH_MANAGEMENT_ACCOUNT",
            "employee_stock_purchase_plan": "EMPLOYEE_STOCK_PURCHASE_PLAN",
            "registered_education_savings_plan": "REGISTERED_EDUCATION_SAVINGS_PLAN",
            "fixed_annuity_traditional_ira": "FIXED_ANNUITY_TRADITIONAL_IRA",
            "inherited_traditional_ira": "INHERITED_TRADITIONAL_IRA",
            "fixed_annuity_roth_ira": "FIXED_ANNUITY_ROTH_IRA",
            "variable_annuity_roth_ira": "VARIABLE_ANNUITY_ROTH_IRA",
            "inherited_roth_ira": "INHERITED_ROTH_IRA",
            "advisory_account": "ADVISORY_ACCOUNT",
            "brokerage_margin": "BROKERAGE_MARGIN",
            "charitable_gift_account": "CHARITABLE_GIFT_ACCOUNT",
            "church_account": "CHURCH_ACCOUNT",
            "conservatorship": "CONSERVATORSHIP",
            "custodial": "CUSTODIAL",
            "defined_benefit_plan": "DEFINED_BENEFIT_PLAN",
            "defined_contribution_plan": "DEFINED_CONTRIBUTION_PLAN",
            "educational": "EDUCATIONAL",
            "estate": "ESTATE",
            "executor": "EXECUTOR",
            "group_retirement_savings_plan": "GROUP_RETIREMENT_SAVINGS_PLAN",
            "guaranteed_investment_certificate": "GUARANTEED_INVESTMENT_CERTIFICATE",
            "indexed_annuity": "INDEXED_ANNUITY",
            "investment_club": "INVESTMENT_CLUB",
            "irrevocable_trust": "IRREVOCABLE_TRUST",
            "joint_tenants_by_entirety": "JOINT_TENANTS_BY_ENTIRETY",
            "joint_tenants_community_property": "JOINT_TENANTS_COMMUNITY_PROPERTY",
            "joint_tenants_in_common": "JOINT_TENANTS_IN_COMMON",
            "joint_tenants_with_rights_of_survivorship": "JOINT_TENANTS_WITH_RIGHTS_OF_SURVIVORSHIP",
            "keough_plan": "KEOUGH_PLAN",
            "living_trust": "LIVING_TRUST",
            "locked_in_retirement_account": "LOCKED_IN_RETIREMENT_ACCOUNT",
            "locked_in_retirement_investment_fund": "LOCKED_IN_RETIREMENT_INVESTMENT_FUND",
            "locked_in_retirement_savings_account": "LOCKED_IN_RETIREMENT_SAVINGS_ACCOUNT",
            "money_purchase_plan": "MONEY_PURCHASE_PLAN",
            "partnership": "PARTNERSHIP",
            "409_a": "DIGIT_FOUR_09_A",
            "rpp": "RPP",
            "revocable_trust": "REVOCABLE_TRUST",
            "roth_conversion": "ROTH_CONVERSION",
            "sole_proprietorship": "SOLE_PROPRIETORSHIP",
            "spousal_ira": "SPOUSAL_IRA",
            "spousal_roth_ira": "SPOUSAL_ROTH_IRA",
            "testamentary_trust": "TESTAMENTARY_TRUST",
            "thrift_savings_plan": "THRIFT_SAVINGS_PLAN",
            "inherited_annuity": "INHERITED_ANNUITY",
            "corporate_account": "CORPORATE_ACCOUNT",
            "limited_liability_account": "LIMITED_LIABILITY_ACCOUNT",
            "boat": "BOAT",
            "powersports": "POWERSPORTS",
            "rv": "RV",
            "heloc": "HELOC",
            "vehicle_insurance": "VEHICLE_INSURANCE",
            "disability": "DISABILITY",
            "health": "HEALTH",
            "long_term_care": "LONG_TERM_CARE",
            "property_and_casualty": "PROPERTY_AND_CASUALTY",
            "universal_life": "UNIVERSAL_LIFE",
            "term_life": "TERM_LIFE",
            "whole_life": "WHOLE_LIFE",
            "accidental_death_and_dismemberment": "ACCIDENTAL_DEATH_AND_DISMEMBERMENT",
            "variable_universal_life": "VARIABLE_UNIVERSAL_LIFE",
            "revolving": "REVOLVING",
            "other": "OTHER",
            "time_deposit": "TIME_DEPOSIT",
            "roth": "ROTH",
            "military": "MILITARY",
            "installment": "INSTALLMENT",
            "institutional_trust": "INSTITUTIONAL_TRUST",
            "home_line_of_credit": "HOME_LINE_OF_CREDIT",
            "guardian": "GUARDIAN",
            "commercial_line_of_credit": "COMMERCIAL_LINE_OF_CREDIT",
            "charge": "CHARGE",
            "coverdell": "COVERDELL",
            "escrow": "ESCROW",
            "-": "HYPHEN_MINUS",
        }
    
    @schemas.classproperty
    def CHECKING(cls):
        return cls("checking")
    
    @schemas.classproperty
    def SAVINGS(cls):
        return cls("savings")
    
    @schemas.classproperty
    def CHECKING_OR_SAVINGS(cls):
        return cls("checking_or_savings")
    
    @schemas.classproperty
    def BUSINESS_CHECKING_OR_SAVINGS(cls):
        return cls("business_checking_or_savings")
    
    @schemas.classproperty
    def BUSINESS_SAVINGS(cls):
        return cls("business_savings")
    
    @schemas.classproperty
    def MONEY_MARKET(cls):
        return cls("money_market")
    
    @schemas.classproperty
    def CERTIFICATE_OF_DEPOSIT(cls):
        return cls("certificate_of_deposit")
    
    @schemas.classproperty
    def TREASURY(cls):
        return cls("treasury")
    
    @schemas.classproperty
    def CREDIT_CARD(cls):
        return cls("credit_card")
    
    @schemas.classproperty
    def DEBIT_CARD(cls):
        return cls("debit_card")
    
    @schemas.classproperty
    def BONDS(cls):
        return cls("bonds")
    
    @schemas.classproperty
    def HSA(cls):
        return cls("hsa")
    
    @schemas.classproperty
    def PAYPAL(cls):
        return cls("paypal")
    
    @schemas.classproperty
    def PREPAID(cls):
        return cls("prepaid")
    
    @schemas.classproperty
    def CASH_MANAGEMENT(cls):
        return cls("cash_management")
    
    @schemas.classproperty
    def EBT(cls):
        return cls("ebt")
    
    @schemas.classproperty
    def AUTO(cls):
        return cls("auto")
    
    @schemas.classproperty
    def BUSINESS(cls):
        return cls("business")
    
    @schemas.classproperty
    def COMMERCIAL(cls):
        return cls("commercial")
    
    @schemas.classproperty
    def CONSTRUCTION(cls):
        return cls("construction")
    
    @schemas.classproperty
    def CONSUMER(cls):
        return cls("consumer")
    
    @schemas.classproperty
    def HOME_EQUITY(cls):
        return cls("home_equity")
    
    @schemas.classproperty
    def FOREIGN(cls):
        return cls("foreign")
    
    @schemas.classproperty
    def LOAN(cls):
        return cls("loan")
    
    @schemas.classproperty
    def MORTGAGE(cls):
        return cls("mortgage")
    
    @schemas.classproperty
    def OVERDRAFT(cls):
        return cls("overdraft")
    
    @schemas.classproperty
    def LINE_OF_CREDIT(cls):
        return cls("line_of_credit")
    
    @schemas.classproperty
    def STUDENT(cls):
        return cls("student")
    
    @schemas.classproperty
    def POSITIVE_529(cls):
        return cls("529")
    
    @schemas.classproperty
    def DIGIT_FOUR_01_A(cls):
        return cls("401_a")
    
    @schemas.classproperty
    def DIGIT_FOUR_01_K(cls):
        return cls("401_k")
    
    @schemas.classproperty
    def DIGIT_FOUR_03_B(cls):
        return cls("403_b")
    
    @schemas.classproperty
    def DIGIT_FOUR_57_B(cls):
        return cls("457_b")
    
    @schemas.classproperty
    def FUNDS(cls):
        return cls("funds")
    
    @schemas.classproperty
    def BROKERAGE(cls):
        return cls("brokerage")
    
    @schemas.classproperty
    def SECURITIES(cls):
        return cls("securities")
    
    @schemas.classproperty
    def STOCKS(cls):
        return cls("stocks")
    
    @schemas.classproperty
    def CASH_ISA(cls):
        return cls("cash_isa")
    
    @schemas.classproperty
    def CRYPTO_EXCHANGE(cls):
        return cls("crypto_exchange")
    
    @schemas.classproperty
    def EDUCATION_SAVING_ACCOUNT(cls):
        return cls("education_saving_account")
    
    @schemas.classproperty
    def FIXED_ANNUITY(cls):
        return cls("fixed_annuity")
    
    @schemas.classproperty
    def GIC(cls):
        return cls("gic")
    
    @schemas.classproperty
    def HEALTH_REIMBURSEMENT_ARRANGEMENT(cls):
        return cls("health_reimbursement_arrangement")
    
    @schemas.classproperty
    def IRA(cls):
        return cls("ira")
    
    @schemas.classproperty
    def ISA(cls):
        return cls("isa")
    
    @schemas.classproperty
    def KEOGH(cls):
        return cls("keogh")
    
    @schemas.classproperty
    def LIF(cls):
        return cls("lif")
    
    @schemas.classproperty
    def LIFE_INSURANCE(cls):
        return cls("life_insurance")
    
    @schemas.classproperty
    def LIRA(cls):
        return cls("lira")
    
    @schemas.classproperty
    def LRIF(cls):
        return cls("lrif")
    
    @schemas.classproperty
    def LRSP(cls):
        return cls("lrsp")
    
    @schemas.classproperty
    def MUTUAL_FUND(cls):
        return cls("mutual_fund")
    
    @schemas.classproperty
    def NON_CUSTODIAL_WALLET(cls):
        return cls("non_custodial_wallet")
    
    @schemas.classproperty
    def NON_TAXABLE_BROKERAGE_ACCOUNT(cls):
        return cls("non_taxable_brokerage_account")
    
    @schemas.classproperty
    def OTHER_ANNUITY(cls):
        return cls("other_annuity")
    
    @schemas.classproperty
    def OTHER_INSURANCE(cls):
        return cls("other_insurance")
    
    @schemas.classproperty
    def PENSION(cls):
        return cls("pension")
    
    @schemas.classproperty
    def PRIF(cls):
        return cls("prif")
    
    @schemas.classproperty
    def PROFIT_SHARING_PLAN(cls):
        return cls("profit_sharing_plan")
    
    @schemas.classproperty
    def QSHR(cls):
        return cls("qshr")
    
    @schemas.classproperty
    def RDSP(cls):
        return cls("rdsp")
    
    @schemas.classproperty
    def RESP(cls):
        return cls("resp")
    
    @schemas.classproperty
    def RETIREMENT(cls):
        return cls("retirement")
    
    @schemas.classproperty
    def RLIF(cls):
        return cls("rlif")
    
    @schemas.classproperty
    def ROTH_IRA(cls):
        return cls("roth_ira")
    
    @schemas.classproperty
    def ROTH_401_K(cls):
        return cls("roth_401_k")
    
    @schemas.classproperty
    def RRIF(cls):
        return cls("rrif")
    
    @schemas.classproperty
    def RRSP(cls):
        return cls("rrsp")
    
    @schemas.classproperty
    def SARSEP(cls):
        return cls("sarsep")
    
    @schemas.classproperty
    def SEP_IRA(cls):
        return cls("sep_ira")
    
    @schemas.classproperty
    def SIMPLE_IRA(cls):
        return cls("simple_ira")
    
    @schemas.classproperty
    def SIPP(cls):
        return cls("sipp")
    
    @schemas.classproperty
    def STOCK_PLAN(cls):
        return cls("stock_plan")
    
    @schemas.classproperty
    def TFSA(cls):
        return cls("tfsa")
    
    @schemas.classproperty
    def TRUST(cls):
        return cls("trust")
    
    @schemas.classproperty
    def UGMA(cls):
        return cls("ugma")
    
    @schemas.classproperty
    def UTMA(cls):
        return cls("utma")
    
    @schemas.classproperty
    def VARIABLE_ANNUITY(cls):
        return cls("variable_annuity")
    
    @schemas.classproperty
    def SMALL_BUSINESS(cls):
        return cls("small_business")
    
    @schemas.classproperty
    def PERSONAL(cls):
        return cls("personal")
    
    @schemas.classproperty
    def PERSONAL_WITH_COLLATERAL(cls):
        return cls("personal_with_collateral")
    
    @schemas.classproperty
    def POSITIVE_457(cls):
        return cls("457")
    
    @schemas.classproperty
    def ROLLOVER_IRA(cls):
        return cls("rollover_ira")
    
    @schemas.classproperty
    def TAXABLE(cls):
        return cls("taxable")
    
    @schemas.classproperty
    def NON_TAXABLE(cls):
        return cls("non_taxable")
    
    @schemas.classproperty
    def EMPLOYEE_STOCK_OWNERSHIP_PLAN(cls):
        return cls("employee_stock_ownership_plan")
    
    @schemas.classproperty
    def INDIVIDUAL(cls):
        return cls("individual")
    
    @schemas.classproperty
    def CASH_MANAGEMENT_ACCOUNT(cls):
        return cls("cash_management_account")
    
    @schemas.classproperty
    def EMPLOYEE_STOCK_PURCHASE_PLAN(cls):
        return cls("employee_stock_purchase_plan")
    
    @schemas.classproperty
    def REGISTERED_EDUCATION_SAVINGS_PLAN(cls):
        return cls("registered_education_savings_plan")
    
    @schemas.classproperty
    def FIXED_ANNUITY_TRADITIONAL_IRA(cls):
        return cls("fixed_annuity_traditional_ira")
    
    @schemas.classproperty
    def INHERITED_TRADITIONAL_IRA(cls):
        return cls("inherited_traditional_ira")
    
    @schemas.classproperty
    def FIXED_ANNUITY_ROTH_IRA(cls):
        return cls("fixed_annuity_roth_ira")
    
    @schemas.classproperty
    def VARIABLE_ANNUITY_ROTH_IRA(cls):
        return cls("variable_annuity_roth_ira")
    
    @schemas.classproperty
    def INHERITED_ROTH_IRA(cls):
        return cls("inherited_roth_ira")
    
    @schemas.classproperty
    def ADVISORY_ACCOUNT(cls):
        return cls("advisory_account")
    
    @schemas.classproperty
    def BROKERAGE_MARGIN(cls):
        return cls("brokerage_margin")
    
    @schemas.classproperty
    def CHARITABLE_GIFT_ACCOUNT(cls):
        return cls("charitable_gift_account")
    
    @schemas.classproperty
    def CHURCH_ACCOUNT(cls):
        return cls("church_account")
    
    @schemas.classproperty
    def CONSERVATORSHIP(cls):
        return cls("conservatorship")
    
    @schemas.classproperty
    def CUSTODIAL(cls):
        return cls("custodial")
    
    @schemas.classproperty
    def DEFINED_BENEFIT_PLAN(cls):
        return cls("defined_benefit_plan")
    
    @schemas.classproperty
    def DEFINED_CONTRIBUTION_PLAN(cls):
        return cls("defined_contribution_plan")
    
    @schemas.classproperty
    def EDUCATIONAL(cls):
        return cls("educational")
    
    @schemas.classproperty
    def ESTATE(cls):
        return cls("estate")
    
    @schemas.classproperty
    def EXECUTOR(cls):
        return cls("executor")
    
    @schemas.classproperty
    def GROUP_RETIREMENT_SAVINGS_PLAN(cls):
        return cls("group_retirement_savings_plan")
    
    @schemas.classproperty
    def GUARANTEED_INVESTMENT_CERTIFICATE(cls):
        return cls("guaranteed_investment_certificate")
    
    @schemas.classproperty
    def INDEXED_ANNUITY(cls):
        return cls("indexed_annuity")
    
    @schemas.classproperty
    def INVESTMENT_CLUB(cls):
        return cls("investment_club")
    
    @schemas.classproperty
    def IRREVOCABLE_TRUST(cls):
        return cls("irrevocable_trust")
    
    @schemas.classproperty
    def JOINT_TENANTS_BY_ENTIRETY(cls):
        return cls("joint_tenants_by_entirety")
    
    @schemas.classproperty
    def JOINT_TENANTS_COMMUNITY_PROPERTY(cls):
        return cls("joint_tenants_community_property")
    
    @schemas.classproperty
    def JOINT_TENANTS_IN_COMMON(cls):
        return cls("joint_tenants_in_common")
    
    @schemas.classproperty
    def JOINT_TENANTS_WITH_RIGHTS_OF_SURVIVORSHIP(cls):
        return cls("joint_tenants_with_rights_of_survivorship")
    
    @schemas.classproperty
    def KEOUGH_PLAN(cls):
        return cls("keough_plan")
    
    @schemas.classproperty
    def LIVING_TRUST(cls):
        return cls("living_trust")
    
    @schemas.classproperty
    def LOCKED_IN_RETIREMENT_ACCOUNT(cls):
        return cls("locked_in_retirement_account")
    
    @schemas.classproperty
    def LOCKED_IN_RETIREMENT_INVESTMENT_FUND(cls):
        return cls("locked_in_retirement_investment_fund")
    
    @schemas.classproperty
    def LOCKED_IN_RETIREMENT_SAVINGS_ACCOUNT(cls):
        return cls("locked_in_retirement_savings_account")
    
    @schemas.classproperty
    def MONEY_PURCHASE_PLAN(cls):
        return cls("money_purchase_plan")
    
    @schemas.classproperty
    def PARTNERSHIP(cls):
        return cls("partnership")
    
    @schemas.classproperty
    def DIGIT_FOUR_09_A(cls):
        return cls("409_a")
    
    @schemas.classproperty
    def RPP(cls):
        return cls("rpp")
    
    @schemas.classproperty
    def REVOCABLE_TRUST(cls):
        return cls("revocable_trust")
    
    @schemas.classproperty
    def ROTH_CONVERSION(cls):
        return cls("roth_conversion")
    
    @schemas.classproperty
    def SOLE_PROPRIETORSHIP(cls):
        return cls("sole_proprietorship")
    
    @schemas.classproperty
    def SPOUSAL_IRA(cls):
        return cls("spousal_ira")
    
    @schemas.classproperty
    def SPOUSAL_ROTH_IRA(cls):
        return cls("spousal_roth_ira")
    
    @schemas.classproperty
    def TESTAMENTARY_TRUST(cls):
        return cls("testamentary_trust")
    
    @schemas.classproperty
    def THRIFT_SAVINGS_PLAN(cls):
        return cls("thrift_savings_plan")
    
    @schemas.classproperty
    def INHERITED_ANNUITY(cls):
        return cls("inherited_annuity")
    
    @schemas.classproperty
    def CORPORATE_ACCOUNT(cls):
        return cls("corporate_account")
    
    @schemas.classproperty
    def LIMITED_LIABILITY_ACCOUNT(cls):
        return cls("limited_liability_account")
    
    @schemas.classproperty
    def BOAT(cls):
        return cls("boat")
    
    @schemas.classproperty
    def POWERSPORTS(cls):
        return cls("powersports")
    
    @schemas.classproperty
    def RV(cls):
        return cls("rv")
    
    @schemas.classproperty
    def HELOC(cls):
        return cls("heloc")
    
    @schemas.classproperty
    def VEHICLE_INSURANCE(cls):
        return cls("vehicle_insurance")
    
    @schemas.classproperty
    def DISABILITY(cls):
        return cls("disability")
    
    @schemas.classproperty
    def HEALTH(cls):
        return cls("health")
    
    @schemas.classproperty
    def LONG_TERM_CARE(cls):
        return cls("long_term_care")
    
    @schemas.classproperty
    def PROPERTY_AND_CASUALTY(cls):
        return cls("property_and_casualty")
    
    @schemas.classproperty
    def UNIVERSAL_LIFE(cls):
        return cls("universal_life")
    
    @schemas.classproperty
    def TERM_LIFE(cls):
        return cls("term_life")
    
    @schemas.classproperty
    def WHOLE_LIFE(cls):
        return cls("whole_life")
    
    @schemas.classproperty
    def ACCIDENTAL_DEATH_AND_DISMEMBERMENT(cls):
        return cls("accidental_death_and_dismemberment")
    
    @schemas.classproperty
    def VARIABLE_UNIVERSAL_LIFE(cls):
        return cls("variable_universal_life")
    
    @schemas.classproperty
    def REVOLVING(cls):
        return cls("revolving")
    
    @schemas.classproperty
    def OTHER(cls):
        return cls("other")
    
    @schemas.classproperty
    def TIME_DEPOSIT(cls):
        return cls("time_deposit")
    
    @schemas.classproperty
    def ROTH(cls):
        return cls("roth")
    
    @schemas.classproperty
    def MILITARY(cls):
        return cls("military")
    
    @schemas.classproperty
    def INSTALLMENT(cls):
        return cls("installment")
    
    @schemas.classproperty
    def INSTITUTIONAL_TRUST(cls):
        return cls("institutional_trust")
    
    @schemas.classproperty
    def HOME_LINE_OF_CREDIT(cls):
        return cls("home_line_of_credit")
    
    @schemas.classproperty
    def GUARDIAN(cls):
        return cls("guardian")
    
    @schemas.classproperty
    def COMMERCIAL_LINE_OF_CREDIT(cls):
        return cls("commercial_line_of_credit")
    
    @schemas.classproperty
    def CHARGE(cls):
        return cls("charge")
    
    @schemas.classproperty
    def COVERDELL(cls):
        return cls("coverdell")
    
    @schemas.classproperty
    def ESCROW(cls):
        return cls("escrow")
    
    @schemas.classproperty
    def HYPHEN_MINUS(cls):
        return cls("-")


    def __new__(
        cls,
        *_args: typing.Union[None, str, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'AccountSubtype':
        return super().__new__(
            cls,
            *_args,
            _configuration=_configuration,
        )
