import "core-js/modules/es.array.iterator";
import "core-js/modules/es.string.starts-with";
import "core-js/modules/web.dom-collections.iterator";
export function generateTemplate(model) {
  if (typeof model === 'string') {
    return model;
  }

  function doWith(key, defaultValue, fn) {
    const value = model.get(key);
    return value != null ? fn(value) : defaultValue;
  }

  const tag = model.getVueTag();
  const attrs = model.keys().filter(key => model.get(key) !== null && !key.startsWith('_') && !['layout', 'children', 'slot', 'v_model', 'style_', 'class_', 'attributes', 'v_slot', 'v_slot_use'].includes(key)).map(key => "".concat(key, "=\"").concat(model.get(key), "\"")).join(' '); // const vSlot = model.get('v_slot');
  // const scopedSlot = (vSlot && `#${vSlot}`) || '';

  const scopedSlot = doWith('v_slot', '', vSlot => "#".concat(vSlot));
  const vSlotUse = doWith('v_slot_use', '', x => x);
  const attributes = model.get('attributes') && model.get('attributes') || '';
  const childrenStr = doWith('children', '', children => children.map(childModel => generateTemplate(childModel)).join(''));
  return "<".concat(tag, " ").concat(attrs, " ").concat(scopedSlot, " ").concat(vSlotUse, ">").concat(childrenStr, "</").concat(tag, ">");
}