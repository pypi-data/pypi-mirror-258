Metadata-Version: 2.1
Name: digital-experiments
Version: 2.0.4
Summary: Keep track of digital experiments.
Author-email: John Gardner <gardner.john97@gmail.com>
License: Copyright 2022 John Gardner
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
Project-URL: Homepage, https://github.com/jla-gardner/digital-experiments
Keywords: config,experiments,optimisation
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pyyaml
Provides-Extra: dev
Requires-Dist: notebook; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: bumpver; extra == "dev"
Requires-Dist: sphinx; extra == "dev"
Requires-Dist: furo; extra == "dev"
Requires-Dist: nbsphinx; extra == "dev"
Requires-Dist: sphinx-autobuild; extra == "dev"
Requires-Dist: sphinxext-opengraph; extra == "dev"
Requires-Dist: sphinx-copybutton; extra == "dev"
Requires-Dist: sphinx-design; extra == "dev"
Requires-Dist: sphinx-codeautolink; extra == "dev"
Requires-Dist: pandas; extra == "dev"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Requires-Dist: pandas; extra == "test"
Provides-Extra: publish
Requires-Dist: build; extra == "publish"
Requires-Dist: twine; extra == "publish"

<div align="center">
    <img src="docs/source/logo.svg" style="width: 400px; height: auto;"/>
</div>

<div align="center">
    
A lightweight python package for recording and analysing configurations and results of coding experiments.

[![PyPI](https://img.shields.io/pypi/v/digital-experiments)](https://pypi.org/project/digital-experiments/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/digital-experiments?color=green&label=installs&logo=Python&logoColor=white)](https://pypistats.org/packages/digital-experiments)
[![GitHub](https://img.shields.io/github/license/jla-gardner/digital-experiments)](LICENCE.md)
[![](https://github.com/jla-gardner/digital-experiments/actions/workflows/tests.yaml/badge.svg?branch=master)](https://github.com/jla-gardner/digital-experiments/actions/workflows/tests.yaml)
[![codecov](https://codecov.io/gh/jla-gardner/digital-experiments/branch/master/graph/badge.svg?token=VGSFM0GWF1)](https://codecov.io/gh/jla-gardner/digital-experiments)

</div>

---

Keeping track of the results of coding experiments can be a pain. 
Over time, code and dependencies can change, and without careful record-keeping, it becomes difficult to remember and reproduce optimal configurations and results.


`digital-experiments` automates such tracking. To enable this automation, wrap your experiment's main function with the [`@experiment`](https://jla-gardner.github.io/digital-experiments/core-api.html#digital_experiments.experiment) decorator. Every time the function is called, the following information is saved to disk:
- the inputs (`args`, `kwargs` and defaults)
- the output/s (any, arbitrary object)
- the code of the function
- the current `git` information (if available)
- timing information
- python environment information

This information is available for analysis in the same or different python sessions, via the [`observations` API](https://jla-gardner.github.io/digital-experiments/core-api.html#digital_experiments.core.Experiment.observations).

To get started, see the basic use case below, or [our example notebook](https://jla-gardner.github.io/digital-experiments/usage.html).


## Installation

`pip install digital-experiments`

## Basic Use


1. Define your experiment as a pure-python function, and decorate it with `@experiment`:

```python
from digital_experiments import experiment

@experiment
def my_experiment(a, b=2):
    return a ** b
```

2. Call the function as normal:

```python
>>> my_experiment(2, 3)
8
>>> my_experiment(4)
16
```

3. Access the results of the experiment:

```python
>>> my_experiment.observations()
[Observation(<id1>, {'a': 2, 'b': 3} → 8}),
Observation(<id2>, {'a': 4, 'b': 2} → 16})]
```

If you have `pandas` installed, you can also access these results as a `DataFrame`:

```python
>>> my_experiment.to_dataframe()
      id  config.a  config.b  result
0  <id1>         2         3       8
1  <id2>         4         2      16
```

## Documentation

For more information, see the [documentation](https://jla-gardner.github.io/digital-experiments/).
