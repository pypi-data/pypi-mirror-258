[build-system]
requires = ["poetry-core", "setuptools"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "readmeai"
version = "0.5.061"
description = "ðŸ‘¾ Automated README file generator, powered by large language model APIs."
authors = ["Eli <egsalamie@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/eli64s/readme-ai"
documentation = "https://eli64s.github.io/readme-ai"
keywords = [
    "python",
    "markdown",
    "readme",
    "generator",
    "developer-tools",
    "documentation",
    "documentation-generator",
    "readme-md",
    "readme-generator",
    "automated-readme",
    "readme-md-generator",
    "shieldsio-badges",
    "openai",
    "gemini-pro",
    "vertex-ai",
    "chatgpt",
    "gpt-4",
    "ai",
    "llm",
    "llms",
]
include = ["readmeai", "readmeai.*"]

[tool.poetry.scripts]
readmeai = "readmeai.cli.main:main"

[tool.poetry.dependencies]
python = "^3.9,<4.0.0"
aiohttp = "^3.9.3"
click = "^8.1.7"
colorlog = "^6.7.0"
gitpython = "^3.1.31"
google-cloud-aiplatform = "^1.40.0"
# ollama = "^0.1.6"
openai = "1.12.0"
pydantic = ">=1.10.9,<2.0.0"
pyyaml = "^6.0"
tenacity = "^8.2.2"
tiktoken = "^0.4.0"
toml = "^0.10.2"
setuptools = "^69.0.3"

[tool.poetry.group.dev.dependencies]
ruff = "*"

[tool.poetry.group.test.dependencies]
pytest = "=7.4.4"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-randomly = "*"
pytest-sugar = "*"
pytest-xdist = "*"

[tool.poetry.group.docs.dependencies]
mkdocs = "*"
mkdocs-material = "*"

[tool.ruff]
exclude = [
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pytest_cache",
    ".ruff_cache",
    ".vscode",
]
line-length = 79

[tool.ruff.format]
quote-style = "double"
docstring-code-format = true
docstring-code-line-length = 20

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = [
    "E501",  # Line too long
]

[tool.coverage.run]
source = ["readmeai", "tests"]
omit = [
    "tests/*",
    "*__init__.py",
    "*/__init__.py",
    "noxfile.py",
    "readmeai/templates/*.py",
    "readmeai/ui/*.py",
    "readmeai/parsers/cicd/*.py",
    "readmeai/parsers/infrastructure/*.py",
    "readmeai/parsers/orchestration/*.py",
    "readmeai/parsers/configuration/ansible.py",
    "readmeai/parsers/configuration/apache.py",
    "readmeai/parsers/configuration/nginx.py",
    "readmeai/parsers/configuration/properties.py",
    "readmeai/parsers/package/compose.py",
    "readmeai/parsers/package/gem.py",
    "readmeai/parsers/package/pip.py",
    "readmeai/parsers/package/nuget.py",
    "readmeai/parsers/package/yarn.py",
]

[tool.coverage.report]
fail_under = 80
show_missing = true

[tool.coverage.xml]
output = "coverage.xml"
