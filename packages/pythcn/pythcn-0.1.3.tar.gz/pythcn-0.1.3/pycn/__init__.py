def pycn_run(func):
    import re
    
    module={
        "数学":"math",
        "时间":"time",
        "操作系统":"os",
        "正则表达式":"re",
        "命令行":"sys",
        "随机":"random"
    }
    
    keyword={       
        #随机库函数
        "种子":["seed",1],
        "随机数":["random",1],
        "随机整数":["randint",1],
        "随机小数":["uniform",1],
        "随机范围":["randrange",1],
        "随机字节":["randbytes",1],
        "选择":["choice",1],
        "打乱顺序":["shuffle",1],
        
        #数学库函数
        "向上取整":["ceil",1],
        "向下取整":["floor",1],
        "以e为底的对数":["log",1],
        "以2为底的对数":["log2",1],
        "以10为底的对数":["log10",1],
        "平方根":["sqrt",1],
        "e的次幂":["exp",1],
        "最大公因数":["gcd",1],
        "最大公约数":["gcd",1],
        "正弦":["sin",1],
        "余弦":["cos",1],
        "正切":["tan",1],
        "反正弦":["asin",1],
        "反余弦":["acos",1],
        "反正切":["atan",1],
        "双曲正弦":["sinh",1],
        "双曲余弦":["cosh",1],
        "双曲正切":["tanh",1],
        "反双曲正弦":["asinh",1],
        "反双曲余弦":["acosh",1],
        "反双曲正切":["atanh",1],
        "圆周率":["pi",3],
        "自然对数":["e",3],
        "无穷大":["inf",3],
        "非数字":["nan",3],
        
        #时间库函数
        "时间戳":["time",1],
        "睡眠":["sleep",1],
        "解析时间":["strptime",1],
        "格式化时间":["strftime",1],
        "世界时间":["gmtime",1],
        "当地时间":["localtime",1],
        
        #操作系统库
        "系统运行":["system",1],
        "获取当前目录":["getcwd",1],
        "获取进程ID":["getpid",1],
        "获取用户ID":["getuid",1],
        "获取组ID":["getgid",1],
        "更改工作目录":["chdir",1],
        "更改权限":["chmod",1],
        "更改根目录":["chroot",1],
        "重命名":["rename",1],
        "删除":["remove",1],
        "目录列表":["listdir",1],
        "创建目录":["mkdir",1],
        "删除目录":["rmdir",1],
        
        #命令行库
        "参数":["argv",3],
        "版本":["version",3],
        "平台":["platform",3],
        "模块":["modules",3],
        "输入流":["__stdin__",3],
        "输出流":["__stdout__",3],
        "。输入":[".read",1],
        "。输出":[".write",1],
        "。输出在一行":[".writelines",1],
        "退出":["exit",1],
        "获取对象大小":["getsizeof",1],
        "获取默认编码格式":["getdefaultencoding",1],
        "获取Windows版本":["getwindowsversion",1],
        
        #内置函数
        "绝对值":["abs",1],
        "全部":["all",1],
        "任意":["any",1],
        "代码":["ascii",1],
        "二进制":["bin",1],
        "布尔值":["bool",1],
        "字节数组":["bytearray",1],
        "字节":["bytes",1],
        "可调用":["callable",1],
        "字符":["chr",1],
        "类方法":["classmethod",1],
        "编译":["compile",1],
        "复数":["complex",1],
        "删除属性":["delattr",1],
        "字典":["dict",1],
        "目录":["dir",1],
        "带余除法":["divmod",1],
        "枚举":["enumerate",1],
        "解析":["eval",1],
        "执行":["exec",1],
        "过滤":["filter",1],
        "浮点数":["float",1],
        "格式化":["format",1],
        "冻结集合":["frozenset",1],
        "获取属性":["getattr",1],
        "全局变量":["globals",1],
        "包含属性":["hasattr",1],
        "哈希值":["hash",1],
        "帮助":["help",1],
        "十六进制":["hex",1],
        "地址":["id",1],
        "输入":["input",1],
        "整数":["int",1],
        "是否为类":["isinstance",1],
        "是否子类":["issubclass",1],
        "迭代":["iter",1],
        "长度":["len",1],
        "列表":["list",1],
        "局部变量":["locals",1],
        "映射":["map",1],
        "最大值":["max",1],
        "最小值":["min",1],
        "内存查看":["memoryview",1],
        "下一个":["next",1],
        "对象":["object",1],
        "打开":["open",1],
        "八进制":["oct",1],
        "顺序":["ord",1],
        "幂":["pow",1],
        "输出":["print",1],
        "属性":["property",1],
        "范围":["range",1],
        "解释":["repr",1],
        "反转":["reversed",1],
        "四舍五入":["round",1],
        "集合":["set",1],
        "设置属性":["setattr",1],
        "切片":["slice",1],
        "排序":["sorted",1],
        "静态方法":["staticmethod",1],
        "字符串":["str",1],
        "求和":["sum",1],
        "继承":["super",1],
        "元组":["tuple",1],
        "类型":["type",1],
        "变量":["vars",1],
        "打包":["zip",1],
        "导库":["__import__",1],

        
        #类的魔法方法
        "-初始化-":["__init__",1],
        "-创建-":["__new__",1],
        "-删除-":["__del__",1],
        "-调用-":["__call__",1],
        "-获取属性-":["__getattr__",1],
        "-设置属性-":["__setattr__",1],
        "-删除属性-":["__delattr__",1],
        "-目录-":["__dir__",1],
        "-长度-":["__len__",1],
        "-加法-":["__add__",1],
        "-减法-":["__sub__",1],
        "-乘法-":["__mul__",1],
        "-除法-":["__truediv__",1],
        "-整除-":["__floordiv__",1],
        "-取模-":["__mod__",1],
        "-带余除法-":["__divmod__",1],
        "-求幂-":["__pow__",1],
        "-小于-":["__lt__",1],
        "-大于-":["__gt__",1],
        "-等于-":["__eq__",1],
        "-小于等于-":["__le__",1],
        "-大于等于-":["__ge__",1],
        "-不等于-":["__ne__",1],
        "-位与-":["__and__",1],
        "-位或-":["__or__",1],
        "-位异或-":["__xor__",1],
        "-左移-":["__lshift__",1],
        "-右移-":["__rshift__",1],
        "-反加法-":["__radd__",1],
        "-反减法-":["__rsub__",1],
        "-反乘法-":["__rmul__",1],
        "-反除法-":["__rtruediv__",1],
        "-反整除-":["__rfloordiv__",1],
        "-反取模-":["__rmod__",1],
        "-反求幂-":["__rpow__",1],
        "-反位与-":["__rand__",1],
        "-反位或-":["__ror__",1],
        "-反位异或-":["__rxor__",1],
        "-反左移-":["__rlshift__",1],
        "-反右移-":["__rrshift__",1],
        "-赋值加法-":["__iadd__",1],
        "-赋值减法-":["__isub__",1],
        "-赋值乘法-":["__imul__",1],
        "-赋值除法-":["__itruediv__",1],
        "-赋值整除-":["__ifloordiv__",1],
        "-赋值取模-":["__imod__",1],
        "-赋值求幂-":["__ipow__",1],
        "-赋值位与-":["__iand__",1],
        "-赋值位或-":["__ior__",1],
        "-赋值位异或-":["__ixor__",1],
        "-赋值左移-":["__ilshift__",1],
        "-赋值右移-":["__irshift__",1],
        "-正-":["__pos__",1],
        "-负-":["__neg__",1],
        "-绝对值-":["__abs__",1],
        "-取反-":["__invert__",1],
        "-向上取整-":["__ceil__",1],
        "-向下取整-":["__floor__",1],
        "-四舍五入-":["__round__",1],
        "-存在-":["__contains__",1],
        "-表示-":["__repr__",1],
        "-格式化-":["__format__",1],
        "-整数-":["__int__",1],
        "-浮点数-":["__float__",1],
        "-复数-":["__complex__",1],
        "-布尔值-":["__bool__",1],
        "-字符串-":["__str__",1],
        "-列表-":["__list__",1],
        "-字典-":["__dict__",1],
        "-进入-":["__enter__",1],
        "-退出-":["__exit__",1],
        "-迭代-":["__iter__",1],
        "-下一个-":["__next__",1],
        
        #关键字
        "导入":["import",2],
        "从":["from",2],
        "作为":["as",2],
        "否则如果":["elif",2],
        "如果":["if",2],
        "否则":["else",2],
        "匹配":["match",2],
        "情况":["case",2],
        "当":["while",2],
        "对于":["for",2],
        "不在":["not in",2],
        "在":["in",2],
        "不是":["is not",2],
        "是":["is",2],
        "用":["with",2],
        "举起":["raise",2],
        "断言":["assert",2],
        "尝试":["try",3],
        "除了":["except",2],
        "最后":["finally",3],
        "定义":["def",2],
        "匿名函数":["lambda",2],
        "类":["class",2],
        "全局":["global",2],
        "返回":["return",2],
        "生成":["yield",2],
        "删除":["del",2],
        " 与":["and",2],
        " 或":["or",2],
        "非":["not",2],
        "停止":["break",3],
        "继续":["continue",3],
        "通过":["pass",3],
        "真":["True",3],
        "假":["False",3],
        "空":["None",3],
        "自己":["self",3],
        "原类":["cls",3]
    }
    
    symbol={
        "（":"(",
        "）":")",
        "【":"[",
        "】":"]",
        "｛":"{",
        "｝":"}",
        "《":"<",
        "》":">",
        "‘":"\'",
        "’":"\'",
        "“":"\"",
        "”":"\"",
        "，":",",
        "。":".",
        "：":":",
        "；":";",
        "—":"_",
        "、":"\\"
    }
    
    code=func.__doc__
    code=code.split("\n")
    code=[c[4:len(c)] for c in code]
    code="\n".join(code)
    
    for k in keyword:
        kw=keyword[k][0]
        mode=keyword[k][1]
        if mode==1:
            reg=fr"{k}（.*?）"
            ans=lambda x:f"{kw}({x.group()[len(k)+1:-1]})"
        elif mode==2:
            reg=fr"{k} .*?"
            ans=lambda x:f"{kw} {x.group()[len(k)+1:]}"
        elif mode==3:
            reg=k
            ans=lambda x:kw
        elif mode==4:
            reg=fr"\-{k}\-（.*?）"
            ans=lambda x:f"__{kw}__({x.group()[len(k)+3:-1]})"
        while re.findall(reg,code):
            code=re.sub(reg,ans,code)
    
    for s in symbol:
        code=code.replace(s,symbol[s])
        
    for m in module:
        code=code.replace(m,module[m])
        
    for s in symbol:
        code=code.replace("\\"+symbol[s],s)
        
    for m in module:
        code=code.replace("\\"+module[m],m)
    
    exec(code)

"""
教程：https://pypi.org/project/pythcn/
"""