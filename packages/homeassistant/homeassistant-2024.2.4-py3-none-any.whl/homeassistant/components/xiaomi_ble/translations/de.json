{
    "config": {
        "abort": {
            "already_configured": "Ger\u00e4t ist bereits konfiguriert",
            "already_in_progress": "Der Konfigurationsablauf wird bereits ausgef\u00fchrt",
            "no_devices_found": "Keine Ger\u00e4te im Netzwerk gefunden",
            "reauth_successful": "Die erneute Authentifizierung war erfolgreich"
        },
        "error": {
            "decryption_failed": "Der bereitgestellte Bindkey funktionierte nicht, Sensordaten konnten nicht entschl\u00fcsselt werden. Bitte \u00fcberpr\u00fcfe es und versuche es erneut.",
            "expected_24_characters": "Erwartet wird ein 24-stelliger hexadezimaler Bindkey.",
            "expected_32_characters": "Erwartet wird ein 32-stelliger hexadezimaler Bindkey."
        },
        "flow_title": "{name}",
        "step": {
            "bluetooth_confirm": {
                "description": "M\u00f6chtest du {name} einrichten?"
            },
            "confirm_slow": {
                "description": "Von diesem Ger\u00e4t wurde in der letzten Minute kein Broadcast gesendet, sodass wir nicht sicher sind, ob dieses Ger\u00e4t Verschl\u00fcsselung verwendet oder nicht. Dies kann daran liegen, dass das Ger\u00e4t ein langsames Sendeintervall verwendet. Best\u00e4tige, dass du das Ger\u00e4t trotzdem hinzuf\u00fcgen m\u00f6chtest. Wenn das n\u00e4chste Mal ein Broadcast empfangen wird, wirst du aufgefordert, den Bindkey einzugeben, falls er ben\u00f6tigt wird."
            },
            "get_encryption_key_4_5": {
                "data": {
                    "bindkey": "Bindkey"
                },
                "description": "Die vom Sensor \u00fcbertragenen Sensordaten sind verschl\u00fcsselt. Um sie zu entschl\u00fcsseln, ben\u00f6tigen wir einen 32-stelligen hexadezimalen Bindkey."
            },
            "get_encryption_key_legacy": {
                "data": {
                    "bindkey": "Bindkey"
                },
                "description": "Die vom Sensor \u00fcbertragenen Sensordaten sind verschl\u00fcsselt. Um sie zu entschl\u00fcsseln, ben\u00f6tigen wir einen 24-stelligen hexadezimalen Bindkey."
            },
            "user": {
                "data": {
                    "address": "Ger\u00e4t"
                },
                "description": "W\u00e4hle ein Ger\u00e4t zum Einrichten aus"
            }
        }
    },
    "device_automation": {
        "trigger_subtype": {
            "double_press": "Doppelt dr\u00fccken",
            "long_press": "Langes Dr\u00fccken",
            "motion_detected": "Bewegung erkannt",
            "press": "Dr\u00fccken",
            "rotate_left": "Nach links drehen",
            "rotate_left_pressed": "Nach links drehen (gedr\u00fcckt)",
            "rotate_right": "Nach rechts drehen",
            "rotate_right_pressed": "Nach rechts drehen (gedr\u00fcckt)"
        },
        "trigger_type": {
            "button": "Taste \u201e{subtype}\u201c",
            "button_air_exchange": "Schaltfl\u00e4che Luftaustausch \"{subtype}\"",
            "button_brightness": "Schaltfl\u00e4che Helligkeit \"{subtype}\"",
            "button_color_temperature": "Schaltfl\u00e4che Farbtemperatur \"{subtype}\"",
            "button_decrease_speed": "Schaltfl\u00e4che Geschwindigkeit verringern \"{subtype}\"",
            "button_decrease_wind_speed": "Schaltfl\u00e4che Windgeschwindigkeit verringern \"{subtype}\"",
            "button_dry": "Schaltfl\u00e4che Trocken \"{subtype}\"",
            "button_fan": "Schaltfl\u00e4che L\u00fcfter \"{subtype}\"",
            "button_heat": "Schaltfl\u00e4che W\u00e4rmen \"{subtype}\"",
            "button_increase_speed": "Schaltfl\u00e4che Geschwindigkeit erh\u00f6hen \"{subtype}\"",
            "button_increase_wind_speed": "Schaltfl\u00e4che Windgeschwindigkeit erh\u00f6hen \"{subtype}\"",
            "button_left": "Taste Links \"{subtype}\"",
            "button_light": "Schaltfl\u00e4che Licht \"{subtype}\"",
            "button_m": "Schaltfl\u00e4che M \"{subtype}\"",
            "button_middle": "Taste Mitte \"{subtype}\"",
            "button_min": "Schaltfl\u00e4che Min \"{subtype}\"",
            "button_off": "Schaltfl\u00e4che Aus \"{subtype}\"",
            "button_on": "Schaltfl\u00e4che An \"{subtype}\"",
            "button_plus": "Schaltfl\u00e4che Plus \"{subtype}\"",
            "button_power": "Schaltfl\u00e4che Power \"{subtype}\"",
            "button_right": "Taste rechts \"{subtype}\"",
            "button_stop": "Schaltfl\u00e4che Stopp \"{subtype}\"",
            "button_swing": "Schaltfl\u00e4che Schwingen \"{subtype}\"",
            "button_timer_30_minutes": "Schaltfl\u00e4che Timer 30 Minuten \"{subtype}\"",
            "button_timer_60_minutes": "Schaltfl\u00e4che Timer 30 Minuten \"{subtype}\"",
            "button_wind_mode": "Schaltfl\u00e4che Windmodus \"{subtype}\"",
            "button_wind_speed": "Schaltfl\u00e4che Windgeschwindigkeit \"{subtype}\"",
            "cube": "{subtype}",
            "dimmer": "{subtype}",
            "motion": "{subtype}",
            "motion_detected": "Bewegung erkannt"
        }
    },
    "entity": {
        "event": {
            "button": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "double_press": "Doppeltes Dr\u00fccken",
                            "long_press": "Langes Dr\u00fccken",
                            "press": "Dr\u00fccken"
                        }
                    }
                }
            },
            "cube": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "rotate_left": "Nach links drehen",
                            "rotate_right": "Nach rechts drehen"
                        }
                    }
                }
            },
            "dimmer": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "long_press": "Langes Dr\u00fccken",
                            "press": "Dr\u00fccken",
                            "rotate_left": "Nach links drehen",
                            "rotate_left_pressed": "Nach links drehen (gedr\u00fcckt)",
                            "rotate_right": "Nach rechts drehen",
                            "rotate_right_pressed": "Nach rechts drehen (gedr\u00fcckt)"
                        }
                    }
                }
            },
            "motion": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "motion_detected": "Bewegung erkannt"
                        }
                    }
                }
            }
        }
    }
}