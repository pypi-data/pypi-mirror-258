Metadata-Version: 2.1
Name: hydrorolldemo
Version: 0.1.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Programming Language :: Rust
Classifier: Operating System :: POSIX
Classifier: Operating System :: MacOS :: MacOS X
Requires-Dist: pytest >=3.2.5 ; extra == 'dev'
Requires-Dist: pytest-benchmark >=3.1.1 ; extra == 'dev'
Requires-Dist: pip >=8.1.2 ; extra == 'dev'
Provides-Extra: dev
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM

# word-count

Demonstrates searching for a file in plain python, with rust singlethreaded and with rust multithreaded.

## Build

```shell
pip install .
```

## Usage

```python
from word_count import search_py, search, search_sequential

search_py("foo bar", "foo")
search("foo bar", "foo")
search_sequential("foo bar", "foo")
```

## Testing

To test install nox globally and run

```shell
nox
```

## Benchmark

To test install nox globally and run

```shell
nox -s bench
```

## Copying this example

Use [`cargo-generate`](https://crates.io/crates/cargo-generate):

```bash
$ cargo install cargo-generate
$ cargo generate --git https://github.com/PyO3/pyo3 examples/word-count
```

(`cargo generate` will take a little while to clone the PyO3 repo first; be patient when waiting for the command to run.)

